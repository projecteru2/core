// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TriOpt int32

const (
	TriOpt_KEEP  TriOpt = 0
	TriOpt_TRUE  TriOpt = 1
	TriOpt_FALSE TriOpt = 2
)

var TriOpt_name = map[int32]string{
	0: "KEEP",
	1: "TRUE",
	2: "FALSE",
}

var TriOpt_value = map[string]int32{
	"KEEP":  0,
	"TRUE":  1,
	"FALSE": 2,
}

func (x TriOpt) String() string {
	return proto.EnumName(TriOpt_name, int32(x))
}

func (TriOpt) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

type BuildImageOptions_BuildMethod int32

const (
	BuildImageOptions_SCM   BuildImageOptions_BuildMethod = 0
	BuildImageOptions_RAW   BuildImageOptions_BuildMethod = 1
	BuildImageOptions_EXIST BuildImageOptions_BuildMethod = 2
)

var BuildImageOptions_BuildMethod_name = map[int32]string{
	0: "SCM",
	1: "RAW",
	2: "EXIST",
}

var BuildImageOptions_BuildMethod_value = map[string]int32{
	"SCM":   0,
	"RAW":   1,
	"EXIST": 2,
}

func (x BuildImageOptions_BuildMethod) String() string {
	return proto.EnumName(BuildImageOptions_BuildMethod_name, int32(x))
}

func (BuildImageOptions_BuildMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{39, 0}
}

type DeployOptions_Strategy int32

const (
	DeployOptions_AUTO   DeployOptions_Strategy = 0
	DeployOptions_FILL   DeployOptions_Strategy = 1
	DeployOptions_EACH   DeployOptions_Strategy = 2
	DeployOptions_GLOBAL DeployOptions_Strategy = 3
	DeployOptions_DUMMY  DeployOptions_Strategy = 99
)

var DeployOptions_Strategy_name = map[int32]string{
	0:  "AUTO",
	1:  "FILL",
	2:  "EACH",
	3:  "GLOBAL",
	99: "DUMMY",
}

var DeployOptions_Strategy_value = map[string]int32{
	"AUTO":   0,
	"FILL":   1,
	"EACH":   2,
	"GLOBAL": 3,
	"DUMMY":  99,
}

func (x DeployOptions_Strategy) String() string {
	return proto.EnumName(DeployOptions_Strategy_name, int32(x))
}

func (DeployOptions_Strategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{47, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type CoreInfo struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Revison              string   `protobuf:"bytes,2,opt,name=revison,proto3" json:"revison,omitempty"`
	BuildAt              string   `protobuf:"bytes,3,opt,name=build_at,json=buildAt,proto3" json:"build_at,omitempty"`
	GolangVersion        string   `protobuf:"bytes,4,opt,name=golang_version,json=golangVersion,proto3" json:"golang_version,omitempty"`
	OsArch               string   `protobuf:"bytes,5,opt,name=os_arch,json=osArch,proto3" json:"os_arch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreInfo) Reset()         { *m = CoreInfo{} }
func (m *CoreInfo) String() string { return proto.CompactTextString(m) }
func (*CoreInfo) ProtoMessage()    {}
func (*CoreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{1}
}

func (m *CoreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreInfo.Unmarshal(m, b)
}
func (m *CoreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreInfo.Marshal(b, m, deterministic)
}
func (m *CoreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreInfo.Merge(m, src)
}
func (m *CoreInfo) XXX_Size() int {
	return xxx_messageInfo_CoreInfo.Size(m)
}
func (m *CoreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CoreInfo proto.InternalMessageInfo

func (m *CoreInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CoreInfo) GetRevison() string {
	if m != nil {
		return m.Revison
	}
	return ""
}

func (m *CoreInfo) GetBuildAt() string {
	if m != nil {
		return m.BuildAt
	}
	return ""
}

func (m *CoreInfo) GetGolangVersion() string {
	if m != nil {
		return m.GolangVersion
	}
	return ""
}

func (m *CoreInfo) GetOsArch() string {
	if m != nil {
		return m.OsArch
	}
	return ""
}

type ServiceStatus struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	IntervalInSecond     int64    `protobuf:"varint,2,opt,name=interval_in_second,json=intervalInSecond,proto3" json:"interval_in_second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceStatus) Reset()         { *m = ServiceStatus{} }
func (m *ServiceStatus) String() string { return proto.CompactTextString(m) }
func (*ServiceStatus) ProtoMessage()    {}
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{2}
}

func (m *ServiceStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceStatus.Unmarshal(m, b)
}
func (m *ServiceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceStatus.Marshal(b, m, deterministic)
}
func (m *ServiceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceStatus.Merge(m, src)
}
func (m *ServiceStatus) XXX_Size() int {
	return xxx_messageInfo_ServiceStatus.Size(m)
}
func (m *ServiceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceStatus proto.InternalMessageInfo

func (m *ServiceStatus) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *ServiceStatus) GetIntervalInSecond() int64 {
	if m != nil {
		return m.IntervalInSecond
	}
	return 0
}

type ListWorkloadsOptions struct {
	Appname              string            `protobuf:"bytes,1,opt,name=appname,proto3" json:"appname,omitempty"`
	Entrypoint           string            `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Nodename             string            `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Limit                int64             `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListWorkloadsOptions) Reset()         { *m = ListWorkloadsOptions{} }
func (m *ListWorkloadsOptions) String() string { return proto.CompactTextString(m) }
func (*ListWorkloadsOptions) ProtoMessage()    {}
func (*ListWorkloadsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{3}
}

func (m *ListWorkloadsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkloadsOptions.Unmarshal(m, b)
}
func (m *ListWorkloadsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkloadsOptions.Marshal(b, m, deterministic)
}
func (m *ListWorkloadsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkloadsOptions.Merge(m, src)
}
func (m *ListWorkloadsOptions) XXX_Size() int {
	return xxx_messageInfo_ListWorkloadsOptions.Size(m)
}
func (m *ListWorkloadsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkloadsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkloadsOptions proto.InternalMessageInfo

func (m *ListWorkloadsOptions) GetAppname() string {
	if m != nil {
		return m.Appname
	}
	return ""
}

func (m *ListWorkloadsOptions) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

func (m *ListWorkloadsOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *ListWorkloadsOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ListWorkloadsOptions) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// 对的, protobuf 就是这样...
type Pod struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pod) Reset()         { *m = Pod{} }
func (m *Pod) String() string { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()    {}
func (*Pod) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{4}
}

func (m *Pod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pod.Unmarshal(m, b)
}
func (m *Pod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pod.Marshal(b, m, deterministic)
}
func (m *Pod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pod.Merge(m, src)
}
func (m *Pod) XXX_Size() int {
	return xxx_messageInfo_Pod.Size(m)
}
func (m *Pod) XXX_DiscardUnknown() {
	xxx_messageInfo_Pod.DiscardUnknown(m)
}

var xxx_messageInfo_Pod proto.InternalMessageInfo

func (m *Pod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pod) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type Pods struct {
	Pods                 []*Pod   `protobuf:"bytes,1,rep,name=pods,proto3" json:"pods,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pods) Reset()         { *m = Pods{} }
func (m *Pods) String() string { return proto.CompactTextString(m) }
func (*Pods) ProtoMessage()    {}
func (*Pods) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{5}
}

func (m *Pods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pods.Unmarshal(m, b)
}
func (m *Pods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pods.Marshal(b, m, deterministic)
}
func (m *Pods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pods.Merge(m, src)
}
func (m *Pods) XXX_Size() int {
	return xxx_messageInfo_Pods.Size(m)
}
func (m *Pods) XXX_DiscardUnknown() {
	xxx_messageInfo_Pods.DiscardUnknown(m)
}

var xxx_messageInfo_Pods proto.InternalMessageInfo

func (m *Pods) GetPods() []*Pod {
	if m != nil {
		return m.Pods
	}
	return nil
}

type PodResource struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodesResource        []*NodeResource `protobuf:"bytes,2,rep,name=nodes_resource,json=nodesResource,proto3" json:"nodes_resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PodResource) Reset()         { *m = PodResource{} }
func (m *PodResource) String() string { return proto.CompactTextString(m) }
func (*PodResource) ProtoMessage()    {}
func (*PodResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{6}
}

func (m *PodResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodResource.Unmarshal(m, b)
}
func (m *PodResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodResource.Marshal(b, m, deterministic)
}
func (m *PodResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodResource.Merge(m, src)
}
func (m *PodResource) XXX_Size() int {
	return xxx_messageInfo_PodResource.Size(m)
}
func (m *PodResource) XXX_DiscardUnknown() {
	xxx_messageInfo_PodResource.DiscardUnknown(m)
}

var xxx_messageInfo_PodResource proto.InternalMessageInfo

func (m *PodResource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PodResource) GetNodesResource() []*NodeResource {
	if m != nil {
		return m.NodesResource
	}
	return nil
}

type NodeResource struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CpuPercent           float64  `protobuf:"fixed64,2,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemoryPercent        float64  `protobuf:"fixed64,3,opt,name=memory_percent,json=memoryPercent,proto3" json:"memory_percent,omitempty"`
	StoragePercent       float64  `protobuf:"fixed64,4,opt,name=storage_percent,json=storagePercent,proto3" json:"storage_percent,omitempty"`
	VolumePercent        float64  `protobuf:"fixed64,5,opt,name=volume_percent,json=volumePercent,proto3" json:"volume_percent,omitempty"`
	Diffs                []string `protobuf:"bytes,6,rep,name=diffs,proto3" json:"diffs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeResource) Reset()         { *m = NodeResource{} }
func (m *NodeResource) String() string { return proto.CompactTextString(m) }
func (*NodeResource) ProtoMessage()    {}
func (*NodeResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{7}
}

func (m *NodeResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResource.Unmarshal(m, b)
}
func (m *NodeResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResource.Marshal(b, m, deterministic)
}
func (m *NodeResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResource.Merge(m, src)
}
func (m *NodeResource) XXX_Size() int {
	return xxx_messageInfo_NodeResource.Size(m)
}
func (m *NodeResource) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResource.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResource proto.InternalMessageInfo

func (m *NodeResource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeResource) GetCpuPercent() float64 {
	if m != nil {
		return m.CpuPercent
	}
	return 0
}

func (m *NodeResource) GetMemoryPercent() float64 {
	if m != nil {
		return m.MemoryPercent
	}
	return 0
}

func (m *NodeResource) GetStoragePercent() float64 {
	if m != nil {
		return m.StoragePercent
	}
	return 0
}

func (m *NodeResource) GetVolumePercent() float64 {
	if m != nil {
		return m.VolumePercent
	}
	return 0
}

func (m *NodeResource) GetDiffs() []string {
	if m != nil {
		return m.Diffs
	}
	return nil
}

type ListNetworkOptions struct {
	Podname              string   `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Driver               string   `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNetworkOptions) Reset()         { *m = ListNetworkOptions{} }
func (m *ListNetworkOptions) String() string { return proto.CompactTextString(m) }
func (*ListNetworkOptions) ProtoMessage()    {}
func (*ListNetworkOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{8}
}

func (m *ListNetworkOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworkOptions.Unmarshal(m, b)
}
func (m *ListNetworkOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworkOptions.Marshal(b, m, deterministic)
}
func (m *ListNetworkOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworkOptions.Merge(m, src)
}
func (m *ListNetworkOptions) XXX_Size() int {
	return xxx_messageInfo_ListNetworkOptions.Size(m)
}
func (m *ListNetworkOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworkOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworkOptions proto.InternalMessageInfo

func (m *ListNetworkOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *ListNetworkOptions) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

type ConnectNetworkOptions struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Ipv4                 string   `protobuf:"bytes,3,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectNetworkOptions) Reset()         { *m = ConnectNetworkOptions{} }
func (m *ConnectNetworkOptions) String() string { return proto.CompactTextString(m) }
func (*ConnectNetworkOptions) ProtoMessage()    {}
func (*ConnectNetworkOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{9}
}

func (m *ConnectNetworkOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectNetworkOptions.Unmarshal(m, b)
}
func (m *ConnectNetworkOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectNetworkOptions.Marshal(b, m, deterministic)
}
func (m *ConnectNetworkOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectNetworkOptions.Merge(m, src)
}
func (m *ConnectNetworkOptions) XXX_Size() int {
	return xxx_messageInfo_ConnectNetworkOptions.Size(m)
}
func (m *ConnectNetworkOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectNetworkOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectNetworkOptions proto.InternalMessageInfo

func (m *ConnectNetworkOptions) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *ConnectNetworkOptions) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ConnectNetworkOptions) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *ConnectNetworkOptions) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type DisconnectNetworkOptions struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectNetworkOptions) Reset()         { *m = DisconnectNetworkOptions{} }
func (m *DisconnectNetworkOptions) String() string { return proto.CompactTextString(m) }
func (*DisconnectNetworkOptions) ProtoMessage()    {}
func (*DisconnectNetworkOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{10}
}

func (m *DisconnectNetworkOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectNetworkOptions.Unmarshal(m, b)
}
func (m *DisconnectNetworkOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectNetworkOptions.Marshal(b, m, deterministic)
}
func (m *DisconnectNetworkOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectNetworkOptions.Merge(m, src)
}
func (m *DisconnectNetworkOptions) XXX_Size() int {
	return xxx_messageInfo_DisconnectNetworkOptions.Size(m)
}
func (m *DisconnectNetworkOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectNetworkOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectNetworkOptions proto.InternalMessageInfo

func (m *DisconnectNetworkOptions) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *DisconnectNetworkOptions) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *DisconnectNetworkOptions) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type Network struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Subnets              []string `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{11}
}

func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Network) GetSubnets() []string {
	if m != nil {
		return m.Subnets
	}
	return nil
}

type Networks struct {
	Networks             []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Networks) Reset()         { *m = Networks{} }
func (m *Networks) String() string { return proto.CompactTextString(m) }
func (*Networks) ProtoMessage()    {}
func (*Networks) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{12}
}

func (m *Networks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Networks.Unmarshal(m, b)
}
func (m *Networks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Networks.Marshal(b, m, deterministic)
}
func (m *Networks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Networks.Merge(m, src)
}
func (m *Networks) XXX_Size() int {
	return xxx_messageInfo_Networks.Size(m)
}
func (m *Networks) XXX_DiscardUnknown() {
	xxx_messageInfo_Networks.DiscardUnknown(m)
}

var xxx_messageInfo_Networks proto.InternalMessageInfo

func (m *Networks) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

type Node struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Endpoint             string            `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Podname              string            `protobuf:"bytes,3,opt,name=podname,proto3" json:"podname,omitempty"`
	Cpu                  map[string]int32  `protobuf:"bytes,4,rep,name=cpu,proto3" json:"cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CpuUsed              float64           `protobuf:"fixed64,5,opt,name=cpu_used,json=cpuUsed,proto3" json:"cpu_used,omitempty"`
	Memory               int64             `protobuf:"varint,6,opt,name=memory,proto3" json:"memory,omitempty"`
	MemoryUsed           int64             `protobuf:"varint,7,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`
	Available            bool              `protobuf:"varint,8,opt,name=available,proto3" json:"available,omitempty"`
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InitMemory           int64             `protobuf:"varint,10,opt,name=init_memory,json=initMemory,proto3" json:"init_memory,omitempty"`
	InitCpu              map[string]int32  `protobuf:"bytes,11,rep,name=init_cpu,json=initCpu,proto3" json:"init_cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Info                 string            `protobuf:"bytes,12,opt,name=info,proto3" json:"info,omitempty"`
	Numa                 map[string]string `protobuf:"bytes,13,rep,name=numa,proto3" json:"numa,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NumaMemory           map[string]int64  `protobuf:"bytes,14,rep,name=numa_memory,json=numaMemory,proto3" json:"numa_memory,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Storage              int64             `protobuf:"varint,15,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageUsed          int64             `protobuf:"varint,16,opt,name=storage_used,json=storageUsed,proto3" json:"storage_used,omitempty"`
	InitStorage          int64             `protobuf:"varint,17,opt,name=init_storage,json=initStorage,proto3" json:"init_storage,omitempty"`
	InitVolume           map[string]int64  `protobuf:"bytes,18,rep,name=init_volume,json=initVolume,proto3" json:"init_volume,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Volume               map[string]int64  `protobuf:"bytes,19,rep,name=volume,proto3" json:"volume,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	VolumeUsed           int64             `protobuf:"varint,20,opt,name=volume_used,json=volumeUsed,proto3" json:"volume_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{13}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Node) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *Node) GetCpu() map[string]int32 {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *Node) GetCpuUsed() float64 {
	if m != nil {
		return m.CpuUsed
	}
	return 0
}

func (m *Node) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Node) GetMemoryUsed() int64 {
	if m != nil {
		return m.MemoryUsed
	}
	return 0
}

func (m *Node) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Node) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Node) GetInitMemory() int64 {
	if m != nil {
		return m.InitMemory
	}
	return 0
}

func (m *Node) GetInitCpu() map[string]int32 {
	if m != nil {
		return m.InitCpu
	}
	return nil
}

func (m *Node) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *Node) GetNuma() map[string]string {
	if m != nil {
		return m.Numa
	}
	return nil
}

func (m *Node) GetNumaMemory() map[string]int64 {
	if m != nil {
		return m.NumaMemory
	}
	return nil
}

func (m *Node) GetStorage() int64 {
	if m != nil {
		return m.Storage
	}
	return 0
}

func (m *Node) GetStorageUsed() int64 {
	if m != nil {
		return m.StorageUsed
	}
	return 0
}

func (m *Node) GetInitStorage() int64 {
	if m != nil {
		return m.InitStorage
	}
	return 0
}

func (m *Node) GetInitVolume() map[string]int64 {
	if m != nil {
		return m.InitVolume
	}
	return nil
}

func (m *Node) GetVolume() map[string]int64 {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *Node) GetVolumeUsed() int64 {
	if m != nil {
		return m.VolumeUsed
	}
	return 0
}

type Nodes struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nodes) Reset()         { *m = Nodes{} }
func (m *Nodes) String() string { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()    {}
func (*Nodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{14}
}

func (m *Nodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nodes.Unmarshal(m, b)
}
func (m *Nodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nodes.Marshal(b, m, deterministic)
}
func (m *Nodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nodes.Merge(m, src)
}
func (m *Nodes) XXX_Size() int {
	return xxx_messageInfo_Nodes.Size(m)
}
func (m *Nodes) XXX_DiscardUnknown() {
	xxx_messageInfo_Nodes.DiscardUnknown(m)
}

var xxx_messageInfo_Nodes proto.InternalMessageInfo

func (m *Nodes) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type NodeAvailable struct {
	Nodename             string   `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Podname              string   `protobuf:"bytes,2,opt,name=podname,proto3" json:"podname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeAvailable) Reset()         { *m = NodeAvailable{} }
func (m *NodeAvailable) String() string { return proto.CompactTextString(m) }
func (*NodeAvailable) ProtoMessage()    {}
func (*NodeAvailable) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{15}
}

func (m *NodeAvailable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAvailable.Unmarshal(m, b)
}
func (m *NodeAvailable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAvailable.Marshal(b, m, deterministic)
}
func (m *NodeAvailable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAvailable.Merge(m, src)
}
func (m *NodeAvailable) XXX_Size() int {
	return xxx_messageInfo_NodeAvailable.Size(m)
}
func (m *NodeAvailable) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAvailable.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAvailable proto.InternalMessageInfo

func (m *NodeAvailable) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *NodeAvailable) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

type SetNodeOptions struct {
	Nodename             string            `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	StatusOpt            TriOpt            `protobuf:"varint,2,opt,name=status_opt,json=statusOpt,proto3,enum=pb.TriOpt" json:"status_opt,omitempty"`
	DeltaCpu             map[string]int32  `protobuf:"bytes,3,rep,name=delta_cpu,json=deltaCpu,proto3" json:"delta_cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	DeltaMemory          int64             `protobuf:"varint,4,opt,name=delta_memory,json=deltaMemory,proto3" json:"delta_memory,omitempty"`
	DeltaStorage         int64             `protobuf:"varint,5,opt,name=delta_storage,json=deltaStorage,proto3" json:"delta_storage,omitempty"`
	DeltaNumaMemory      map[string]int64  `protobuf:"bytes,6,rep,name=delta_numa_memory,json=deltaNumaMemory,proto3" json:"delta_numa_memory,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Numa                 map[string]string `protobuf:"bytes,7,rep,name=numa,proto3" json:"numa,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeltaVolume          map[string]int64  `protobuf:"bytes,9,rep,name=delta_volume,json=deltaVolume,proto3" json:"delta_volume,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	WorkloadsDown        bool              `protobuf:"varint,10,opt,name=workloads_down,json=workloadsDown,proto3" json:"workloads_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetNodeOptions) Reset()         { *m = SetNodeOptions{} }
func (m *SetNodeOptions) String() string { return proto.CompactTextString(m) }
func (*SetNodeOptions) ProtoMessage()    {}
func (*SetNodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{16}
}

func (m *SetNodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeOptions.Unmarshal(m, b)
}
func (m *SetNodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeOptions.Marshal(b, m, deterministic)
}
func (m *SetNodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeOptions.Merge(m, src)
}
func (m *SetNodeOptions) XXX_Size() int {
	return xxx_messageInfo_SetNodeOptions.Size(m)
}
func (m *SetNodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeOptions proto.InternalMessageInfo

func (m *SetNodeOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *SetNodeOptions) GetStatusOpt() TriOpt {
	if m != nil {
		return m.StatusOpt
	}
	return TriOpt_KEEP
}

func (m *SetNodeOptions) GetDeltaCpu() map[string]int32 {
	if m != nil {
		return m.DeltaCpu
	}
	return nil
}

func (m *SetNodeOptions) GetDeltaMemory() int64 {
	if m != nil {
		return m.DeltaMemory
	}
	return 0
}

func (m *SetNodeOptions) GetDeltaStorage() int64 {
	if m != nil {
		return m.DeltaStorage
	}
	return 0
}

func (m *SetNodeOptions) GetDeltaNumaMemory() map[string]int64 {
	if m != nil {
		return m.DeltaNumaMemory
	}
	return nil
}

func (m *SetNodeOptions) GetNuma() map[string]string {
	if m != nil {
		return m.Numa
	}
	return nil
}

func (m *SetNodeOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *SetNodeOptions) GetDeltaVolume() map[string]int64 {
	if m != nil {
		return m.DeltaVolume
	}
	return nil
}

func (m *SetNodeOptions) GetWorkloadsDown() bool {
	if m != nil {
		return m.WorkloadsDown
	}
	return false
}

type Workload struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Podname              string            `protobuf:"bytes,2,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodename             string            `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Name                 string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Privileged           bool              `protobuf:"varint,5,opt,name=privileged,proto3" json:"privileged,omitempty"`
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Publish              map[string]string `protobuf:"bytes,7,rep,name=publish,proto3" json:"publish,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Image                string            `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Status               *WorkloadStatus   `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Resource             *Resource         `protobuf:"bytes,10,opt,name=resource,proto3" json:"resource,omitempty"`
	CreateTime           int64             `protobuf:"varint,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Workload) Reset()         { *m = Workload{} }
func (m *Workload) String() string { return proto.CompactTextString(m) }
func (*Workload) ProtoMessage()    {}
func (*Workload) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{17}
}

func (m *Workload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workload.Unmarshal(m, b)
}
func (m *Workload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workload.Marshal(b, m, deterministic)
}
func (m *Workload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workload.Merge(m, src)
}
func (m *Workload) XXX_Size() int {
	return xxx_messageInfo_Workload.Size(m)
}
func (m *Workload) XXX_DiscardUnknown() {
	xxx_messageInfo_Workload.DiscardUnknown(m)
}

var xxx_messageInfo_Workload proto.InternalMessageInfo

func (m *Workload) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Workload) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *Workload) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *Workload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Workload) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *Workload) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Workload) GetPublish() map[string]string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *Workload) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Workload) GetStatus() *WorkloadStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Workload) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *Workload) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type WorkloadStatus struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Running              bool              `protobuf:"varint,2,opt,name=running,proto3" json:"running,omitempty"`
	Healthy              bool              `protobuf:"varint,3,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Networks             map[string]string `protobuf:"bytes,4,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Extension            []byte            `protobuf:"bytes,5,opt,name=extension,proto3" json:"extension,omitempty"`
	Ttl                  int64             `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WorkloadStatus) Reset()         { *m = WorkloadStatus{} }
func (m *WorkloadStatus) String() string { return proto.CompactTextString(m) }
func (*WorkloadStatus) ProtoMessage()    {}
func (*WorkloadStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{18}
}

func (m *WorkloadStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadStatus.Unmarshal(m, b)
}
func (m *WorkloadStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadStatus.Marshal(b, m, deterministic)
}
func (m *WorkloadStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadStatus.Merge(m, src)
}
func (m *WorkloadStatus) XXX_Size() int {
	return xxx_messageInfo_WorkloadStatus.Size(m)
}
func (m *WorkloadStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadStatus proto.InternalMessageInfo

func (m *WorkloadStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WorkloadStatus) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *WorkloadStatus) GetHealthy() bool {
	if m != nil {
		return m.Healthy
	}
	return false
}

func (m *WorkloadStatus) GetNetworks() map[string]string {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *WorkloadStatus) GetExtension() []byte {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *WorkloadStatus) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type WorkloadsStatus struct {
	Status               []*WorkloadStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WorkloadsStatus) Reset()         { *m = WorkloadsStatus{} }
func (m *WorkloadsStatus) String() string { return proto.CompactTextString(m) }
func (*WorkloadsStatus) ProtoMessage()    {}
func (*WorkloadsStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{19}
}

func (m *WorkloadsStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadsStatus.Unmarshal(m, b)
}
func (m *WorkloadsStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadsStatus.Marshal(b, m, deterministic)
}
func (m *WorkloadsStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadsStatus.Merge(m, src)
}
func (m *WorkloadsStatus) XXX_Size() int {
	return xxx_messageInfo_WorkloadsStatus.Size(m)
}
func (m *WorkloadsStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadsStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadsStatus proto.InternalMessageInfo

func (m *WorkloadsStatus) GetStatus() []*WorkloadStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type SetWorkloadsStatusOptions struct {
	Status               []*WorkloadStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetWorkloadsStatusOptions) Reset()         { *m = SetWorkloadsStatusOptions{} }
func (m *SetWorkloadsStatusOptions) String() string { return proto.CompactTextString(m) }
func (*SetWorkloadsStatusOptions) ProtoMessage()    {}
func (*SetWorkloadsStatusOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{20}
}

func (m *SetWorkloadsStatusOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetWorkloadsStatusOptions.Unmarshal(m, b)
}
func (m *SetWorkloadsStatusOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetWorkloadsStatusOptions.Marshal(b, m, deterministic)
}
func (m *SetWorkloadsStatusOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetWorkloadsStatusOptions.Merge(m, src)
}
func (m *SetWorkloadsStatusOptions) XXX_Size() int {
	return xxx_messageInfo_SetWorkloadsStatusOptions.Size(m)
}
func (m *SetWorkloadsStatusOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SetWorkloadsStatusOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SetWorkloadsStatusOptions proto.InternalMessageInfo

func (m *SetWorkloadsStatusOptions) GetStatus() []*WorkloadStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type WorkloadStatusStreamOptions struct {
	Appname              string            `protobuf:"bytes,1,opt,name=appname,proto3" json:"appname,omitempty"`
	Entrypoint           string            `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Nodename             string            `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WorkloadStatusStreamOptions) Reset()         { *m = WorkloadStatusStreamOptions{} }
func (m *WorkloadStatusStreamOptions) String() string { return proto.CompactTextString(m) }
func (*WorkloadStatusStreamOptions) ProtoMessage()    {}
func (*WorkloadStatusStreamOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{21}
}

func (m *WorkloadStatusStreamOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadStatusStreamOptions.Unmarshal(m, b)
}
func (m *WorkloadStatusStreamOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadStatusStreamOptions.Marshal(b, m, deterministic)
}
func (m *WorkloadStatusStreamOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadStatusStreamOptions.Merge(m, src)
}
func (m *WorkloadStatusStreamOptions) XXX_Size() int {
	return xxx_messageInfo_WorkloadStatusStreamOptions.Size(m)
}
func (m *WorkloadStatusStreamOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadStatusStreamOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadStatusStreamOptions proto.InternalMessageInfo

func (m *WorkloadStatusStreamOptions) GetAppname() string {
	if m != nil {
		return m.Appname
	}
	return ""
}

func (m *WorkloadStatusStreamOptions) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

func (m *WorkloadStatusStreamOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *WorkloadStatusStreamOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type WorkloadStatusStreamMessage struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Workload             *Workload       `protobuf:"bytes,2,opt,name=workload,proto3" json:"workload,omitempty"`
	Status               *WorkloadStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Error                string          `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Delete               bool            `protobuf:"varint,5,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WorkloadStatusStreamMessage) Reset()         { *m = WorkloadStatusStreamMessage{} }
func (m *WorkloadStatusStreamMessage) String() string { return proto.CompactTextString(m) }
func (*WorkloadStatusStreamMessage) ProtoMessage()    {}
func (*WorkloadStatusStreamMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{22}
}

func (m *WorkloadStatusStreamMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadStatusStreamMessage.Unmarshal(m, b)
}
func (m *WorkloadStatusStreamMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadStatusStreamMessage.Marshal(b, m, deterministic)
}
func (m *WorkloadStatusStreamMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadStatusStreamMessage.Merge(m, src)
}
func (m *WorkloadStatusStreamMessage) XXX_Size() int {
	return xxx_messageInfo_WorkloadStatusStreamMessage.Size(m)
}
func (m *WorkloadStatusStreamMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadStatusStreamMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadStatusStreamMessage proto.InternalMessageInfo

func (m *WorkloadStatusStreamMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WorkloadStatusStreamMessage) GetWorkload() *Workload {
	if m != nil {
		return m.Workload
	}
	return nil
}

func (m *WorkloadStatusStreamMessage) GetStatus() *WorkloadStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *WorkloadStatusStreamMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *WorkloadStatusStreamMessage) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

type Workloads struct {
	Workloads            []*Workload `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Workloads) Reset()         { *m = Workloads{} }
func (m *Workloads) String() string { return proto.CompactTextString(m) }
func (*Workloads) ProtoMessage()    {}
func (*Workloads) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{23}
}

func (m *Workloads) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workloads.Unmarshal(m, b)
}
func (m *Workloads) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workloads.Marshal(b, m, deterministic)
}
func (m *Workloads) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workloads.Merge(m, src)
}
func (m *Workloads) XXX_Size() int {
	return xxx_messageInfo_Workloads.Size(m)
}
func (m *Workloads) XXX_DiscardUnknown() {
	xxx_messageInfo_Workloads.DiscardUnknown(m)
}

var xxx_messageInfo_Workloads proto.InternalMessageInfo

func (m *Workloads) GetWorkloads() []*Workload {
	if m != nil {
		return m.Workloads
	}
	return nil
}

type WorkloadID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkloadID) Reset()         { *m = WorkloadID{} }
func (m *WorkloadID) String() string { return proto.CompactTextString(m) }
func (*WorkloadID) ProtoMessage()    {}
func (*WorkloadID) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{24}
}

func (m *WorkloadID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadID.Unmarshal(m, b)
}
func (m *WorkloadID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadID.Marshal(b, m, deterministic)
}
func (m *WorkloadID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadID.Merge(m, src)
}
func (m *WorkloadID) XXX_Size() int {
	return xxx_messageInfo_WorkloadID.Size(m)
}
func (m *WorkloadID) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadID.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadID proto.InternalMessageInfo

func (m *WorkloadID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type WorkloadIDs struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkloadIDs) Reset()         { *m = WorkloadIDs{} }
func (m *WorkloadIDs) String() string { return proto.CompactTextString(m) }
func (*WorkloadIDs) ProtoMessage()    {}
func (*WorkloadIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{25}
}

func (m *WorkloadIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadIDs.Unmarshal(m, b)
}
func (m *WorkloadIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadIDs.Marshal(b, m, deterministic)
}
func (m *WorkloadIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadIDs.Merge(m, src)
}
func (m *WorkloadIDs) XXX_Size() int {
	return xxx_messageInfo_WorkloadIDs.Size(m)
}
func (m *WorkloadIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadIDs.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadIDs proto.InternalMessageInfo

func (m *WorkloadIDs) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type RemoveWorkloadOptions struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Force                bool     `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	Step                 int32    `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveWorkloadOptions) Reset()         { *m = RemoveWorkloadOptions{} }
func (m *RemoveWorkloadOptions) String() string { return proto.CompactTextString(m) }
func (*RemoveWorkloadOptions) ProtoMessage()    {}
func (*RemoveWorkloadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{26}
}

func (m *RemoveWorkloadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveWorkloadOptions.Unmarshal(m, b)
}
func (m *RemoveWorkloadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveWorkloadOptions.Marshal(b, m, deterministic)
}
func (m *RemoveWorkloadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveWorkloadOptions.Merge(m, src)
}
func (m *RemoveWorkloadOptions) XXX_Size() int {
	return xxx_messageInfo_RemoveWorkloadOptions.Size(m)
}
func (m *RemoveWorkloadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveWorkloadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveWorkloadOptions proto.InternalMessageInfo

func (m *RemoveWorkloadOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *RemoveWorkloadOptions) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *RemoveWorkloadOptions) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

type DissociateWorkloadOptions struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DissociateWorkloadOptions) Reset()         { *m = DissociateWorkloadOptions{} }
func (m *DissociateWorkloadOptions) String() string { return proto.CompactTextString(m) }
func (*DissociateWorkloadOptions) ProtoMessage()    {}
func (*DissociateWorkloadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{27}
}

func (m *DissociateWorkloadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DissociateWorkloadOptions.Unmarshal(m, b)
}
func (m *DissociateWorkloadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DissociateWorkloadOptions.Marshal(b, m, deterministic)
}
func (m *DissociateWorkloadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DissociateWorkloadOptions.Merge(m, src)
}
func (m *DissociateWorkloadOptions) XXX_Size() int {
	return xxx_messageInfo_DissociateWorkloadOptions.Size(m)
}
func (m *DissociateWorkloadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DissociateWorkloadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DissociateWorkloadOptions proto.InternalMessageInfo

func (m *DissociateWorkloadOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ReallocOptions struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BindCpuOpt           TriOpt           `protobuf:"varint,2,opt,name=bind_cpu_opt,json=bindCpuOpt,proto3,enum=pb.TriOpt" json:"bind_cpu_opt,omitempty"`
	ResourceOpts         *ResourceOptions `protobuf:"bytes,3,opt,name=resource_opts,json=resourceOpts,proto3" json:"resource_opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReallocOptions) Reset()         { *m = ReallocOptions{} }
func (m *ReallocOptions) String() string { return proto.CompactTextString(m) }
func (*ReallocOptions) ProtoMessage()    {}
func (*ReallocOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{28}
}

func (m *ReallocOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReallocOptions.Unmarshal(m, b)
}
func (m *ReallocOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReallocOptions.Marshal(b, m, deterministic)
}
func (m *ReallocOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReallocOptions.Merge(m, src)
}
func (m *ReallocOptions) XXX_Size() int {
	return xxx_messageInfo_ReallocOptions.Size(m)
}
func (m *ReallocOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ReallocOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ReallocOptions proto.InternalMessageInfo

func (m *ReallocOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReallocOptions) GetBindCpuOpt() TriOpt {
	if m != nil {
		return m.BindCpuOpt
	}
	return TriOpt_KEEP
}

func (m *ReallocOptions) GetResourceOpts() *ResourceOptions {
	if m != nil {
		return m.ResourceOpts
	}
	return nil
}

type AddPodOptions struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPodOptions) Reset()         { *m = AddPodOptions{} }
func (m *AddPodOptions) String() string { return proto.CompactTextString(m) }
func (*AddPodOptions) ProtoMessage()    {}
func (*AddPodOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{29}
}

func (m *AddPodOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPodOptions.Unmarshal(m, b)
}
func (m *AddPodOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPodOptions.Marshal(b, m, deterministic)
}
func (m *AddPodOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPodOptions.Merge(m, src)
}
func (m *AddPodOptions) XXX_Size() int {
	return xxx_messageInfo_AddPodOptions.Size(m)
}
func (m *AddPodOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPodOptions.DiscardUnknown(m)
}

var xxx_messageInfo_AddPodOptions proto.InternalMessageInfo

func (m *AddPodOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddPodOptions) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type RemovePodOptions struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePodOptions) Reset()         { *m = RemovePodOptions{} }
func (m *RemovePodOptions) String() string { return proto.CompactTextString(m) }
func (*RemovePodOptions) ProtoMessage()    {}
func (*RemovePodOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{30}
}

func (m *RemovePodOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePodOptions.Unmarshal(m, b)
}
func (m *RemovePodOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePodOptions.Marshal(b, m, deterministic)
}
func (m *RemovePodOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePodOptions.Merge(m, src)
}
func (m *RemovePodOptions) XXX_Size() int {
	return xxx_messageInfo_RemovePodOptions.Size(m)
}
func (m *RemovePodOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePodOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePodOptions proto.InternalMessageInfo

func (m *RemovePodOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPodOptions struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPodOptions) Reset()         { *m = GetPodOptions{} }
func (m *GetPodOptions) String() string { return proto.CompactTextString(m) }
func (*GetPodOptions) ProtoMessage()    {}
func (*GetPodOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{31}
}

func (m *GetPodOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPodOptions.Unmarshal(m, b)
}
func (m *GetPodOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPodOptions.Marshal(b, m, deterministic)
}
func (m *GetPodOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPodOptions.Merge(m, src)
}
func (m *GetPodOptions) XXX_Size() int {
	return xxx_messageInfo_GetPodOptions.Size(m)
}
func (m *GetPodOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPodOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetPodOptions proto.InternalMessageInfo

func (m *GetPodOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddNodeOptions struct {
	Nodename             string            `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Endpoint             string            `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Podname              string            `protobuf:"bytes,3,opt,name=podname,proto3" json:"podname,omitempty"`
	Ca                   string            `protobuf:"bytes,4,opt,name=ca,proto3" json:"ca,omitempty"`
	Cert                 string            `protobuf:"bytes,5,opt,name=cert,proto3" json:"cert,omitempty"`
	Key                  string            `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Cpu                  int32             `protobuf:"varint,7,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Share                int32             `protobuf:"varint,8,opt,name=share,proto3" json:"share,omitempty"`
	Memory               int64             `protobuf:"varint,9,opt,name=memory,proto3" json:"memory,omitempty"`
	Labels               map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Numa                 map[string]string `protobuf:"bytes,11,rep,name=numa,proto3" json:"numa,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NumaMemory           map[string]int64  `protobuf:"bytes,12,rep,name=numa_memory,json=numaMemory,proto3" json:"numa_memory,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Storage              int64             `protobuf:"varint,13,opt,name=storage,proto3" json:"storage,omitempty"`
	VolumeMap            map[string]int64  `protobuf:"bytes,14,rep,name=volume_map,json=volumeMap,proto3" json:"volume_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddNodeOptions) Reset()         { *m = AddNodeOptions{} }
func (m *AddNodeOptions) String() string { return proto.CompactTextString(m) }
func (*AddNodeOptions) ProtoMessage()    {}
func (*AddNodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{32}
}

func (m *AddNodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeOptions.Unmarshal(m, b)
}
func (m *AddNodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeOptions.Marshal(b, m, deterministic)
}
func (m *AddNodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeOptions.Merge(m, src)
}
func (m *AddNodeOptions) XXX_Size() int {
	return xxx_messageInfo_AddNodeOptions.Size(m)
}
func (m *AddNodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeOptions proto.InternalMessageInfo

func (m *AddNodeOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *AddNodeOptions) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *AddNodeOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *AddNodeOptions) GetCa() string {
	if m != nil {
		return m.Ca
	}
	return ""
}

func (m *AddNodeOptions) GetCert() string {
	if m != nil {
		return m.Cert
	}
	return ""
}

func (m *AddNodeOptions) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddNodeOptions) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *AddNodeOptions) GetShare() int32 {
	if m != nil {
		return m.Share
	}
	return 0
}

func (m *AddNodeOptions) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *AddNodeOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *AddNodeOptions) GetNuma() map[string]string {
	if m != nil {
		return m.Numa
	}
	return nil
}

func (m *AddNodeOptions) GetNumaMemory() map[string]int64 {
	if m != nil {
		return m.NumaMemory
	}
	return nil
}

func (m *AddNodeOptions) GetStorage() int64 {
	if m != nil {
		return m.Storage
	}
	return 0
}

func (m *AddNodeOptions) GetVolumeMap() map[string]int64 {
	if m != nil {
		return m.VolumeMap
	}
	return nil
}

type RemoveNodeOptions struct {
	Nodename             string   `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeOptions) Reset()         { *m = RemoveNodeOptions{} }
func (m *RemoveNodeOptions) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeOptions) ProtoMessage()    {}
func (*RemoveNodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{33}
}

func (m *RemoveNodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeOptions.Unmarshal(m, b)
}
func (m *RemoveNodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeOptions.Marshal(b, m, deterministic)
}
func (m *RemoveNodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeOptions.Merge(m, src)
}
func (m *RemoveNodeOptions) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeOptions.Size(m)
}
func (m *RemoveNodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeOptions proto.InternalMessageInfo

func (m *RemoveNodeOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

type GetNodeOptions struct {
	Nodename             string            `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetNodeOptions) Reset()         { *m = GetNodeOptions{} }
func (m *GetNodeOptions) String() string { return proto.CompactTextString(m) }
func (*GetNodeOptions) ProtoMessage()    {}
func (*GetNodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{34}
}

func (m *GetNodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeOptions.Unmarshal(m, b)
}
func (m *GetNodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeOptions.Marshal(b, m, deterministic)
}
func (m *GetNodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeOptions.Merge(m, src)
}
func (m *GetNodeOptions) XXX_Size() int {
	return xxx_messageInfo_GetNodeOptions.Size(m)
}
func (m *GetNodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeOptions proto.InternalMessageInfo

func (m *GetNodeOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *GetNodeOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type GetNodeResourceOptions struct {
	Opts                 *GetNodeOptions `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	Fix                  bool            `protobuf:"varint,2,opt,name=fix,proto3" json:"fix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetNodeResourceOptions) Reset()         { *m = GetNodeResourceOptions{} }
func (m *GetNodeResourceOptions) String() string { return proto.CompactTextString(m) }
func (*GetNodeResourceOptions) ProtoMessage()    {}
func (*GetNodeResourceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{35}
}

func (m *GetNodeResourceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeResourceOptions.Unmarshal(m, b)
}
func (m *GetNodeResourceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeResourceOptions.Marshal(b, m, deterministic)
}
func (m *GetNodeResourceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeResourceOptions.Merge(m, src)
}
func (m *GetNodeResourceOptions) XXX_Size() int {
	return xxx_messageInfo_GetNodeResourceOptions.Size(m)
}
func (m *GetNodeResourceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeResourceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeResourceOptions proto.InternalMessageInfo

func (m *GetNodeResourceOptions) GetOpts() *GetNodeOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

func (m *GetNodeResourceOptions) GetFix() bool {
	if m != nil {
		return m.Fix
	}
	return false
}

type ListNodesOptions struct {
	Podname              string            `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	All                  bool              `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListNodesOptions) Reset()         { *m = ListNodesOptions{} }
func (m *ListNodesOptions) String() string { return proto.CompactTextString(m) }
func (*ListNodesOptions) ProtoMessage()    {}
func (*ListNodesOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{36}
}

func (m *ListNodesOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesOptions.Unmarshal(m, b)
}
func (m *ListNodesOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesOptions.Marshal(b, m, deterministic)
}
func (m *ListNodesOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesOptions.Merge(m, src)
}
func (m *ListNodesOptions) XXX_Size() int {
	return xxx_messageInfo_ListNodesOptions.Size(m)
}
func (m *ListNodesOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesOptions proto.InternalMessageInfo

func (m *ListNodesOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *ListNodesOptions) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

func (m *ListNodesOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Build struct {
	Base                 string            `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Repo                 string            `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Version              string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Dir                  string            `protobuf:"bytes,4,opt,name=dir,proto3" json:"dir,omitempty"`
	Submodule            bool              `protobuf:"varint,5,opt,name=submodule,proto3" json:"submodule,omitempty"`
	Commands             []string          `protobuf:"bytes,6,rep,name=commands,proto3" json:"commands,omitempty"`
	Envs                 map[string]string `protobuf:"bytes,7,rep,name=envs,proto3" json:"envs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Args                 map[string]string `protobuf:"bytes,8,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Artifacts            map[string]string `protobuf:"bytes,10,rep,name=artifacts,proto3" json:"artifacts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cache                map[string]string `protobuf:"bytes,11,rep,name=cache,proto3" json:"cache,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StopSignal           string            `protobuf:"bytes,12,opt,name=stop_signal,json=stopSignal,proto3" json:"stop_signal,omitempty"`
	Security             bool              `protobuf:"varint,13,opt,name=security,proto3" json:"security,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{37}
}

func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *Build) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Build) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Build) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *Build) GetSubmodule() bool {
	if m != nil {
		return m.Submodule
	}
	return false
}

func (m *Build) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *Build) GetEnvs() map[string]string {
	if m != nil {
		return m.Envs
	}
	return nil
}

func (m *Build) GetArgs() map[string]string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Build) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Build) GetArtifacts() map[string]string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *Build) GetCache() map[string]string {
	if m != nil {
		return m.Cache
	}
	return nil
}

func (m *Build) GetStopSignal() string {
	if m != nil {
		return m.StopSignal
	}
	return ""
}

func (m *Build) GetSecurity() bool {
	if m != nil {
		return m.Security
	}
	return false
}

type Builds struct {
	Stages               []string          `protobuf:"bytes,1,rep,name=stages,proto3" json:"stages,omitempty"`
	Builds               map[string]*Build `protobuf:"bytes,2,rep,name=builds,proto3" json:"builds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Builds) Reset()         { *m = Builds{} }
func (m *Builds) String() string { return proto.CompactTextString(m) }
func (*Builds) ProtoMessage()    {}
func (*Builds) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{38}
}

func (m *Builds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Builds.Unmarshal(m, b)
}
func (m *Builds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Builds.Marshal(b, m, deterministic)
}
func (m *Builds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Builds.Merge(m, src)
}
func (m *Builds) XXX_Size() int {
	return xxx_messageInfo_Builds.Size(m)
}
func (m *Builds) XXX_DiscardUnknown() {
	xxx_messageInfo_Builds.DiscardUnknown(m)
}

var xxx_messageInfo_Builds proto.InternalMessageInfo

func (m *Builds) GetStages() []string {
	if m != nil {
		return m.Stages
	}
	return nil
}

func (m *Builds) GetBuilds() map[string]*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type BuildImageOptions struct {
	Name                 string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	User                 string                        `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Uid                  int32                         `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Tags                 []string                      `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Builds               *Builds                       `protobuf:"bytes,5,opt,name=builds,proto3" json:"builds,omitempty"`
	Tar                  []byte                        `protobuf:"bytes,6,opt,name=tar,proto3" json:"tar,omitempty"`
	BuildMethod          BuildImageOptions_BuildMethod `protobuf:"varint,7,opt,name=build_method,json=buildMethod,proto3,enum=pb.BuildImageOptions_BuildMethod" json:"build_method,omitempty"`
	ExistId              string                        `protobuf:"bytes,8,opt,name=exist_id,json=existId,proto3" json:"exist_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BuildImageOptions) Reset()         { *m = BuildImageOptions{} }
func (m *BuildImageOptions) String() string { return proto.CompactTextString(m) }
func (*BuildImageOptions) ProtoMessage()    {}
func (*BuildImageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{39}
}

func (m *BuildImageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildImageOptions.Unmarshal(m, b)
}
func (m *BuildImageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildImageOptions.Marshal(b, m, deterministic)
}
func (m *BuildImageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildImageOptions.Merge(m, src)
}
func (m *BuildImageOptions) XXX_Size() int {
	return xxx_messageInfo_BuildImageOptions.Size(m)
}
func (m *BuildImageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildImageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_BuildImageOptions proto.InternalMessageInfo

func (m *BuildImageOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BuildImageOptions) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *BuildImageOptions) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *BuildImageOptions) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *BuildImageOptions) GetBuilds() *Builds {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *BuildImageOptions) GetTar() []byte {
	if m != nil {
		return m.Tar
	}
	return nil
}

func (m *BuildImageOptions) GetBuildMethod() BuildImageOptions_BuildMethod {
	if m != nil {
		return m.BuildMethod
	}
	return BuildImageOptions_SCM
}

func (m *BuildImageOptions) GetExistId() string {
	if m != nil {
		return m.ExistId
	}
	return ""
}

type HookOptions struct {
	AfterStart           []string `protobuf:"bytes,1,rep,name=after_start,json=afterStart,proto3" json:"after_start,omitempty"`
	BeforeStop           []string `protobuf:"bytes,2,rep,name=before_stop,json=beforeStop,proto3" json:"before_stop,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HookOptions) Reset()         { *m = HookOptions{} }
func (m *HookOptions) String() string { return proto.CompactTextString(m) }
func (*HookOptions) ProtoMessage()    {}
func (*HookOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{40}
}

func (m *HookOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HookOptions.Unmarshal(m, b)
}
func (m *HookOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HookOptions.Marshal(b, m, deterministic)
}
func (m *HookOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HookOptions.Merge(m, src)
}
func (m *HookOptions) XXX_Size() int {
	return xxx_messageInfo_HookOptions.Size(m)
}
func (m *HookOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HookOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HookOptions proto.InternalMessageInfo

func (m *HookOptions) GetAfterStart() []string {
	if m != nil {
		return m.AfterStart
	}
	return nil
}

func (m *HookOptions) GetBeforeStop() []string {
	if m != nil {
		return m.BeforeStop
	}
	return nil
}

func (m *HookOptions) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type HealthCheckOptions struct {
	TcpPorts             []string `protobuf:"bytes,1,rep,name=tcp_ports,json=tcpPorts,proto3" json:"tcp_ports,omitempty"`
	HttpPort             string   `protobuf:"bytes,2,opt,name=http_port,json=httpPort,proto3" json:"http_port,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Code                 int32    `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckOptions) Reset()         { *m = HealthCheckOptions{} }
func (m *HealthCheckOptions) String() string { return proto.CompactTextString(m) }
func (*HealthCheckOptions) ProtoMessage()    {}
func (*HealthCheckOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{41}
}

func (m *HealthCheckOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckOptions.Unmarshal(m, b)
}
func (m *HealthCheckOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckOptions.Marshal(b, m, deterministic)
}
func (m *HealthCheckOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckOptions.Merge(m, src)
}
func (m *HealthCheckOptions) XXX_Size() int {
	return xxx_messageInfo_HealthCheckOptions.Size(m)
}
func (m *HealthCheckOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckOptions proto.InternalMessageInfo

func (m *HealthCheckOptions) GetTcpPorts() []string {
	if m != nil {
		return m.TcpPorts
	}
	return nil
}

func (m *HealthCheckOptions) GetHttpPort() string {
	if m != nil {
		return m.HttpPort
	}
	return ""
}

func (m *HealthCheckOptions) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HealthCheckOptions) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type LogOptions struct {
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Config               map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogOptions) Reset()         { *m = LogOptions{} }
func (m *LogOptions) String() string { return proto.CompactTextString(m) }
func (*LogOptions) ProtoMessage()    {}
func (*LogOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{42}
}

func (m *LogOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogOptions.Unmarshal(m, b)
}
func (m *LogOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogOptions.Marshal(b, m, deterministic)
}
func (m *LogOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogOptions.Merge(m, src)
}
func (m *LogOptions) XXX_Size() int {
	return xxx_messageInfo_LogOptions.Size(m)
}
func (m *LogOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_LogOptions.DiscardUnknown(m)
}

var xxx_messageInfo_LogOptions proto.InternalMessageInfo

func (m *LogOptions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LogOptions) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type EntrypointOptions struct {
	Name                 string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Command              string              `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Privileged           bool                `protobuf:"varint,3,opt,name=privileged,proto3" json:"privileged,omitempty"`
	Dir                  string              `protobuf:"bytes,4,opt,name=dir,proto3" json:"dir,omitempty"`
	Log                  *LogOptions         `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty"`
	Publish              []string            `protobuf:"bytes,6,rep,name=publish,proto3" json:"publish,omitempty"`
	Healthcheck          *HealthCheckOptions `protobuf:"bytes,7,opt,name=healthcheck,proto3" json:"healthcheck,omitempty"`
	Hook                 *HookOptions        `protobuf:"bytes,8,opt,name=hook,proto3" json:"hook,omitempty"`
	RestartPolicy        string              `protobuf:"bytes,9,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	Sysctls              map[string]string   `protobuf:"bytes,10,rep,name=sysctls,proto3" json:"sysctls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EntrypointOptions) Reset()         { *m = EntrypointOptions{} }
func (m *EntrypointOptions) String() string { return proto.CompactTextString(m) }
func (*EntrypointOptions) ProtoMessage()    {}
func (*EntrypointOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{43}
}

func (m *EntrypointOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointOptions.Unmarshal(m, b)
}
func (m *EntrypointOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointOptions.Marshal(b, m, deterministic)
}
func (m *EntrypointOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointOptions.Merge(m, src)
}
func (m *EntrypointOptions) XXX_Size() int {
	return xxx_messageInfo_EntrypointOptions.Size(m)
}
func (m *EntrypointOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointOptions.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointOptions proto.InternalMessageInfo

func (m *EntrypointOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EntrypointOptions) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *EntrypointOptions) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *EntrypointOptions) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *EntrypointOptions) GetLog() *LogOptions {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *EntrypointOptions) GetPublish() []string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *EntrypointOptions) GetHealthcheck() *HealthCheckOptions {
	if m != nil {
		return m.Healthcheck
	}
	return nil
}

func (m *EntrypointOptions) GetHook() *HookOptions {
	if m != nil {
		return m.Hook
	}
	return nil
}

func (m *EntrypointOptions) GetRestartPolicy() string {
	if m != nil {
		return m.RestartPolicy
	}
	return ""
}

func (m *EntrypointOptions) GetSysctls() map[string]string {
	if m != nil {
		return m.Sysctls
	}
	return nil
}

type ResourceOptions struct {
	CpuQuotaLimit        float64  `protobuf:"fixed64,1,opt,name=cpu_quota_limit,json=cpuQuotaLimit,proto3" json:"cpu_quota_limit,omitempty"`
	CpuQuotaRequest      float64  `protobuf:"fixed64,2,opt,name=cpu_quota_request,json=cpuQuotaRequest,proto3" json:"cpu_quota_request,omitempty"`
	CpuBind              bool     `protobuf:"varint,3,opt,name=cpu_bind,json=cpuBind,proto3" json:"cpu_bind,omitempty"`
	MemoryLimit          int64    `protobuf:"varint,4,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	MemoryRequest        int64    `protobuf:"varint,5,opt,name=memory_request,json=memoryRequest,proto3" json:"memory_request,omitempty"`
	StorageLimit         int64    `protobuf:"varint,6,opt,name=storage_limit,json=storageLimit,proto3" json:"storage_limit,omitempty"`
	StorageRequest       int64    `protobuf:"varint,7,opt,name=storage_request,json=storageRequest,proto3" json:"storage_request,omitempty"`
	VolumesLimit         []string `protobuf:"bytes,8,rep,name=volumes_limit,json=volumesLimit,proto3" json:"volumes_limit,omitempty"`
	VolumesRequest       []string `protobuf:"bytes,9,rep,name=volumes_request,json=volumesRequest,proto3" json:"volumes_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceOptions) Reset()         { *m = ResourceOptions{} }
func (m *ResourceOptions) String() string { return proto.CompactTextString(m) }
func (*ResourceOptions) ProtoMessage()    {}
func (*ResourceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{44}
}

func (m *ResourceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceOptions.Unmarshal(m, b)
}
func (m *ResourceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceOptions.Marshal(b, m, deterministic)
}
func (m *ResourceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceOptions.Merge(m, src)
}
func (m *ResourceOptions) XXX_Size() int {
	return xxx_messageInfo_ResourceOptions.Size(m)
}
func (m *ResourceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceOptions proto.InternalMessageInfo

func (m *ResourceOptions) GetCpuQuotaLimit() float64 {
	if m != nil {
		return m.CpuQuotaLimit
	}
	return 0
}

func (m *ResourceOptions) GetCpuQuotaRequest() float64 {
	if m != nil {
		return m.CpuQuotaRequest
	}
	return 0
}

func (m *ResourceOptions) GetCpuBind() bool {
	if m != nil {
		return m.CpuBind
	}
	return false
}

func (m *ResourceOptions) GetMemoryLimit() int64 {
	if m != nil {
		return m.MemoryLimit
	}
	return 0
}

func (m *ResourceOptions) GetMemoryRequest() int64 {
	if m != nil {
		return m.MemoryRequest
	}
	return 0
}

func (m *ResourceOptions) GetStorageLimit() int64 {
	if m != nil {
		return m.StorageLimit
	}
	return 0
}

func (m *ResourceOptions) GetStorageRequest() int64 {
	if m != nil {
		return m.StorageRequest
	}
	return 0
}

func (m *ResourceOptions) GetVolumesLimit() []string {
	if m != nil {
		return m.VolumesLimit
	}
	return nil
}

func (m *ResourceOptions) GetVolumesRequest() []string {
	if m != nil {
		return m.VolumesRequest
	}
	return nil
}

type Resource struct {
	CpuQuotaLimit        float64            `protobuf:"fixed64,1,opt,name=cpu_quota_limit,json=cpuQuotaLimit,proto3" json:"cpu_quota_limit,omitempty"`
	CpuQuotaRequest      float64            `protobuf:"fixed64,2,opt,name=cpu_quota_request,json=cpuQuotaRequest,proto3" json:"cpu_quota_request,omitempty"`
	Cpu                  map[string]int32   `protobuf:"bytes,3,rep,name=cpu,proto3" json:"cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MemoryLimit          int64              `protobuf:"varint,4,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	MemoryRequest        int64              `protobuf:"varint,5,opt,name=memory_request,json=memoryRequest,proto3" json:"memory_request,omitempty"`
	StorageLimit         int64              `protobuf:"varint,6,opt,name=storage_limit,json=storageLimit,proto3" json:"storage_limit,omitempty"`
	StorageRequest       int64              `protobuf:"varint,7,opt,name=storage_request,json=storageRequest,proto3" json:"storage_request,omitempty"`
	VolumesLimit         []string           `protobuf:"bytes,8,rep,name=volumes_limit,json=volumesLimit,proto3" json:"volumes_limit,omitempty"`
	VolumesRequest       []string           `protobuf:"bytes,9,rep,name=volumes_request,json=volumesRequest,proto3" json:"volumes_request,omitempty"`
	VolumePlanLimit      map[string]*Volume `protobuf:"bytes,10,rep,name=volume_plan_limit,json=volumePlanLimit,proto3" json:"volume_plan_limit,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	VolumePlanRequest    map[string]*Volume `protobuf:"bytes,11,rep,name=volume_plan_request,json=volumePlanRequest,proto3" json:"volume_plan_request,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{45}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetCpuQuotaLimit() float64 {
	if m != nil {
		return m.CpuQuotaLimit
	}
	return 0
}

func (m *Resource) GetCpuQuotaRequest() float64 {
	if m != nil {
		return m.CpuQuotaRequest
	}
	return 0
}

func (m *Resource) GetCpu() map[string]int32 {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *Resource) GetMemoryLimit() int64 {
	if m != nil {
		return m.MemoryLimit
	}
	return 0
}

func (m *Resource) GetMemoryRequest() int64 {
	if m != nil {
		return m.MemoryRequest
	}
	return 0
}

func (m *Resource) GetStorageLimit() int64 {
	if m != nil {
		return m.StorageLimit
	}
	return 0
}

func (m *Resource) GetStorageRequest() int64 {
	if m != nil {
		return m.StorageRequest
	}
	return 0
}

func (m *Resource) GetVolumesLimit() []string {
	if m != nil {
		return m.VolumesLimit
	}
	return nil
}

func (m *Resource) GetVolumesRequest() []string {
	if m != nil {
		return m.VolumesRequest
	}
	return nil
}

func (m *Resource) GetVolumePlanLimit() map[string]*Volume {
	if m != nil {
		return m.VolumePlanLimit
	}
	return nil
}

func (m *Resource) GetVolumePlanRequest() map[string]*Volume {
	if m != nil {
		return m.VolumePlanRequest
	}
	return nil
}

type Volume struct {
	Volume               map[string]int64 `protobuf:"bytes,1,rep,name=volume,proto3" json:"volume,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{46}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetVolume() map[string]int64 {
	if m != nil {
		return m.Volume
	}
	return nil
}

type DeployOptions struct {
	Name                 string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Entrypoint           *EntrypointOptions     `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Podname              string                 `protobuf:"bytes,3,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodenames            []string               `protobuf:"bytes,4,rep,name=nodenames,proto3" json:"nodenames,omitempty"`
	Image                string                 `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	ExtraArgs            string                 `protobuf:"bytes,6,opt,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	Count                int32                  `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	Env                  []string               `protobuf:"bytes,8,rep,name=env,proto3" json:"env,omitempty"`
	Dns                  []string               `protobuf:"bytes,9,rep,name=dns,proto3" json:"dns,omitempty"`
	ExtraHosts           []string               `protobuf:"bytes,10,rep,name=extra_hosts,json=extraHosts,proto3" json:"extra_hosts,omitempty"`
	Networks             map[string]string      `protobuf:"bytes,11,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Networkmode          string                 `protobuf:"bytes,12,opt,name=networkmode,proto3" json:"networkmode,omitempty"`
	User                 string                 `protobuf:"bytes,13,opt,name=user,proto3" json:"user,omitempty"`
	Debug                bool                   `protobuf:"varint,14,opt,name=debug,proto3" json:"debug,omitempty"`
	OpenStdin            bool                   `protobuf:"varint,15,opt,name=openStdin,proto3" json:"openStdin,omitempty"`
	Labels               map[string]string      `protobuf:"bytes,16,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Nodelabels           map[string]string      `protobuf:"bytes,17,rep,name=nodelabels,proto3" json:"nodelabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeployStrategy       DeployOptions_Strategy `protobuf:"varint,18,opt,name=deploy_strategy,json=deployStrategy,proto3,enum=pb.DeployOptions_Strategy" json:"deploy_strategy,omitempty"`
	Data                 map[string][]byte      `protobuf:"bytes,19,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodesLimit           int32                  `protobuf:"varint,20,opt,name=nodes_limit,json=nodesLimit,proto3" json:"nodes_limit,omitempty"`
	IgnoreHook           bool                   `protobuf:"varint,21,opt,name=ignore_hook,json=ignoreHook,proto3" json:"ignore_hook,omitempty"`
	AfterCreate          []string               `protobuf:"bytes,22,rep,name=after_create,json=afterCreate,proto3" json:"after_create,omitempty"`
	RawArgs              []byte                 `protobuf:"bytes,23,opt,name=raw_args,json=rawArgs,proto3" json:"raw_args,omitempty"`
	ResourceOpts         *ResourceOptions       `protobuf:"bytes,24,opt,name=resource_opts,json=resourceOpts,proto3" json:"resource_opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DeployOptions) Reset()         { *m = DeployOptions{} }
func (m *DeployOptions) String() string { return proto.CompactTextString(m) }
func (*DeployOptions) ProtoMessage()    {}
func (*DeployOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{47}
}

func (m *DeployOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployOptions.Unmarshal(m, b)
}
func (m *DeployOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployOptions.Marshal(b, m, deterministic)
}
func (m *DeployOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployOptions.Merge(m, src)
}
func (m *DeployOptions) XXX_Size() int {
	return xxx_messageInfo_DeployOptions.Size(m)
}
func (m *DeployOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeployOptions proto.InternalMessageInfo

func (m *DeployOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeployOptions) GetEntrypoint() *EntrypointOptions {
	if m != nil {
		return m.Entrypoint
	}
	return nil
}

func (m *DeployOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *DeployOptions) GetNodenames() []string {
	if m != nil {
		return m.Nodenames
	}
	return nil
}

func (m *DeployOptions) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *DeployOptions) GetExtraArgs() string {
	if m != nil {
		return m.ExtraArgs
	}
	return ""
}

func (m *DeployOptions) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *DeployOptions) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *DeployOptions) GetDns() []string {
	if m != nil {
		return m.Dns
	}
	return nil
}

func (m *DeployOptions) GetExtraHosts() []string {
	if m != nil {
		return m.ExtraHosts
	}
	return nil
}

func (m *DeployOptions) GetNetworks() map[string]string {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *DeployOptions) GetNetworkmode() string {
	if m != nil {
		return m.Networkmode
	}
	return ""
}

func (m *DeployOptions) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *DeployOptions) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

func (m *DeployOptions) GetOpenStdin() bool {
	if m != nil {
		return m.OpenStdin
	}
	return false
}

func (m *DeployOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *DeployOptions) GetNodelabels() map[string]string {
	if m != nil {
		return m.Nodelabels
	}
	return nil
}

func (m *DeployOptions) GetDeployStrategy() DeployOptions_Strategy {
	if m != nil {
		return m.DeployStrategy
	}
	return DeployOptions_AUTO
}

func (m *DeployOptions) GetData() map[string][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DeployOptions) GetNodesLimit() int32 {
	if m != nil {
		return m.NodesLimit
	}
	return 0
}

func (m *DeployOptions) GetIgnoreHook() bool {
	if m != nil {
		return m.IgnoreHook
	}
	return false
}

func (m *DeployOptions) GetAfterCreate() []string {
	if m != nil {
		return m.AfterCreate
	}
	return nil
}

func (m *DeployOptions) GetRawArgs() []byte {
	if m != nil {
		return m.RawArgs
	}
	return nil
}

func (m *DeployOptions) GetResourceOpts() *ResourceOptions {
	if m != nil {
		return m.ResourceOpts
	}
	return nil
}

type ReplaceOptions struct {
	DeployOpt            *DeployOptions    `protobuf:"bytes,1,opt,name=deployOpt,proto3" json:"deployOpt,omitempty"`
	Networkinherit       bool              `protobuf:"varint,2,opt,name=networkinherit,proto3" json:"networkinherit,omitempty"`
	FilterLabels         map[string]string `protobuf:"bytes,3,rep,name=filter_labels,json=filterLabels,proto3" json:"filter_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Copy                 map[string]string `protobuf:"bytes,4,rep,name=copy,proto3" json:"copy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ids                  []string          `protobuf:"bytes,5,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReplaceOptions) Reset()         { *m = ReplaceOptions{} }
func (m *ReplaceOptions) String() string { return proto.CompactTextString(m) }
func (*ReplaceOptions) ProtoMessage()    {}
func (*ReplaceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{48}
}

func (m *ReplaceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceOptions.Unmarshal(m, b)
}
func (m *ReplaceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceOptions.Marshal(b, m, deterministic)
}
func (m *ReplaceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceOptions.Merge(m, src)
}
func (m *ReplaceOptions) XXX_Size() int {
	return xxx_messageInfo_ReplaceOptions.Size(m)
}
func (m *ReplaceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceOptions proto.InternalMessageInfo

func (m *ReplaceOptions) GetDeployOpt() *DeployOptions {
	if m != nil {
		return m.DeployOpt
	}
	return nil
}

func (m *ReplaceOptions) GetNetworkinherit() bool {
	if m != nil {
		return m.Networkinherit
	}
	return false
}

func (m *ReplaceOptions) GetFilterLabels() map[string]string {
	if m != nil {
		return m.FilterLabels
	}
	return nil
}

func (m *ReplaceOptions) GetCopy() map[string]string {
	if m != nil {
		return m.Copy
	}
	return nil
}

func (m *ReplaceOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type CacheImageOptions struct {
	Podname              string   `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodenames            []string `protobuf:"bytes,2,rep,name=nodenames,proto3" json:"nodenames,omitempty"`
	Images               []string `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Step                 int32    `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheImageOptions) Reset()         { *m = CacheImageOptions{} }
func (m *CacheImageOptions) String() string { return proto.CompactTextString(m) }
func (*CacheImageOptions) ProtoMessage()    {}
func (*CacheImageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{49}
}

func (m *CacheImageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheImageOptions.Unmarshal(m, b)
}
func (m *CacheImageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheImageOptions.Marshal(b, m, deterministic)
}
func (m *CacheImageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheImageOptions.Merge(m, src)
}
func (m *CacheImageOptions) XXX_Size() int {
	return xxx_messageInfo_CacheImageOptions.Size(m)
}
func (m *CacheImageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheImageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CacheImageOptions proto.InternalMessageInfo

func (m *CacheImageOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *CacheImageOptions) GetNodenames() []string {
	if m != nil {
		return m.Nodenames
	}
	return nil
}

func (m *CacheImageOptions) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *CacheImageOptions) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

type RemoveImageOptions struct {
	Podname              string   `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodenames            []string `protobuf:"bytes,2,rep,name=nodenames,proto3" json:"nodenames,omitempty"`
	Images               []string `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Step                 int32    `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	Prune                bool     `protobuf:"varint,5,opt,name=prune,proto3" json:"prune,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveImageOptions) Reset()         { *m = RemoveImageOptions{} }
func (m *RemoveImageOptions) String() string { return proto.CompactTextString(m) }
func (*RemoveImageOptions) ProtoMessage()    {}
func (*RemoveImageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{50}
}

func (m *RemoveImageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveImageOptions.Unmarshal(m, b)
}
func (m *RemoveImageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveImageOptions.Marshal(b, m, deterministic)
}
func (m *RemoveImageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveImageOptions.Merge(m, src)
}
func (m *RemoveImageOptions) XXX_Size() int {
	return xxx_messageInfo_RemoveImageOptions.Size(m)
}
func (m *RemoveImageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveImageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveImageOptions proto.InternalMessageInfo

func (m *RemoveImageOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *RemoveImageOptions) GetNodenames() []string {
	if m != nil {
		return m.Nodenames
	}
	return nil
}

func (m *RemoveImageOptions) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *RemoveImageOptions) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *RemoveImageOptions) GetPrune() bool {
	if m != nil {
		return m.Prune
	}
	return false
}

type CopyPaths struct {
	Paths                []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopyPaths) Reset()         { *m = CopyPaths{} }
func (m *CopyPaths) String() string { return proto.CompactTextString(m) }
func (*CopyPaths) ProtoMessage()    {}
func (*CopyPaths) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{51}
}

func (m *CopyPaths) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyPaths.Unmarshal(m, b)
}
func (m *CopyPaths) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyPaths.Marshal(b, m, deterministic)
}
func (m *CopyPaths) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyPaths.Merge(m, src)
}
func (m *CopyPaths) XXX_Size() int {
	return xxx_messageInfo_CopyPaths.Size(m)
}
func (m *CopyPaths) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyPaths.DiscardUnknown(m)
}

var xxx_messageInfo_CopyPaths proto.InternalMessageInfo

func (m *CopyPaths) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

type CopyOptions struct {
	Targets              map[string]*CopyPaths `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CopyOptions) Reset()         { *m = CopyOptions{} }
func (m *CopyOptions) String() string { return proto.CompactTextString(m) }
func (*CopyOptions) ProtoMessage()    {}
func (*CopyOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{52}
}

func (m *CopyOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyOptions.Unmarshal(m, b)
}
func (m *CopyOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyOptions.Marshal(b, m, deterministic)
}
func (m *CopyOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyOptions.Merge(m, src)
}
func (m *CopyOptions) XXX_Size() int {
	return xxx_messageInfo_CopyOptions.Size(m)
}
func (m *CopyOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CopyOptions proto.InternalMessageInfo

func (m *CopyOptions) GetTargets() map[string]*CopyPaths {
	if m != nil {
		return m.Targets
	}
	return nil
}

type SendOptions struct {
	Ids                  []string          `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Data                 map[string][]byte `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendOptions) Reset()         { *m = SendOptions{} }
func (m *SendOptions) String() string { return proto.CompactTextString(m) }
func (*SendOptions) ProtoMessage()    {}
func (*SendOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{53}
}

func (m *SendOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendOptions.Unmarshal(m, b)
}
func (m *SendOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendOptions.Marshal(b, m, deterministic)
}
func (m *SendOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendOptions.Merge(m, src)
}
func (m *SendOptions) XXX_Size() int {
	return xxx_messageInfo_SendOptions.Size(m)
}
func (m *SendOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SendOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SendOptions proto.InternalMessageInfo

func (m *SendOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *SendOptions) GetData() map[string][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ErrorDetail struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorDetail) Reset()         { *m = ErrorDetail{} }
func (m *ErrorDetail) String() string { return proto.CompactTextString(m) }
func (*ErrorDetail) ProtoMessage()    {}
func (*ErrorDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{54}
}

func (m *ErrorDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorDetail.Unmarshal(m, b)
}
func (m *ErrorDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorDetail.Marshal(b, m, deterministic)
}
func (m *ErrorDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorDetail.Merge(m, src)
}
func (m *ErrorDetail) XXX_Size() int {
	return xxx_messageInfo_ErrorDetail.Size(m)
}
func (m *ErrorDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorDetail proto.InternalMessageInfo

func (m *ErrorDetail) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ErrorDetail) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type BuildImageMessage struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Progress             string       `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"`
	Error                string       `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Stream               string       `protobuf:"bytes,5,opt,name=stream,proto3" json:"stream,omitempty"`
	ErrorDetail          *ErrorDetail `protobuf:"bytes,6,opt,name=error_detail,json=errorDetail,proto3" json:"error_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BuildImageMessage) Reset()         { *m = BuildImageMessage{} }
func (m *BuildImageMessage) String() string { return proto.CompactTextString(m) }
func (*BuildImageMessage) ProtoMessage()    {}
func (*BuildImageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{55}
}

func (m *BuildImageMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildImageMessage.Unmarshal(m, b)
}
func (m *BuildImageMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildImageMessage.Marshal(b, m, deterministic)
}
func (m *BuildImageMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildImageMessage.Merge(m, src)
}
func (m *BuildImageMessage) XXX_Size() int {
	return xxx_messageInfo_BuildImageMessage.Size(m)
}
func (m *BuildImageMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildImageMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BuildImageMessage proto.InternalMessageInfo

func (m *BuildImageMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BuildImageMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BuildImageMessage) GetProgress() string {
	if m != nil {
		return m.Progress
	}
	return ""
}

func (m *BuildImageMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BuildImageMessage) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

func (m *BuildImageMessage) GetErrorDetail() *ErrorDetail {
	if m != nil {
		return m.ErrorDetail
	}
	return nil
}

type CreateWorkloadMessage struct {
	Podname              string            `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodename             string            `protobuf:"bytes,2,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Id                   string            `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Error                string            `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Success              bool              `protobuf:"varint,6,opt,name=success,proto3" json:"success,omitempty"`
	Publish              map[string]string `protobuf:"bytes,7,rep,name=publish,proto3" json:"publish,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Hook                 []byte            `protobuf:"bytes,8,opt,name=hook,proto3" json:"hook,omitempty"`
	Resource             *Resource         `protobuf:"bytes,9,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateWorkloadMessage) Reset()         { *m = CreateWorkloadMessage{} }
func (m *CreateWorkloadMessage) String() string { return proto.CompactTextString(m) }
func (*CreateWorkloadMessage) ProtoMessage()    {}
func (*CreateWorkloadMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{56}
}

func (m *CreateWorkloadMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkloadMessage.Unmarshal(m, b)
}
func (m *CreateWorkloadMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkloadMessage.Marshal(b, m, deterministic)
}
func (m *CreateWorkloadMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkloadMessage.Merge(m, src)
}
func (m *CreateWorkloadMessage) XXX_Size() int {
	return xxx_messageInfo_CreateWorkloadMessage.Size(m)
}
func (m *CreateWorkloadMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkloadMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkloadMessage proto.InternalMessageInfo

func (m *CreateWorkloadMessage) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *CreateWorkloadMessage) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *CreateWorkloadMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateWorkloadMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateWorkloadMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CreateWorkloadMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CreateWorkloadMessage) GetPublish() map[string]string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *CreateWorkloadMessage) GetHook() []byte {
	if m != nil {
		return m.Hook
	}
	return nil
}

func (m *CreateWorkloadMessage) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

type ReplaceWorkloadMessage struct {
	Create               *CreateWorkloadMessage `protobuf:"bytes,1,opt,name=create,proto3" json:"create,omitempty"`
	Remove               *RemoveWorkloadMessage `protobuf:"bytes,2,opt,name=remove,proto3" json:"remove,omitempty"`
	Error                string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ReplaceWorkloadMessage) Reset()         { *m = ReplaceWorkloadMessage{} }
func (m *ReplaceWorkloadMessage) String() string { return proto.CompactTextString(m) }
func (*ReplaceWorkloadMessage) ProtoMessage()    {}
func (*ReplaceWorkloadMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{57}
}

func (m *ReplaceWorkloadMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceWorkloadMessage.Unmarshal(m, b)
}
func (m *ReplaceWorkloadMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceWorkloadMessage.Marshal(b, m, deterministic)
}
func (m *ReplaceWorkloadMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceWorkloadMessage.Merge(m, src)
}
func (m *ReplaceWorkloadMessage) XXX_Size() int {
	return xxx_messageInfo_ReplaceWorkloadMessage.Size(m)
}
func (m *ReplaceWorkloadMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceWorkloadMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceWorkloadMessage proto.InternalMessageInfo

func (m *ReplaceWorkloadMessage) GetCreate() *CreateWorkloadMessage {
	if m != nil {
		return m.Create
	}
	return nil
}

func (m *ReplaceWorkloadMessage) GetRemove() *RemoveWorkloadMessage {
	if m != nil {
		return m.Remove
	}
	return nil
}

func (m *ReplaceWorkloadMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CacheImageMessage struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Nodename             string   `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheImageMessage) Reset()         { *m = CacheImageMessage{} }
func (m *CacheImageMessage) String() string { return proto.CompactTextString(m) }
func (*CacheImageMessage) ProtoMessage()    {}
func (*CacheImageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{58}
}

func (m *CacheImageMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheImageMessage.Unmarshal(m, b)
}
func (m *CacheImageMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheImageMessage.Marshal(b, m, deterministic)
}
func (m *CacheImageMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheImageMessage.Merge(m, src)
}
func (m *CacheImageMessage) XXX_Size() int {
	return xxx_messageInfo_CacheImageMessage.Size(m)
}
func (m *CacheImageMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheImageMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CacheImageMessage proto.InternalMessageInfo

func (m *CacheImageMessage) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CacheImageMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CacheImageMessage) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *CacheImageMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RemoveImageMessage struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Messages             []string `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveImageMessage) Reset()         { *m = RemoveImageMessage{} }
func (m *RemoveImageMessage) String() string { return proto.CompactTextString(m) }
func (*RemoveImageMessage) ProtoMessage()    {}
func (*RemoveImageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{59}
}

func (m *RemoveImageMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveImageMessage.Unmarshal(m, b)
}
func (m *RemoveImageMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveImageMessage.Marshal(b, m, deterministic)
}
func (m *RemoveImageMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveImageMessage.Merge(m, src)
}
func (m *RemoveImageMessage) XXX_Size() int {
	return xxx_messageInfo_RemoveImageMessage.Size(m)
}
func (m *RemoveImageMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveImageMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveImageMessage proto.InternalMessageInfo

func (m *RemoveImageMessage) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *RemoveImageMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RemoveImageMessage) GetMessages() []string {
	if m != nil {
		return m.Messages
	}
	return nil
}

type RemoveWorkloadMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Hook                 string   `protobuf:"bytes,3,opt,name=hook,proto3" json:"hook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveWorkloadMessage) Reset()         { *m = RemoveWorkloadMessage{} }
func (m *RemoveWorkloadMessage) String() string { return proto.CompactTextString(m) }
func (*RemoveWorkloadMessage) ProtoMessage()    {}
func (*RemoveWorkloadMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{60}
}

func (m *RemoveWorkloadMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveWorkloadMessage.Unmarshal(m, b)
}
func (m *RemoveWorkloadMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveWorkloadMessage.Marshal(b, m, deterministic)
}
func (m *RemoveWorkloadMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveWorkloadMessage.Merge(m, src)
}
func (m *RemoveWorkloadMessage) XXX_Size() int {
	return xxx_messageInfo_RemoveWorkloadMessage.Size(m)
}
func (m *RemoveWorkloadMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveWorkloadMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveWorkloadMessage proto.InternalMessageInfo

func (m *RemoveWorkloadMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoveWorkloadMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RemoveWorkloadMessage) GetHook() string {
	if m != nil {
		return m.Hook
	}
	return ""
}

type DissociateWorkloadMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DissociateWorkloadMessage) Reset()         { *m = DissociateWorkloadMessage{} }
func (m *DissociateWorkloadMessage) String() string { return proto.CompactTextString(m) }
func (*DissociateWorkloadMessage) ProtoMessage()    {}
func (*DissociateWorkloadMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{61}
}

func (m *DissociateWorkloadMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DissociateWorkloadMessage.Unmarshal(m, b)
}
func (m *DissociateWorkloadMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DissociateWorkloadMessage.Marshal(b, m, deterministic)
}
func (m *DissociateWorkloadMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DissociateWorkloadMessage.Merge(m, src)
}
func (m *DissociateWorkloadMessage) XXX_Size() int {
	return xxx_messageInfo_DissociateWorkloadMessage.Size(m)
}
func (m *DissociateWorkloadMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DissociateWorkloadMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DissociateWorkloadMessage proto.InternalMessageInfo

func (m *DissociateWorkloadMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DissociateWorkloadMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ReallocResourceMessage struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReallocResourceMessage) Reset()         { *m = ReallocResourceMessage{} }
func (m *ReallocResourceMessage) String() string { return proto.CompactTextString(m) }
func (*ReallocResourceMessage) ProtoMessage()    {}
func (*ReallocResourceMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{62}
}

func (m *ReallocResourceMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReallocResourceMessage.Unmarshal(m, b)
}
func (m *ReallocResourceMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReallocResourceMessage.Marshal(b, m, deterministic)
}
func (m *ReallocResourceMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReallocResourceMessage.Merge(m, src)
}
func (m *ReallocResourceMessage) XXX_Size() int {
	return xxx_messageInfo_ReallocResourceMessage.Size(m)
}
func (m *ReallocResourceMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReallocResourceMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReallocResourceMessage proto.InternalMessageInfo

func (m *ReallocResourceMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CopyMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Error                string   `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopyMessage) Reset()         { *m = CopyMessage{} }
func (m *CopyMessage) String() string { return proto.CompactTextString(m) }
func (*CopyMessage) ProtoMessage()    {}
func (*CopyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{63}
}

func (m *CopyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyMessage.Unmarshal(m, b)
}
func (m *CopyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyMessage.Marshal(b, m, deterministic)
}
func (m *CopyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyMessage.Merge(m, src)
}
func (m *CopyMessage) XXX_Size() int {
	return xxx_messageInfo_CopyMessage.Size(m)
}
func (m *CopyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CopyMessage proto.InternalMessageInfo

func (m *CopyMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CopyMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CopyMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CopyMessage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CopyMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CopyMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SendMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessage) Reset()         { *m = SendMessage{} }
func (m *SendMessage) String() string { return proto.CompactTextString(m) }
func (*SendMessage) ProtoMessage()    {}
func (*SendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{64}
}

func (m *SendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessage.Unmarshal(m, b)
}
func (m *SendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessage.Marshal(b, m, deterministic)
}
func (m *SendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessage.Merge(m, src)
}
func (m *SendMessage) XXX_Size() int {
	return xxx_messageInfo_SendMessage.Size(m)
}
func (m *SendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessage proto.InternalMessageInfo

func (m *SendMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendMessage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SendMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type AttachWorkloadMessage struct {
	WorkloadId           string   `protobuf:"bytes,1,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachWorkloadMessage) Reset()         { *m = AttachWorkloadMessage{} }
func (m *AttachWorkloadMessage) String() string { return proto.CompactTextString(m) }
func (*AttachWorkloadMessage) ProtoMessage()    {}
func (*AttachWorkloadMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{65}
}

func (m *AttachWorkloadMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachWorkloadMessage.Unmarshal(m, b)
}
func (m *AttachWorkloadMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachWorkloadMessage.Marshal(b, m, deterministic)
}
func (m *AttachWorkloadMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachWorkloadMessage.Merge(m, src)
}
func (m *AttachWorkloadMessage) XXX_Size() int {
	return xxx_messageInfo_AttachWorkloadMessage.Size(m)
}
func (m *AttachWorkloadMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachWorkloadMessage.DiscardUnknown(m)
}

var xxx_messageInfo_AttachWorkloadMessage proto.InternalMessageInfo

func (m *AttachWorkloadMessage) GetWorkloadId() string {
	if m != nil {
		return m.WorkloadId
	}
	return ""
}

func (m *AttachWorkloadMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RunAndWaitOptions struct {
	DeployOptions        *DeployOptions `protobuf:"bytes,1,opt,name=deploy_options,json=deployOptions,proto3" json:"deploy_options,omitempty"`
	Cmd                  []byte         `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Async                bool           `protobuf:"varint,3,opt,name=async,proto3" json:"async,omitempty"`
	AsyncTimeout         int32          `protobuf:"varint,4,opt,name=async_timeout,json=asyncTimeout,proto3" json:"async_timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RunAndWaitOptions) Reset()         { *m = RunAndWaitOptions{} }
func (m *RunAndWaitOptions) String() string { return proto.CompactTextString(m) }
func (*RunAndWaitOptions) ProtoMessage()    {}
func (*RunAndWaitOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{66}
}

func (m *RunAndWaitOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunAndWaitOptions.Unmarshal(m, b)
}
func (m *RunAndWaitOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunAndWaitOptions.Marshal(b, m, deterministic)
}
func (m *RunAndWaitOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunAndWaitOptions.Merge(m, src)
}
func (m *RunAndWaitOptions) XXX_Size() int {
	return xxx_messageInfo_RunAndWaitOptions.Size(m)
}
func (m *RunAndWaitOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RunAndWaitOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RunAndWaitOptions proto.InternalMessageInfo

func (m *RunAndWaitOptions) GetDeployOptions() *DeployOptions {
	if m != nil {
		return m.DeployOptions
	}
	return nil
}

func (m *RunAndWaitOptions) GetCmd() []byte {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *RunAndWaitOptions) GetAsync() bool {
	if m != nil {
		return m.Async
	}
	return false
}

func (m *RunAndWaitOptions) GetAsyncTimeout() int32 {
	if m != nil {
		return m.AsyncTimeout
	}
	return 0
}

type ControlWorkloadOptions struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlWorkloadOptions) Reset()         { *m = ControlWorkloadOptions{} }
func (m *ControlWorkloadOptions) String() string { return proto.CompactTextString(m) }
func (*ControlWorkloadOptions) ProtoMessage()    {}
func (*ControlWorkloadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{67}
}

func (m *ControlWorkloadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlWorkloadOptions.Unmarshal(m, b)
}
func (m *ControlWorkloadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlWorkloadOptions.Marshal(b, m, deterministic)
}
func (m *ControlWorkloadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlWorkloadOptions.Merge(m, src)
}
func (m *ControlWorkloadOptions) XXX_Size() int {
	return xxx_messageInfo_ControlWorkloadOptions.Size(m)
}
func (m *ControlWorkloadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlWorkloadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlWorkloadOptions proto.InternalMessageInfo

func (m *ControlWorkloadOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ControlWorkloadOptions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ControlWorkloadOptions) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type ControlWorkloadMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Hook                 []byte   `protobuf:"bytes,3,opt,name=hook,proto3" json:"hook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlWorkloadMessage) Reset()         { *m = ControlWorkloadMessage{} }
func (m *ControlWorkloadMessage) String() string { return proto.CompactTextString(m) }
func (*ControlWorkloadMessage) ProtoMessage()    {}
func (*ControlWorkloadMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{68}
}

func (m *ControlWorkloadMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlWorkloadMessage.Unmarshal(m, b)
}
func (m *ControlWorkloadMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlWorkloadMessage.Marshal(b, m, deterministic)
}
func (m *ControlWorkloadMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlWorkloadMessage.Merge(m, src)
}
func (m *ControlWorkloadMessage) XXX_Size() int {
	return xxx_messageInfo_ControlWorkloadMessage.Size(m)
}
func (m *ControlWorkloadMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlWorkloadMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ControlWorkloadMessage proto.InternalMessageInfo

func (m *ControlWorkloadMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ControlWorkloadMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ControlWorkloadMessage) GetHook() []byte {
	if m != nil {
		return m.Hook
	}
	return nil
}

type LogStreamOptions struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tail                 string   `protobuf:"bytes,2,opt,name=tail,proto3" json:"tail,omitempty"`
	Since                string   `protobuf:"bytes,3,opt,name=since,proto3" json:"since,omitempty"`
	Until                string   `protobuf:"bytes,4,opt,name=until,proto3" json:"until,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogStreamOptions) Reset()         { *m = LogStreamOptions{} }
func (m *LogStreamOptions) String() string { return proto.CompactTextString(m) }
func (*LogStreamOptions) ProtoMessage()    {}
func (*LogStreamOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{69}
}

func (m *LogStreamOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStreamOptions.Unmarshal(m, b)
}
func (m *LogStreamOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStreamOptions.Marshal(b, m, deterministic)
}
func (m *LogStreamOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStreamOptions.Merge(m, src)
}
func (m *LogStreamOptions) XXX_Size() int {
	return xxx_messageInfo_LogStreamOptions.Size(m)
}
func (m *LogStreamOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStreamOptions.DiscardUnknown(m)
}

var xxx_messageInfo_LogStreamOptions proto.InternalMessageInfo

func (m *LogStreamOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LogStreamOptions) GetTail() string {
	if m != nil {
		return m.Tail
	}
	return ""
}

func (m *LogStreamOptions) GetSince() string {
	if m != nil {
		return m.Since
	}
	return ""
}

func (m *LogStreamOptions) GetUntil() string {
	if m != nil {
		return m.Until
	}
	return ""
}

type LogStreamMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogStreamMessage) Reset()         { *m = LogStreamMessage{} }
func (m *LogStreamMessage) String() string { return proto.CompactTextString(m) }
func (*LogStreamMessage) ProtoMessage()    {}
func (*LogStreamMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{70}
}

func (m *LogStreamMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStreamMessage.Unmarshal(m, b)
}
func (m *LogStreamMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStreamMessage.Marshal(b, m, deterministic)
}
func (m *LogStreamMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStreamMessage.Merge(m, src)
}
func (m *LogStreamMessage) XXX_Size() int {
	return xxx_messageInfo_LogStreamMessage.Size(m)
}
func (m *LogStreamMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStreamMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LogStreamMessage proto.InternalMessageInfo

func (m *LogStreamMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LogStreamMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *LogStreamMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExecuteWorkloadOptions struct {
	WorkloadId           string   `protobuf:"bytes,1,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
	Commands             []string `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
	Envs                 []string `protobuf:"bytes,3,rep,name=envs,proto3" json:"envs,omitempty"`
	Workdir              string   `protobuf:"bytes,4,opt,name=workdir,proto3" json:"workdir,omitempty"`
	OpenStdin            bool     `protobuf:"varint,5,opt,name=open_stdin,json=openStdin,proto3" json:"open_stdin,omitempty"`
	ReplCmd              []byte   `protobuf:"bytes,6,opt,name=repl_cmd,json=replCmd,proto3" json:"repl_cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteWorkloadOptions) Reset()         { *m = ExecuteWorkloadOptions{} }
func (m *ExecuteWorkloadOptions) String() string { return proto.CompactTextString(m) }
func (*ExecuteWorkloadOptions) ProtoMessage()    {}
func (*ExecuteWorkloadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{71}
}

func (m *ExecuteWorkloadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteWorkloadOptions.Unmarshal(m, b)
}
func (m *ExecuteWorkloadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteWorkloadOptions.Marshal(b, m, deterministic)
}
func (m *ExecuteWorkloadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteWorkloadOptions.Merge(m, src)
}
func (m *ExecuteWorkloadOptions) XXX_Size() int {
	return xxx_messageInfo_ExecuteWorkloadOptions.Size(m)
}
func (m *ExecuteWorkloadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteWorkloadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteWorkloadOptions proto.InternalMessageInfo

func (m *ExecuteWorkloadOptions) GetWorkloadId() string {
	if m != nil {
		return m.WorkloadId
	}
	return ""
}

func (m *ExecuteWorkloadOptions) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *ExecuteWorkloadOptions) GetEnvs() []string {
	if m != nil {
		return m.Envs
	}
	return nil
}

func (m *ExecuteWorkloadOptions) GetWorkdir() string {
	if m != nil {
		return m.Workdir
	}
	return ""
}

func (m *ExecuteWorkloadOptions) GetOpenStdin() bool {
	if m != nil {
		return m.OpenStdin
	}
	return false
}

func (m *ExecuteWorkloadOptions) GetReplCmd() []byte {
	if m != nil {
		return m.ReplCmd
	}
	return nil
}

type CapacityMessage struct {
	Total                int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	NodeCapacities       map[string]int64 `protobuf:"bytes,2,rep,name=node_capacities,json=nodeCapacities,proto3" json:"node_capacities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CapacityMessage) Reset()         { *m = CapacityMessage{} }
func (m *CapacityMessage) String() string { return proto.CompactTextString(m) }
func (*CapacityMessage) ProtoMessage()    {}
func (*CapacityMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{72}
}

func (m *CapacityMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapacityMessage.Unmarshal(m, b)
}
func (m *CapacityMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapacityMessage.Marshal(b, m, deterministic)
}
func (m *CapacityMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapacityMessage.Merge(m, src)
}
func (m *CapacityMessage) XXX_Size() int {
	return xxx_messageInfo_CapacityMessage.Size(m)
}
func (m *CapacityMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CapacityMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CapacityMessage proto.InternalMessageInfo

func (m *CapacityMessage) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *CapacityMessage) GetNodeCapacities() map[string]int64 {
	if m != nil {
		return m.NodeCapacities
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.TriOpt", TriOpt_name, TriOpt_value)
	proto.RegisterEnum("pb.BuildImageOptions_BuildMethod", BuildImageOptions_BuildMethod_name, BuildImageOptions_BuildMethod_value)
	proto.RegisterEnum("pb.DeployOptions_Strategy", DeployOptions_Strategy_name, DeployOptions_Strategy_value)
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*CoreInfo)(nil), "pb.CoreInfo")
	proto.RegisterType((*ServiceStatus)(nil), "pb.ServiceStatus")
	proto.RegisterType((*ListWorkloadsOptions)(nil), "pb.ListWorkloadsOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.ListWorkloadsOptions.LabelsEntry")
	proto.RegisterType((*Pod)(nil), "pb.Pod")
	proto.RegisterType((*Pods)(nil), "pb.Pods")
	proto.RegisterType((*PodResource)(nil), "pb.PodResource")
	proto.RegisterType((*NodeResource)(nil), "pb.NodeResource")
	proto.RegisterType((*ListNetworkOptions)(nil), "pb.ListNetworkOptions")
	proto.RegisterType((*ConnectNetworkOptions)(nil), "pb.ConnectNetworkOptions")
	proto.RegisterType((*DisconnectNetworkOptions)(nil), "pb.DisconnectNetworkOptions")
	proto.RegisterType((*Network)(nil), "pb.Network")
	proto.RegisterType((*Networks)(nil), "pb.Networks")
	proto.RegisterType((*Node)(nil), "pb.Node")
	proto.RegisterMapType((map[string]int32)(nil), "pb.Node.CpuEntry")
	proto.RegisterMapType((map[string]int32)(nil), "pb.Node.InitCpuEntry")
	proto.RegisterMapType((map[string]int64)(nil), "pb.Node.InitVolumeEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Node.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Node.NumaEntry")
	proto.RegisterMapType((map[string]int64)(nil), "pb.Node.NumaMemoryEntry")
	proto.RegisterMapType((map[string]int64)(nil), "pb.Node.VolumeEntry")
	proto.RegisterType((*Nodes)(nil), "pb.Nodes")
	proto.RegisterType((*NodeAvailable)(nil), "pb.NodeAvailable")
	proto.RegisterType((*SetNodeOptions)(nil), "pb.SetNodeOptions")
	proto.RegisterMapType((map[string]int32)(nil), "pb.SetNodeOptions.DeltaCpuEntry")
	proto.RegisterMapType((map[string]int64)(nil), "pb.SetNodeOptions.DeltaNumaMemoryEntry")
	proto.RegisterMapType((map[string]int64)(nil), "pb.SetNodeOptions.DeltaVolumeEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.SetNodeOptions.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.SetNodeOptions.NumaEntry")
	proto.RegisterType((*Workload)(nil), "pb.Workload")
	proto.RegisterMapType((map[string]string)(nil), "pb.Workload.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Workload.PublishEntry")
	proto.RegisterType((*WorkloadStatus)(nil), "pb.WorkloadStatus")
	proto.RegisterMapType((map[string]string)(nil), "pb.WorkloadStatus.NetworksEntry")
	proto.RegisterType((*WorkloadsStatus)(nil), "pb.WorkloadsStatus")
	proto.RegisterType((*SetWorkloadsStatusOptions)(nil), "pb.SetWorkloadsStatusOptions")
	proto.RegisterType((*WorkloadStatusStreamOptions)(nil), "pb.WorkloadStatusStreamOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.WorkloadStatusStreamOptions.LabelsEntry")
	proto.RegisterType((*WorkloadStatusStreamMessage)(nil), "pb.WorkloadStatusStreamMessage")
	proto.RegisterType((*Workloads)(nil), "pb.Workloads")
	proto.RegisterType((*WorkloadID)(nil), "pb.WorkloadID")
	proto.RegisterType((*WorkloadIDs)(nil), "pb.WorkloadIDs")
	proto.RegisterType((*RemoveWorkloadOptions)(nil), "pb.RemoveWorkloadOptions")
	proto.RegisterType((*DissociateWorkloadOptions)(nil), "pb.DissociateWorkloadOptions")
	proto.RegisterType((*ReallocOptions)(nil), "pb.ReallocOptions")
	proto.RegisterType((*AddPodOptions)(nil), "pb.AddPodOptions")
	proto.RegisterType((*RemovePodOptions)(nil), "pb.RemovePodOptions")
	proto.RegisterType((*GetPodOptions)(nil), "pb.GetPodOptions")
	proto.RegisterType((*AddNodeOptions)(nil), "pb.AddNodeOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.AddNodeOptions.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.AddNodeOptions.NumaEntry")
	proto.RegisterMapType((map[string]int64)(nil), "pb.AddNodeOptions.NumaMemoryEntry")
	proto.RegisterMapType((map[string]int64)(nil), "pb.AddNodeOptions.VolumeMapEntry")
	proto.RegisterType((*RemoveNodeOptions)(nil), "pb.RemoveNodeOptions")
	proto.RegisterType((*GetNodeOptions)(nil), "pb.GetNodeOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.GetNodeOptions.LabelsEntry")
	proto.RegisterType((*GetNodeResourceOptions)(nil), "pb.GetNodeResourceOptions")
	proto.RegisterType((*ListNodesOptions)(nil), "pb.ListNodesOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.ListNodesOptions.LabelsEntry")
	proto.RegisterType((*Build)(nil), "pb.Build")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.ArgsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.ArtifactsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.CacheEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.EnvsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.LabelsEntry")
	proto.RegisterType((*Builds)(nil), "pb.Builds")
	proto.RegisterMapType((map[string]*Build)(nil), "pb.Builds.BuildsEntry")
	proto.RegisterType((*BuildImageOptions)(nil), "pb.BuildImageOptions")
	proto.RegisterType((*HookOptions)(nil), "pb.HookOptions")
	proto.RegisterType((*HealthCheckOptions)(nil), "pb.HealthCheckOptions")
	proto.RegisterType((*LogOptions)(nil), "pb.LogOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.LogOptions.ConfigEntry")
	proto.RegisterType((*EntrypointOptions)(nil), "pb.EntrypointOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.EntrypointOptions.SysctlsEntry")
	proto.RegisterType((*ResourceOptions)(nil), "pb.ResourceOptions")
	proto.RegisterType((*Resource)(nil), "pb.Resource")
	proto.RegisterMapType((map[string]int32)(nil), "pb.Resource.CpuEntry")
	proto.RegisterMapType((map[string]*Volume)(nil), "pb.Resource.VolumePlanLimitEntry")
	proto.RegisterMapType((map[string]*Volume)(nil), "pb.Resource.VolumePlanRequestEntry")
	proto.RegisterType((*Volume)(nil), "pb.Volume")
	proto.RegisterMapType((map[string]int64)(nil), "pb.Volume.VolumeEntry")
	proto.RegisterType((*DeployOptions)(nil), "pb.DeployOptions")
	proto.RegisterMapType((map[string][]byte)(nil), "pb.DeployOptions.DataEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.DeployOptions.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.DeployOptions.NetworksEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.DeployOptions.NodelabelsEntry")
	proto.RegisterType((*ReplaceOptions)(nil), "pb.ReplaceOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.ReplaceOptions.CopyEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.ReplaceOptions.FilterLabelsEntry")
	proto.RegisterType((*CacheImageOptions)(nil), "pb.CacheImageOptions")
	proto.RegisterType((*RemoveImageOptions)(nil), "pb.RemoveImageOptions")
	proto.RegisterType((*CopyPaths)(nil), "pb.CopyPaths")
	proto.RegisterType((*CopyOptions)(nil), "pb.CopyOptions")
	proto.RegisterMapType((map[string]*CopyPaths)(nil), "pb.CopyOptions.TargetsEntry")
	proto.RegisterType((*SendOptions)(nil), "pb.SendOptions")
	proto.RegisterMapType((map[string][]byte)(nil), "pb.SendOptions.DataEntry")
	proto.RegisterType((*ErrorDetail)(nil), "pb.ErrorDetail")
	proto.RegisterType((*BuildImageMessage)(nil), "pb.BuildImageMessage")
	proto.RegisterType((*CreateWorkloadMessage)(nil), "pb.CreateWorkloadMessage")
	proto.RegisterMapType((map[string]string)(nil), "pb.CreateWorkloadMessage.PublishEntry")
	proto.RegisterType((*ReplaceWorkloadMessage)(nil), "pb.ReplaceWorkloadMessage")
	proto.RegisterType((*CacheImageMessage)(nil), "pb.CacheImageMessage")
	proto.RegisterType((*RemoveImageMessage)(nil), "pb.RemoveImageMessage")
	proto.RegisterType((*RemoveWorkloadMessage)(nil), "pb.RemoveWorkloadMessage")
	proto.RegisterType((*DissociateWorkloadMessage)(nil), "pb.DissociateWorkloadMessage")
	proto.RegisterType((*ReallocResourceMessage)(nil), "pb.ReallocResourceMessage")
	proto.RegisterType((*CopyMessage)(nil), "pb.CopyMessage")
	proto.RegisterType((*SendMessage)(nil), "pb.SendMessage")
	proto.RegisterType((*AttachWorkloadMessage)(nil), "pb.AttachWorkloadMessage")
	proto.RegisterType((*RunAndWaitOptions)(nil), "pb.RunAndWaitOptions")
	proto.RegisterType((*ControlWorkloadOptions)(nil), "pb.ControlWorkloadOptions")
	proto.RegisterType((*ControlWorkloadMessage)(nil), "pb.ControlWorkloadMessage")
	proto.RegisterType((*LogStreamOptions)(nil), "pb.LogStreamOptions")
	proto.RegisterType((*LogStreamMessage)(nil), "pb.LogStreamMessage")
	proto.RegisterType((*ExecuteWorkloadOptions)(nil), "pb.ExecuteWorkloadOptions")
	proto.RegisterType((*CapacityMessage)(nil), "pb.CapacityMessage")
	proto.RegisterMapType((map[string]int64)(nil), "pb.CapacityMessage.NodeCapacitiesEntry")
}

func init() { proto.RegisterFile("core.proto", fileDescriptor_f7e43720d1edc0fe) }

var fileDescriptor_f7e43720d1edc0fe = []byte{
	// 4751 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x3c, 0x4d, 0x73, 0x1c, 0x49,
	0x56, 0xea, 0xef, 0xee, 0xd7, 0x1f, 0x6a, 0xa5, 0x65, 0x6d, 0xbb, 0x67, 0x76, 0x6c, 0x97, 0x77,
	0x6c, 0x8f, 0x99, 0xd1, 0x78, 0x3d, 0xac, 0xed, 0x99, 0xf1, 0xcc, 0xae, 0xdc, 0x92, 0x3d, 0x5a,
	0x64, 0x5b, 0x54, 0xdb, 0x33, 0x7c, 0x45, 0x34, 0xa5, 0xaa, 0x94, 0x54, 0x31, 0xd5, 0x55, 0x35,
	0x55, 0xd5, 0xb2, 0xf5, 0x0b, 0x96, 0x13, 0x70, 0x20, 0x88, 0x80, 0x0b, 0x97, 0xbd, 0x13, 0x04,
	0x27, 0x22, 0xe0, 0xc0, 0x1f, 0x20, 0x38, 0x70, 0x84, 0x2b, 0x07, 0x38, 0x10, 0x01, 0x47, 0x0e,
	0x10, 0xf9, 0xf2, 0xa3, 0xb2, 0xaa, 0xab, 0x2d, 0xb7, 0xb5, 0xbb, 0x1c, 0x38, 0x29, 0xf3, 0xe5,
	0xcb, 0x57, 0x99, 0xef, 0xbd, 0x7c, 0xf9, 0x3e, 0xb2, 0x05, 0x60, 0x07, 0x11, 0xdd, 0x0c, 0xa3,
	0x20, 0x09, 0x48, 0x39, 0x3c, 0x30, 0x1a, 0x50, 0xdb, 0x99, 0x86, 0xc9, 0xa9, 0xf1, 0x67, 0x25,
	0x68, 0x8e, 0x82, 0x88, 0xee, 0xfa, 0x87, 0x01, 0x19, 0x40, 0xe3, 0x84, 0x46, 0xb1, 0x1b, 0xf8,
	0x83, 0xd2, 0x95, 0xd2, 0xcd, 0x96, 0x29, 0xbb, 0x6c, 0x24, 0xa2, 0x27, 0x6e, 0x1c, 0xf8, 0x83,
	0x32, 0x1f, 0x11, 0x5d, 0x72, 0x09, 0x9a, 0x07, 0x33, 0xd7, 0x73, 0x26, 0x56, 0x32, 0xa8, 0xf0,
	0x21, 0xec, 0x6f, 0x25, 0xe4, 0x7d, 0xe8, 0x1d, 0x05, 0x9e, 0xe5, 0x1f, 0x4d, 0x24, 0xd5, 0x2a,
	0x22, 0x74, 0x39, 0xf4, 0x6b, 0x41, 0xfb, 0x7b, 0xd0, 0x08, 0xe2, 0x89, 0x15, 0xd9, 0xc7, 0x83,
	0x1a, 0x8e, 0xd7, 0x83, 0x78, 0x2b, 0xb2, 0x8f, 0x8d, 0xdf, 0x85, 0xee, 0x98, 0x46, 0x27, 0xae,
	0x4d, 0xc7, 0x89, 0x95, 0xcc, 0x62, 0xf2, 0x2e, 0xb4, 0x2c, 0xc7, 0x89, 0x68, 0x1c, 0xd3, 0x78,
	0x50, 0xba, 0x52, 0xb9, 0xd9, 0x32, 0x53, 0x00, 0xf9, 0x10, 0x88, 0xeb, 0x27, 0x34, 0x3a, 0xb1,
	0xbc, 0x89, 0xeb, 0x4f, 0x62, 0x6a, 0x07, 0xbe, 0x83, 0xcb, 0xad, 0x98, 0x7d, 0x39, 0xb2, 0xeb,
	0x8f, 0x11, 0x6e, 0xfc, 0x77, 0x09, 0xd6, 0xf7, 0xdc, 0x38, 0xf9, 0x26, 0x88, 0xbe, 0xf5, 0x02,
	0xcb, 0x89, 0x9f, 0x85, 0x89, 0x1b, 0xf8, 0x31, 0xdb, 0xaa, 0x15, 0x86, 0xbe, 0x35, 0xa5, 0x92,
	0x09, 0xa2, 0x4b, 0xde, 0x03, 0xa0, 0x7e, 0x12, 0x9d, 0x86, 0x81, 0xeb, 0x27, 0x82, 0x0f, 0x1a,
	0x84, 0x0c, 0xa1, 0xe9, 0x07, 0x0e, 0xc5, 0xa9, 0x9c, 0x15, 0xaa, 0x4f, 0x1e, 0x40, 0xdd, 0xb3,
	0x0e, 0xa8, 0x17, 0x0f, 0xaa, 0x57, 0x2a, 0x37, 0xdb, 0x77, 0x7e, 0xb0, 0x19, 0x1e, 0x6c, 0x16,
	0x7d, 0x7f, 0x73, 0x0f, 0xd1, 0x76, 0x18, 0x59, 0x53, 0xcc, 0x21, 0xeb, 0x50, 0xf3, 0xdc, 0xa9,
	0x9b, 0x20, 0x83, 0x2a, 0x26, 0xef, 0x0c, 0x3f, 0x85, 0xb6, 0x86, 0x4c, 0xfa, 0x50, 0xf9, 0x96,
	0x9e, 0x8a, 0x45, 0xb3, 0x26, 0x9b, 0x76, 0x62, 0x79, 0x33, 0x2a, 0xd6, 0xca, 0x3b, 0x9f, 0x95,
	0xef, 0x97, 0x8c, 0x8f, 0xa0, 0xb2, 0x1f, 0x38, 0x84, 0x40, 0x55, 0xdb, 0x28, 0xb6, 0x19, 0xcc,
	0xa1, 0xb1, 0x2d, 0xe6, 0x60, 0xdb, 0xb8, 0x06, 0xd5, 0xfd, 0xc0, 0x89, 0xc9, 0x3b, 0x50, 0x0d,
	0x03, 0x87, 0xf3, 0xbe, 0x7d, 0xa7, 0xc1, 0xf6, 0xb0, 0x1f, 0x38, 0x26, 0x02, 0x8d, 0xdf, 0x81,
	0x36, 0xeb, 0xd0, 0x38, 0x98, 0x45, 0x36, 0x2d, 0xa4, 0x7d, 0x0f, 0x7a, 0x8c, 0x23, 0xf1, 0x24,
	0x12, 0x58, 0x83, 0x32, 0x52, 0xea, 0x33, 0x4a, 0x4f, 0x03, 0x87, 0xca, 0xd9, 0x66, 0x17, 0xf1,
	0x64, 0xd7, 0xf8, 0xc7, 0x12, 0x74, 0xf4, 0xf1, 0x42, 0xea, 0x97, 0xa1, 0x6d, 0x87, 0xb3, 0x49,
	0x48, 0x23, 0x9b, 0x0a, 0x01, 0x95, 0x4c, 0xb0, 0xc3, 0xd9, 0x3e, 0x87, 0x30, 0x85, 0x9c, 0xd2,
	0x69, 0x10, 0x9d, 0x2a, 0x9c, 0x0a, 0xe2, 0x74, 0x39, 0x54, 0xa2, 0xdd, 0x80, 0xd5, 0x38, 0x09,
	0x22, 0xeb, 0x88, 0x2a, 0xbc, 0x2a, 0xe2, 0xf5, 0x04, 0x58, 0xa3, 0x77, 0x12, 0x78, 0xb3, 0x69,
	0x8a, 0x57, 0xe3, 0xf4, 0x38, 0x54, 0xa2, 0xad, 0x43, 0xcd, 0x71, 0x0f, 0x0f, 0xe3, 0x41, 0x1d,
	0x55, 0x96, 0x77, 0x8c, 0x47, 0x40, 0x98, 0xfc, 0x9f, 0xd2, 0xe4, 0x65, 0x10, 0x7d, 0xab, 0x69,
	0x5f, 0x18, 0x38, 0xba, 0xf6, 0x89, 0x2e, 0xd9, 0x80, 0xba, 0x13, 0xb9, 0x27, 0x34, 0x12, 0x92,
	0x11, 0x3d, 0xe3, 0x3b, 0xb8, 0x38, 0x0a, 0x7c, 0x9f, 0xda, 0x05, 0xa4, 0x7c, 0x0e, 0x91, 0xa4,
	0x44, 0x97, 0x91, 0x4a, 0xac, 0xe8, 0x88, 0x4a, 0x25, 0x16, 0x3d, 0xc6, 0x54, 0x37, 0x3c, 0xf9,
	0x75, 0xa1, 0xbc, 0xd8, 0x16, 0xb0, 0xbb, 0xe2, 0xe8, 0x62, 0xdb, 0x38, 0x80, 0xc1, 0xb6, 0x1b,
	0xdb, 0xbf, 0xa0, 0xaf, 0xae, 0x43, 0xed, 0x30, 0x60, 0xba, 0xc0, 0x3e, 0xdb, 0x34, 0x79, 0xc7,
	0xb8, 0x07, 0x0d, 0x41, 0xb9, 0x50, 0xd6, 0x03, 0x68, 0xc4, 0xb3, 0x03, 0x9f, 0x26, 0x31, 0xaa,
	0x50, 0xcb, 0x94, 0x5d, 0xe3, 0x13, 0x68, 0x8a, 0x89, 0x31, 0xb9, 0x01, 0x4d, 0xf1, 0x75, 0xa9,
	0xb3, 0x6d, 0xd4, 0x34, 0x0e, 0x33, 0xd5, 0xa0, 0xf1, 0x6f, 0x4d, 0xa8, 0x32, 0xfd, 0x2a, 0xfc,
	0xd6, 0x10, 0x9a, 0xd4, 0x77, 0xf4, 0x53, 0xaf, 0xfa, 0xba, 0xbc, 0x2a, 0x59, 0x79, 0x5d, 0x83,
	0x8a, 0x1d, 0xce, 0xc4, 0x71, 0x5f, 0x93, 0x0a, 0xbe, 0x39, 0x0a, 0x67, 0xfc, 0x6c, 0xb3, 0x51,
	0x66, 0x3d, 0x99, 0xca, 0xce, 0x62, 0xea, 0x08, 0xdd, 0x69, 0xd8, 0xe1, 0xec, 0x45, 0x4c, 0x1d,
	0xc6, 0x2e, 0xae, 0x96, 0x83, 0x3a, 0x1e, 0x7a, 0xd1, 0x63, 0x5a, 0x2e, 0x94, 0x18, 0x67, 0x35,
	0x70, 0x10, 0x38, 0x08, 0x27, 0x32, 0x2b, 0x79, 0x62, 0xb9, 0x9e, 0x75, 0xe0, 0xd1, 0x41, 0x13,
	0x79, 0x9a, 0x02, 0xc8, 0x87, 0xca, 0x10, 0xb5, 0x70, 0x65, 0xeb, 0x6a, 0x65, 0x45, 0x86, 0xe7,
	0x32, 0xb4, 0x5d, 0xdf, 0x4d, 0x26, 0x62, 0x25, 0xc0, 0x3f, 0xc6, 0x40, 0x4f, 0xf8, 0x6a, 0x6e,
	0x43, 0x13, 0x11, 0xd8, 0x56, 0xdb, 0x48, 0xf0, 0xa2, 0x22, 0xb8, 0xeb, 0xbb, 0x89, 0xda, 0x6e,
	0xc3, 0xe5, 0x3d, 0x54, 0x28, 0xff, 0x30, 0x18, 0x74, 0x84, 0x42, 0xb1, 0x8b, 0xe7, 0x3a, 0x54,
	0xfd, 0xd9, 0xd4, 0x1a, 0x74, 0x91, 0x02, 0x51, 0x14, 0x9e, 0xce, 0xa6, 0x16, 0x9f, 0x8e, 0xe3,
	0xe4, 0x53, 0x68, 0xb3, 0xbf, 0x72, 0x39, 0x3d, 0x44, 0x1f, 0x64, 0xd0, 0xf9, 0xba, 0xf8, 0x24,
	0xf0, 0x15, 0x00, 0x15, 0x86, 0x9f, 0xde, 0xc1, 0x2a, 0xee, 0x42, 0x76, 0xc9, 0x55, 0xe8, 0xc8,
	0xe3, 0x8e, 0x1c, 0xed, 0xe3, 0x70, 0x5b, 0xc0, 0x90, 0xa5, 0x57, 0xa1, 0x83, 0xbb, 0x94, 0x14,
	0xd6, 0x38, 0x0a, 0x83, 0x8d, 0x05, 0x95, 0x4f, 0x05, 0xa7, 0xf8, 0xd1, 0x1f, 0x90, 0xdc, 0xd2,
	0x18, 0x2f, 0xbe, 0xc6, 0x21, 0xb1, 0x34, 0x57, 0x01, 0x98, 0x48, 0xc4, 0xac, 0x0b, 0x39, 0x91,
	0xe8, 0x33, 0x04, 0x0e, 0x13, 0x89, 0x30, 0x3a, 0xb8, 0xda, 0x75, 0x2e, 0x12, 0x0e, 0x62, 0x8b,
	0x1d, 0xde, 0x85, 0xa6, 0xe4, 0xfa, 0x59, 0x77, 0x42, 0x4d, 0xbb, 0x13, 0xce, 0x71, 0x9d, 0x0c,
	0x3f, 0x83, 0x8e, 0x2e, 0xec, 0xa5, 0x3e, 0x7b, 0x0f, 0x5a, 0x4a, 0xcc, 0x4b, 0x7d, 0xf4, 0x0b,
	0x58, 0xcd, 0x09, 0xfc, 0xac, 0xe9, 0x95, 0xdc, 0xf4, 0x9c, 0x50, 0x96, 0x9a, 0xfe, 0x29, 0xb4,
	0xdf, 0x72, 0xaa, 0x71, 0x03, 0x6a, 0x4c, 0xba, 0x31, 0x79, 0x0f, 0x6a, 0x78, 0xcd, 0x09, 0xdb,
	0xd4, 0x54, 0xb7, 0x20, 0x07, 0x1b, 0x3b, 0xd0, 0x65, 0xdd, 0x2d, 0x75, 0x78, 0x75, 0x0f, 0xa3,
	0x94, 0xf3, 0x30, 0x34, 0x4b, 0x54, 0xce, 0x58, 0x22, 0xe3, 0xef, 0xeb, 0xd0, 0x1b, 0xd3, 0x84,
	0x91, 0x92, 0x56, 0xfa, 0x75, 0x84, 0x3e, 0x00, 0x88, 0xd1, 0xdf, 0x9a, 0x04, 0x21, 0x37, 0x78,
	0xbd, 0x3b, 0xc0, 0x96, 0xf6, 0x3c, 0x72, 0x9f, 0x85, 0x89, 0xd9, 0xe2, 0xa3, 0xcf, 0xc2, 0x84,
	0x7c, 0x01, 0x2d, 0x87, 0x7a, 0x89, 0x85, 0xc7, 0xbf, 0x82, 0x9b, 0xb8, 0xc2, 0x30, 0xb3, 0x5f,
	0xdb, 0xdc, 0x66, 0x38, 0xca, 0x12, 0x34, 0x1d, 0xd1, 0x65, 0xc7, 0x8a, 0x4f, 0x17, 0xe7, 0xb9,
	0xca, 0x8f, 0x15, 0xc2, 0xc4, 0xb1, 0xbd, 0x06, 0x5d, 0x8e, 0x22, 0x8f, 0x1e, 0xf7, 0x80, 0xf8,
	0x3c, 0x79, 0xf6, 0xc6, 0xb0, 0xc6, 0x91, 0x74, 0xe3, 0x50, 0xc7, 0xe5, 0xdc, 0x58, 0xb4, 0x9c,
	0xbc, 0xad, 0x58, 0x75, 0xb2, 0x50, 0x72, 0x5b, 0xd8, 0xa4, 0x06, 0xd2, 0x79, 0xb7, 0x80, 0x4e,
	0xde, 0x3a, 0xdd, 0x55, 0xa6, 0xb5, 0x89, 0x73, 0xde, 0x2b, 0x98, 0x53, 0x64, 0x64, 0x1f, 0x49,
	0x36, 0x08, 0x2b, 0xc0, 0x0d, 0xf3, 0xb5, 0x45, 0x2b, 0xd7, 0x8d, 0x02, 0xe7, 0x95, 0xb0, 0x23,
	0xef, 0x43, 0xef, 0xa5, 0xf4, 0x26, 0x27, 0x4e, 0xf0, 0xd2, 0x47, 0x7b, 0xdd, 0x34, 0xbb, 0x0a,
	0xba, 0x1d, 0xbc, 0xf4, 0x87, 0x9f, 0x43, 0x37, 0x23, 0x90, 0xa5, 0x4e, 0xeb, 0x43, 0x58, 0x2f,
	0x62, 0xdf, 0x52, 0x47, 0xe7, 0xad, 0x4f, 0xfc, 0x39, 0x2c, 0xd4, 0x97, 0xd0, 0xcf, 0x33, 0x6f,
	0xa9, 0x33, 0xfb, 0x1f, 0x15, 0x68, 0x4a, 0x57, 0x9d, 0xf4, 0xa0, 0xec, 0x3a, 0x62, 0x5e, 0xd9,
	0x75, 0x16, 0x1f, 0xbd, 0xd7, 0x86, 0x04, 0xd2, 0xd5, 0xa8, 0x6a, 0xae, 0xc6, 0x7b, 0x00, 0x61,
	0xe4, 0x9e, 0xb8, 0x1e, 0x3d, 0x12, 0x1e, 0x41, 0xd3, 0xd4, 0x20, 0xe4, 0xb6, 0x52, 0xb1, 0x7a,
	0x7a, 0xc1, 0xc8, 0x75, 0x15, 0x2a, 0xd7, 0x27, 0xd0, 0x08, 0x67, 0x07, 0x9e, 0x1b, 0x1f, 0x0b,
	0x4d, 0xbe, 0x94, 0x99, 0xb2, 0xcf, 0xc7, 0xc4, 0x1d, 0x2d, 0x30, 0x19, 0x1f, 0xdc, 0x29, 0x3b,
	0x6d, 0x4d, 0xce, 0x47, 0xec, 0x90, 0x5b, 0x50, 0xe7, 0x47, 0x7f, 0xd0, 0xba, 0x52, 0x92, 0xf7,
	0xb4, 0xa4, 0xc4, 0x43, 0x34, 0x53, 0x60, 0x90, 0x9b, 0xd0, 0x54, 0x3e, 0x3e, 0x20, 0x76, 0x87,
	0x61, 0x2b, 0xff, 0x5e, 0x8d, 0xa2, 0xd7, 0x1e, 0x51, 0x2b, 0xa1, 0x93, 0xc4, 0x9d, 0xd2, 0x41,
	0x9b, 0xdf, 0x67, 0x1c, 0xf4, 0xdc, 0x9d, 0xd2, 0x73, 0xde, 0x4b, 0xfa, 0x06, 0x97, 0x0a, 0x91,
	0xfe, 0xa7, 0x04, 0xbd, 0xec, 0xe6, 0x8a, 0xe4, 0x1e, 0xcd, 0x7c, 0xdf, 0xf5, 0x8f, 0x70, 0x7a,
	0xd3, 0x94, 0x5d, 0x36, 0x72, 0x4c, 0x2d, 0x2f, 0x39, 0x3e, 0x15, 0x5e, 0xad, 0xec, 0x92, 0x07,
	0x9a, 0x4b, 0x5a, 0x4d, 0x2d, 0x66, 0xf6, 0x4b, 0xd2, 0x43, 0x15, 0xb2, 0x54, 0x33, 0x98, 0x6f,
	0x47, 0x5f, 0x25, 0xd4, 0xc7, 0x68, 0x9a, 0xa9, 0x47, 0xc7, 0x4c, 0x01, 0x6c, 0x7b, 0x49, 0xe2,
	0x09, 0x7f, 0x91, 0x35, 0xd9, 0x59, 0xcf, 0x90, 0x5a, 0x8a, 0x03, 0x5f, 0xc0, 0xaa, 0x8a, 0x4e,
	0x05, 0x07, 0x52, 0x15, 0x28, 0xa5, 0xae, 0x5a, 0xb1, 0x0a, 0x18, 0x8f, 0xe1, 0xd2, 0x98, 0x26,
	0x39, 0x0a, 0xf2, 0x02, 0x5a, 0x86, 0xd0, 0x7f, 0x95, 0xe0, 0x9d, 0xec, 0xd0, 0x38, 0x89, 0xa8,
	0x35, 0xfd, 0xe5, 0x46, 0xec, 0xa3, 0x5c, 0xc4, 0xfe, 0x6b, 0xf3, 0x2b, 0xcc, 0x2c, 0xa3, 0xe8,
	0xf4, 0x9d, 0x27, 0x44, 0xff, 0xab, 0x05, 0xbb, 0x7e, 0x42, 0xe3, 0x98, 0x9d, 0xc6, 0xbc, 0x32,
	0xde, 0x84, 0xa6, 0xb4, 0xf3, 0x48, 0x4c, 0x9c, 0x38, 0x49, 0xc2, 0x54, 0xa3, 0x1a, 0xef, 0x2b,
	0x67, 0x9e, 0xe3, 0x75, 0xa8, 0xd1, 0x28, 0x0a, 0x22, 0x61, 0xa5, 0x78, 0x07, 0x63, 0x51, 0xea,
	0xd1, 0x84, 0x0a, 0x13, 0x25, 0x7a, 0xc6, 0x3d, 0x68, 0x29, 0x79, 0x93, 0x5b, 0xd0, 0x52, 0x17,
	0x8f, 0x90, 0x72, 0x76, 0x45, 0xe9, 0xb0, 0xf1, 0x2e, 0x80, 0x04, 0xef, 0x6e, 0xe7, 0xb7, 0x66,
	0x5c, 0x86, 0x76, 0x3a, 0x1a, 0x33, 0x2e, 0xba, 0x8e, 0x4c, 0x00, 0xb1, 0xa6, 0x31, 0x86, 0x8b,
	0x26, 0x9d, 0x06, 0x27, 0x54, 0xa2, 0x49, 0xd5, 0x98, 0x43, 0x4d, 0xa3, 0xcd, 0xb2, 0x16, 0x6d,
	0x32, 0x5b, 0x1c, 0x27, 0x34, 0x44, 0x86, 0xd4, 0x4c, 0x6c, 0x1b, 0x1f, 0xc1, 0xa5, 0x6d, 0x37,
	0x8e, 0x03, 0xdb, 0xb5, 0x92, 0xb3, 0x09, 0x1b, 0x7f, 0x50, 0x82, 0x9e, 0x49, 0x2d, 0xcf, 0x0b,
	0x6c, 0x89, 0x94, 0x17, 0xd1, 0x87, 0xd0, 0x39, 0x70, 0x7d, 0x87, 0x79, 0x4b, 0x0b, 0x7c, 0x2b,
	0x60, 0xe3, 0xa3, 0x70, 0xc6, 0x9c, 0xab, 0xfb, 0xd0, 0x95, 0x46, 0x92, 0x61, 0x4b, 0x69, 0x5d,
	0xd0, 0xed, 0xa8, 0xf8, 0x92, 0xd9, 0x89, 0x52, 0x40, 0x6c, 0xdc, 0x83, 0xee, 0x96, 0xe3, 0xec,
	0x07, 0x6a, 0xb5, 0x6f, 0x9a, 0xe7, 0xb9, 0x0e, 0x7d, 0xce, 0xc7, 0xd7, 0xcf, 0x35, 0xae, 0x41,
	0xf7, 0x31, 0x4d, 0xce, 0x40, 0xfa, 0xa7, 0x1a, 0xf4, 0xb6, 0x1c, 0xe7, 0x4d, 0xdd, 0xce, 0xb7,
	0x8b, 0xb2, 0x7b, 0x50, 0xb6, 0x2d, 0xa1, 0x9c, 0x65, 0xdb, 0x62, 0x0b, 0xb1, 0x69, 0x94, 0x88,
	0x4c, 0x22, 0xb6, 0xe5, 0xa9, 0xab, 0xa7, 0xa7, 0xae, 0xcf, 0x63, 0xf3, 0x06, 0x4a, 0x1b, 0x03,
	0xf1, 0x75, 0xa8, 0xc5, 0xc7, 0x56, 0xc4, 0x6f, 0xbc, 0x9a, 0xc9, 0x3b, 0x5a, 0x0c, 0xde, 0xca,
	0xc4, 0xe0, 0xa9, 0xa7, 0x07, 0xa9, 0xa7, 0x97, 0xdd, 0x6b, 0xe1, 0x65, 0x2c, 0x7d, 0xca, 0x76,
	0xea, 0x53, 0xe6, 0x66, 0xe5, 0x7d, 0xca, 0x51, 0x36, 0xe2, 0xed, 0xe0, 0x44, 0x63, 0xc1, 0xc4,
	0x37, 0x88, 0x7d, 0xbb, 0xd9, 0xd8, 0xf7, 0x27, 0x20, 0x22, 0xc7, 0xc9, 0xd4, 0x0a, 0x45, 0x3c,
	0x7d, 0xb5, 0x80, 0x3a, 0x77, 0x9b, 0x9e, 0x58, 0x21, 0x27, 0xde, 0x3a, 0x91, 0xfd, 0xf3, 0xdc,
	0xce, 0xff, 0x57, 0x91, 0xdf, 0x03, 0xe8, 0x65, 0xf7, 0xb3, 0x94, 0x27, 0xf8, 0x31, 0xac, 0xf1,
	0x33, 0xf2, 0x86, 0x8a, 0x6d, 0xfc, 0x45, 0x09, 0x7a, 0x8f, 0xdf, 0x3c, 0xfc, 0x4a, 0x75, 0xab,
	0x9c, 0xea, 0xd6, 0xe3, 0x33, 0xa3, 0x88, 0xf3, 0x5c, 0x35, 0x26, 0x6c, 0x88, 0x0f, 0xe4, 0xec,
	0x0a, 0xb9, 0x0e, 0x55, 0x34, 0x3d, 0xa5, 0xf4, 0xa2, 0xc8, 0x2e, 0xc5, 0xc4, 0x71, 0xf6, 0xb5,
	0x43, 0xf7, 0x95, 0xb0, 0xa9, 0xac, 0x69, 0xfc, 0x75, 0x09, 0xfa, 0x98, 0xdf, 0x64, 0x91, 0xec,
	0xd9, 0xd9, 0xcd, 0x3e, 0x54, 0x2c, 0xcf, 0x93, 0x04, 0x2c, 0xcf, 0x23, 0xf7, 0x15, 0x1f, 0xb4,
	0xc0, 0x32, 0x4f, 0xf1, 0x17, 0xcd, 0x89, 0x7f, 0xae, 0x41, 0xed, 0xe1, 0xcc, 0xf5, 0x30, 0x35,
	0x7e, 0x60, 0xc5, 0xca, 0xa2, 0xb1, 0x36, 0x83, 0x45, 0x34, 0x0c, 0xa4, 0xc9, 0x64, 0x6d, 0xbd,
	0x66, 0x52, 0xc9, 0xd6, 0x4c, 0xfa, 0x50, 0x71, 0x5c, 0x79, 0x71, 0xb2, 0x26, 0xf3, 0xde, 0xe2,
	0xd9, 0xc1, 0x34, 0x70, 0x66, 0x9e, 0xbc, 0x39, 0x53, 0x00, 0x53, 0x0a, 0x3b, 0x98, 0x4e, 0x2d,
	0xdf, 0x91, 0x99, 0x62, 0xd5, 0x27, 0x37, 0xa0, 0x4a, 0xfd, 0x93, 0x58, 0xb8, 0xf0, 0x78, 0x05,
	0xe0, 0x32, 0x37, 0x77, 0xfc, 0x13, 0xb1, 0x7b, 0x44, 0x60, 0x88, 0x56, 0x74, 0x24, 0x23, 0x50,
	0x0d, 0x71, 0x2b, 0x3a, 0x92, 0x88, 0x0c, 0x81, 0x7c, 0x94, 0xcb, 0x03, 0x5e, 0x4c, 0x51, 0x8b,
	0x2c, 0xd7, 0x5d, 0x68, 0x59, 0x51, 0xe2, 0x1e, 0x5a, 0x76, 0x22, 0x8d, 0xde, 0x40, 0x27, 0x2e,
	0x86, 0x84, 0x79, 0x50, 0xa8, 0xe4, 0x16, 0xd4, 0x6c, 0xcb, 0x3e, 0xa6, 0xc2, 0xe4, 0xad, 0xa7,
	0x73, 0x46, 0x0c, 0xcc, 0xf1, 0x39, 0x0a, 0x8b, 0x04, 0xe2, 0x24, 0x08, 0x27, 0xb1, 0x7b, 0xe4,
	0x5b, 0x9e, 0x48, 0x10, 0x02, 0x03, 0x8d, 0x11, 0xc2, 0x38, 0x14, 0x53, 0x7b, 0x16, 0xb9, 0xc9,
	0x29, 0x1a, 0xb2, 0xa6, 0xa9, 0xfa, 0xcc, 0x98, 0x28, 0x5e, 0x2c, 0x6b, 0x85, 0x14, 0x6f, 0x7e,
	0x55, 0xd1, 0xe8, 0x03, 0xe8, 0x65, 0x59, 0xb6, 0xd4, 0xec, 0xfb, 0x00, 0x29, 0xf3, 0x96, 0x52,
	0xef, 0x3f, 0x2d, 0x41, 0x1d, 0xb9, 0x1f, 0xb3, 0xab, 0x2d, 0x4e, 0xac, 0x23, 0x55, 0x48, 0x13,
	0x3d, 0xb2, 0x09, 0x75, 0xac, 0xdf, 0x49, 0xf3, 0xb3, 0xa1, 0x24, 0x16, 0x8b, 0x3f, 0x42, 0x31,
	0x38, 0xd6, 0x70, 0x1b, 0xda, 0x1a, 0xb8, 0x60, 0x35, 0x97, 0xf5, 0xd5, 0xb4, 0xef, 0xb4, 0x14,
	0x3d, 0x7d, 0x61, 0x3f, 0x2f, 0xc3, 0x1a, 0x02, 0x77, 0x59, 0xa4, 0x79, 0x86, 0xdb, 0x32, 0x8b,
	0x55, 0x11, 0x04, 0xdb, 0xec, 0xa3, 0x33, 0xd7, 0x11, 0xce, 0x1b, 0x6b, 0x32, 0xac, 0xc4, 0x3a,
	0xe2, 0xae, 0x7b, 0xcb, 0xc4, 0x36, 0x31, 0xd4, 0xce, 0x6a, 0xb8, 0x12, 0x48, 0x77, 0x26, 0x77,
	0x83, 0x11, 0x94, 0x15, 0xa1, 0xab, 0xd0, 0x31, 0x59, 0x93, 0x6c, 0x43, 0x87, 0xd7, 0x37, 0xa7,
	0x34, 0x39, 0x0e, 0x78, 0xbe, 0xbd, 0xc7, 0xef, 0xc8, 0xb9, 0x05, 0x73, 0xc8, 0x13, 0x44, 0x34,
	0xdb, 0x07, 0x69, 0x87, 0x5c, 0x82, 0x26, 0x7d, 0xe5, 0xc6, 0xc9, 0xc4, 0x75, 0x44, 0x4c, 0xdd,
	0xc0, 0xfe, 0xae, 0x63, 0xdc, 0x12, 0x0c, 0x14, 0x98, 0x0d, 0xa8, 0x8c, 0x47, 0x4f, 0xfa, 0x2b,
	0xac, 0x61, 0x6e, 0x7d, 0xd3, 0x2f, 0x91, 0x16, 0xd4, 0x76, 0x7e, 0x6b, 0x77, 0xfc, 0xbc, 0x5f,
	0x36, 0x28, 0xb4, 0xbf, 0x0a, 0x02, 0x55, 0x6b, 0xb9, 0x0c, 0x6d, 0xeb, 0x30, 0xa1, 0xd1, 0x24,
	0x4e, 0xac, 0x28, 0x11, 0x82, 0x04, 0x04, 0x8d, 0x19, 0x84, 0x21, 0x1c, 0xd0, 0xc3, 0x20, 0xa2,
	0x13, 0x76, 0x8a, 0x44, 0xa5, 0x04, 0x38, 0x68, 0x9c, 0x04, 0xe1, 0x82, 0xda, 0x4b, 0x02, 0xe4,
	0x2b, 0x0c, 0x57, 0x47, 0xc7, 0xd4, 0x56, 0x5f, 0x7b, 0x07, 0x5a, 0x89, 0x1d, 0x4e, 0xc2, 0x20,
	0x4a, 0xa4, 0xd2, 0x34, 0x13, 0x3b, 0xdc, 0x67, 0x7d, 0x36, 0x78, 0x9c, 0x24, 0x7c, 0x54, 0xba,
	0x6f, 0x0c, 0xc0, 0x46, 0x51, 0x3e, 0x91, 0x27, 0xec, 0x23, 0x6b, 0xa2, 0x9b, 0x16, 0x38, 0x3c,
	0xf7, 0x51, 0x33, 0xb1, 0x6d, 0xfc, 0x51, 0x09, 0x60, 0x2f, 0x38, 0xd2, 0x84, 0x9f, 0x9c, 0x86,
	0x4a, 0xf8, 0xac, 0x4d, 0xee, 0x40, 0xdd, 0x0e, 0xfc, 0x43, 0xf7, 0x48, 0x28, 0xe7, 0x10, 0xef,
	0x04, 0x35, 0x67, 0x73, 0x84, 0x83, 0x42, 0x41, 0x39, 0x26, 0x3b, 0xa6, 0x1a, 0x78, 0xa9, 0xe3,
	0xf2, 0x97, 0x15, 0x58, 0xdb, 0x51, 0xd1, 0xe2, 0xeb, 0xb4, 0x72, 0x00, 0x0d, 0x61, 0xab, 0x65,
	0x06, 0x48, 0x74, 0x73, 0x19, 0x9d, 0xca, 0x5c, 0x46, 0x67, 0xfe, 0x96, 0xb8, 0x02, 0x15, 0x2f,
	0x38, 0x12, 0x4a, 0xda, 0xcb, 0xee, 0xd0, 0x64, 0x43, 0x78, 0x8d, 0x8a, 0x9c, 0x0e, 0xbf, 0x28,
	0x54, 0xe2, 0xe6, 0x3e, 0xb4, 0x79, 0xa2, 0xc1, 0x66, 0x92, 0x43, 0x65, 0x15, 0x47, 0x78, 0x5e,
	0xa0, 0xa6, 0x8e, 0x4a, 0xae, 0x41, 0xf5, 0x38, 0x08, 0xbe, 0x45, 0xed, 0x6c, 0xdf, 0x59, 0xc5,
	0x29, 0xa9, 0xaa, 0x99, 0x38, 0x48, 0xde, 0x87, 0x5e, 0x44, 0x51, 0xd9, 0x26, 0x61, 0xe0, 0xb9,
	0x36, 0xf7, 0x8b, 0x5b, 0x66, 0x57, 0x40, 0xf7, 0x11, 0x48, 0x1e, 0x40, 0x23, 0x3e, 0x8d, 0xed,
	0x44, 0xf9, 0xc7, 0xe8, 0xb0, 0xce, 0x71, 0x72, 0x73, 0xcc, 0x91, 0x44, 0xf2, 0x49, 0x4c, 0x19,
	0x7e, 0x06, 0x1d, 0x7d, 0x60, 0x29, 0x89, 0xfd, 0x6b, 0x19, 0x56, 0xe7, 0x7d, 0x98, 0x55, 0x16,
	0x70, 0x7d, 0x37, 0x0b, 0x12, 0x6b, 0xc2, 0xcb, 0xe8, 0x25, 0x5e, 0xa6, 0xb5, 0xc3, 0xd9, 0x6f,
	0x32, 0xe8, 0x1e, 0x03, 0x92, 0x5b, 0xb0, 0x96, 0xe2, 0x45, 0xf4, 0xbb, 0x19, 0x8d, 0x65, 0x11,
	0x79, 0x55, 0x62, 0x9a, 0x1c, 0x2c, 0xeb, 0x76, 0x2c, 0x5a, 0x93, 0x09, 0x1e, 0x3b, 0x9c, 0x3d,
	0x74, 0x7d, 0xac, 0x15, 0x89, 0xfa, 0x1c, 0xff, 0x96, 0x48, 0x6a, 0x73, 0x18, 0xff, 0x52, 0x5a,
	0x87, 0x96, 0x9f, 0xe1, 0x59, 0x6d, 0x51, 0x87, 0x96, 0x1f, 0xb9, 0x06, 0x5d, 0x59, 0x98, 0xe2,
	0xa4, 0x78, 0x62, 0x47, 0x56, 0xab, 0x38, 0x2d, 0xad, 0x58, 0x2d, 0x89, 0xf1, 0x92, 0xa0, 0x2c,
	0x56, 0x6b, 0xd4, 0xb8, 0xd7, 0x1e, 0x0b, 0x6a, 0x4d, 0x54, 0x9d, 0x8e, 0x00, 0x2a, 0x6a, 0x12,
	0x49, 0x52, 0x6b, 0x21, 0x9a, 0x28, 0x74, 0xc7, 0x82, 0x9a, 0xf1, 0xef, 0x35, 0x68, 0xaa, 0x62,
	0xfc, 0x2f, 0x83, 0xc3, 0x37, 0x78, 0x88, 0x56, 0x49, 0x9d, 0x13, 0xf9, 0xb9, 0x5c, 0x09, 0xf5,
	0xff, 0x05, 0xbf, 0xc9, 0x13, 0x58, 0x93, 0x4f, 0x0d, 0x3c, 0xcb, 0x17, 0x14, 0x21, 0x8d, 0xd7,
	0x14, 0x73, 0x78, 0x64, 0xb3, 0xef, 0x59, 0x3e, 0x7e, 0x41, 0x14, 0x37, 0x4e, 0xb2, 0x50, 0x32,
	0x86, 0x0b, 0x3a, 0x39, 0xf9, 0xed, 0x76, 0x5a, 0x79, 0x28, 0x20, 0x28, 0xd6, 0xc2, 0x49, 0xae,
	0x9d, 0xe4, 0xe1, 0x6f, 0x5d, 0x78, 0x7c, 0x0a, 0xeb, 0x45, 0xab, 0x2e, 0xa0, 0x71, 0x25, 0xeb,
	0x4b, 0xe0, 0x0d, 0xce, 0xa7, 0xea, 0xf4, 0xf6, 0x61, 0xa3, 0x78, 0xd1, 0x6f, 0x4b, 0xd1, 0x88,
	0xa1, 0x2e, 0x6a, 0x2c, 0x9b, 0xaa, 0x56, 0x5b, 0x4a, 0xdd, 0x23, 0x3e, 0x56, 0x54, 0xad, 0x3d,
	0x4f, 0x99, 0xf0, 0xe7, 0x2d, 0xe8, 0x6e, 0xd3, 0xd0, 0x0b, 0x4e, 0x5f, 0x77, 0xf3, 0xfc, 0x68,
	0x2e, 0xc5, 0x29, 0x8e, 0xcb, 0x9c, 0xb9, 0xcd, 0x64, 0x3e, 0x17, 0x67, 0x54, 0xde, 0x85, 0x96,
	0x8c, 0x45, 0xa5, 0xff, 0x94, 0x02, 0xd2, 0xca, 0x40, 0x4d, 0xaf, 0x0c, 0x7c, 0x1f, 0x80, 0xbe,
	0x4a, 0x22, 0x6b, 0x82, 0xb1, 0x07, 0x4f, 0xb4, 0xb4, 0x10, 0xc2, 0x5c, 0x6b, 0x36, 0xc9, 0x0e,
	0x66, 0x7e, 0x22, 0x12, 0x2e, 0xbc, 0xc3, 0x78, 0x41, 0xfd, 0x13, 0x71, 0x2c, 0x58, 0x13, 0xef,
	0x42, 0x3f, 0x16, 0x27, 0x80, 0x35, 0x99, 0x03, 0xc3, 0x09, 0x1f, 0x07, 0xb1, 0x08, 0x3c, 0x5a,
	0x26, 0xff, 0xd6, 0x57, 0x0c, 0x42, 0x3e, 0xd7, 0xd2, 0xe9, 0x5c, 0x7b, 0x2f, 0xb3, 0xcd, 0x67,
	0xf8, 0xb6, 0x30, 0x9b, 0x7e, 0x05, 0xda, 0xa2, 0x3d, 0x65, 0xce, 0x08, 0x0f, 0x38, 0x74, 0x90,
	0xf2, 0x36, 0xbb, 0x9a, 0xb7, 0xb9, 0x0e, 0x35, 0x87, 0x1e, 0xcc, 0x8e, 0x06, 0x3d, 0xee, 0x33,
	0x61, 0x87, 0xb1, 0x2d, 0x08, 0xa9, 0x3f, 0x4e, 0x1c, 0xd7, 0xc7, 0x17, 0x06, 0x4d, 0x33, 0x05,
	0x90, 0x1f, 0xa9, 0x68, 0xab, 0x8f, 0x8b, 0xfc, 0xfe, 0xfc, 0x22, 0x8b, 0xa2, 0xae, 0x2d, 0x00,
	0xc6, 0x7a, 0x31, 0x75, 0x2d, 0x3d, 0xee, 0xb9, 0xfd, 0x29, 0x1c, 0x99, 0xfb, 0x51, 0x00, 0x32,
	0x82, 0x55, 0x07, 0x91, 0x27, 0x71, 0x12, 0x59, 0x09, 0x3d, 0x3a, 0x1d, 0x10, 0x74, 0x61, 0x87,
	0xf3, 0x74, 0xc6, 0x02, 0xc3, 0xec, 0xf1, 0x29, 0xb2, 0x4f, 0x3e, 0x86, 0xaa, 0x63, 0x25, 0x96,
	0x78, 0x9f, 0xf0, 0xce, 0xfc, 0xcc, 0x6d, 0x2b, 0x91, 0x69, 0x2b, 0x86, 0xc8, 0xe4, 0xc6, 0x1f,
	0x7a, 0x71, 0x43, 0xb5, 0x8e, 0x72, 0xc7, 0x65, 0x09, 0xc3, 0x77, 0x19, 0xda, 0xee, 0x91, 0xcf,
	0x3c, 0x53, 0xf4, 0x3a, 0x2e, 0x72, 0xbf, 0x88, 0x83, 0x98, 0xdf, 0xc1, 0xcc, 0x3a, 0xf7, 0x6d,
	0x79, 0x25, 0x68, 0xb0, 0x81, 0xa2, 0xe7, 0xfe, 0xee, 0x08, 0x41, 0xec, 0x12, 0x8e, 0xac, 0x97,
	0x5c, 0xe7, 0xbe, 0x87, 0x1e, 0x7b, 0x23, 0xb2, 0x5e, 0xa2, 0xc6, 0xcd, 0xe5, 0x4e, 0x07, 0x6f,
	0x98, 0x3b, 0x3d, 0x57, 0xc5, 0xe4, 0x3c, 0x21, 0xe1, 0x17, 0xb0, 0x9a, 0x13, 0xe3, 0xb2, 0x51,
	0xac, 0x92, 0xc1, 0x59, 0x13, 0x3b, 0xba, 0x95, 0xf9, 0x31, 0x34, 0x95, 0x98, 0x9b, 0x50, 0xdd,
	0x7a, 0xf1, 0xfc, 0x59, 0x7f, 0x85, 0xb5, 0x1e, 0xed, 0xee, 0xed, 0xf5, 0x4b, 0xac, 0xb5, 0xb3,
	0x35, 0xfa, 0xaa, 0x5f, 0x26, 0x00, 0xf5, 0xc7, 0x7b, 0xcf, 0x1e, 0x6e, 0xed, 0xf5, 0x2b, 0x2c,
	0x26, 0xd9, 0x7e, 0xf1, 0xe4, 0xc9, 0x6f, 0xf7, 0x6d, 0xe3, 0x3f, 0xcb, 0xd0, 0x33, 0x69, 0xe8,
	0x59, 0xa9, 0xc7, 0xf5, 0x31, 0xb4, 0x1c, 0xa9, 0x1e, 0x22, 0x75, 0xb4, 0x36, 0xa7, 0x33, 0x66,
	0x8a, 0x43, 0xae, 0x43, 0x4f, 0x9c, 0x3a, 0xd7, 0x3f, 0xa6, 0x91, 0x9b, 0x88, 0x44, 0x50, 0x0e,
	0x4a, 0x76, 0xa1, 0x7b, 0xe8, 0x7a, 0x4c, 0x2b, 0x32, 0xa9, 0xa1, 0x1f, 0x70, 0xb1, 0xea, 0x6b,
	0xd8, 0x7c, 0x84, 0x78, 0xfa, 0xa1, 0xea, 0x1c, 0x6a, 0x20, 0x72, 0x9b, 0x45, 0x20, 0xe1, 0xa9,
	0x28, 0xee, 0xbc, 0x5b, 0x40, 0x61, 0x14, 0x84, 0x22, 0x97, 0x8a, 0x98, 0x32, 0xe5, 0x5f, 0x53,
	0x29, 0xff, 0xe1, 0x8f, 0x61, 0x6d, 0xee, 0x33, 0xcb, 0x4a, 0x4d, 0x7d, 0x65, 0x29, 0x3f, 0xf7,
	0x25, 0xac, 0x61, 0x0a, 0x20, 0x13, 0x2e, 0x2f, 0xce, 0xae, 0x65, 0x6c, 0x7a, 0x39, 0x6f, 0xd3,
	0x37, 0xa0, 0x8e, 0x66, 0x9c, 0xb3, 0xb3, 0x65, 0x8a, 0x9e, 0x2a, 0x8a, 0x54, 0xb5, 0xa2, 0xc8,
	0x1f, 0x96, 0x80, 0xf0, 0xf4, 0xe7, 0xaf, 0xfa, 0xd3, 0x8c, 0x1b, 0x61, 0x34, 0xf3, 0x65, 0xe6,
	0x8c, 0x77, 0x8c, 0xab, 0x9c, 0x85, 0xfb, 0x56, 0x72, 0x8c, 0x17, 0x4d, 0xc8, 0x1a, 0x22, 0x3c,
	0xe5, 0x1d, 0xe3, 0x8f, 0x4b, 0x2c, 0x04, 0x0c, 0xd5, 0x35, 0x7a, 0x17, 0x1a, 0xfc, 0xe9, 0xa1,
	0x2c, 0x4b, 0xa1, 0xf4, 0x35, 0x8c, 0xcd, 0xe7, 0x7c, 0x58, 0x04, 0x26, 0x02, 0x79, 0xb8, 0x0b,
	0x1d, 0x7d, 0xa0, 0x40, 0x60, 0xd7, 0xb2, 0xde, 0x44, 0x57, 0xd2, 0xc5, 0xd5, 0xe9, 0xf2, 0xfb,
	0x59, 0x09, 0xda, 0x63, 0xea, 0xbf, 0xa6, 0x4e, 0xf5, 0x91, 0x30, 0xb9, 0xe5, 0xb4, 0x68, 0xaf,
	0x4d, 0xc8, 0x1b, 0xdc, 0xb7, 0x3f, 0xff, 0x9f, 0x43, 0x7b, 0x27, 0x8a, 0x82, 0x68, 0x9b, 0x26,
	0x96, 0x9b, 0x06, 0xe6, 0x25, 0xf4, 0x46, 0xb0, 0xcd, 0x84, 0x3b, 0xe5, 0x45, 0x47, 0x19, 0xdc,
	0x8a, 0xae, 0xf1, 0x37, 0x25, 0x3d, 0x6d, 0xb3, 0xa8, 0x32, 0xb9, 0xa1, 0xea, 0x8d, 0xe2, 0xe1,
	0xa7, 0xa8, 0x2d, 0x0e, 0xa1, 0x19, 0x46, 0xc1, 0x51, 0x44, 0xe3, 0x58, 0x56, 0x5f, 0x65, 0x7f,
	0x71, 0xdd, 0x31, 0xc6, 0x22, 0xa8, 0x7c, 0x29, 0xce, 0x7b, 0xe4, 0x0e, 0x74, 0x10, 0x61, 0xe2,
	0xe0, 0x2e, 0xd0, 0x03, 0x11, 0x41, 0xac, 0xb6, 0x39, 0xb3, 0x4d, 0xd3, 0x8e, 0xf1, 0x2f, 0x65,
	0xb8, 0xc8, 0x2f, 0x12, 0x59, 0xdb, 0x93, 0xeb, 0x5f, 0xac, 0xcc, 0x7a, 0xde, 0xbe, 0x9c, 0xcb,
	0xdb, 0xf3, 0x5d, 0x57, 0xd4, 0xae, 0x8b, 0x9e, 0x77, 0xa8, 0x5d, 0xd5, 0xf4, 0x5d, 0xe1, 0x5b,
	0x56, 0xdb, 0x66, 0x6c, 0xa8, 0xf3, 0x58, 0x52, 0x74, 0xc9, 0x4f, 0xf2, 0x8f, 0x37, 0xae, 0xa3,
	0x46, 0x15, 0xad, 0x7a, 0xc1, 0x4b, 0x0e, 0xa2, 0x85, 0xf5, 0x1d, 0x11, 0xc5, 0xeb, 0x6f, 0x33,
	0x5a, 0xaf, 0x7b, 0x9b, 0x71, 0xae, 0xf7, 0x13, 0x7f, 0x52, 0x82, 0x0d, 0x61, 0x51, 0xf3, 0x0c,
	0xfe, 0x21, 0xd4, 0xc5, 0xad, 0xce, 0x2f, 0x87, 0x4b, 0x0b, 0x77, 0x65, 0x0a, 0x44, 0x36, 0x25,
	0x42, 0xb3, 0x23, 0x8e, 0xd6, 0x25, 0xbe, 0x62, 0xbd, 0xe6, 0xab, 0xa6, 0x70, 0xc4, 0x94, 0xd9,
	0x15, 0x8d, 0xd9, 0xc6, 0xa9, 0x6e, 0x39, 0xe5, 0x82, 0x94, 0x57, 0x5b, 0xd2, 0xbd, 0x5a, 0x4d,
	0x2e, 0xe5, 0xac, 0x5c, 0x5e, 0xf7, 0x6e, 0x40, 0x3b, 0x2d, 0xd5, 0xec, 0x69, 0xf9, 0xfd, 0x8c,
	0xe9, 0x3c, 0xc7, 0xb7, 0x05, 0x41, 0x69, 0x34, 0x55, 0xdf, 0x78, 0x91, 0xaf, 0x83, 0x2f, 0x3a,
	0x92, 0x8b, 0xc9, 0x4b, 0x85, 0x11, 0x6f, 0xc0, 0x59, 0xdb, 0xd8, 0x2a, 0xaa, 0x84, 0x2f, 0x22,
	0xad, 0xd8, 0x5e, 0xd6, 0xd9, 0xbe, 0xc9, 0x94, 0x01, 0x8b, 0xe3, 0x52, 0xcd, 0xb4, 0xfd, 0x73,
	0xfc, 0x92, 0x8e, 0xff, 0x33, 0x61, 0xb3, 0x97, 0xb5, 0x29, 0xf2, 0xd4, 0x55, 0xb2, 0x29, 0x63,
	0x76, 0x11, 0xc8, 0x93, 0xc8, 0xda, 0x0b, 0x4e, 0x22, 0x11, 0x46, 0x97, 0xe7, 0x7f, 0xb1, 0x6d,
	0x3c, 0xe6, 0x96, 0x7a, 0xd1, 0x42, 0x24, 0xf1, 0x72, 0x11, 0xf1, 0x8c, 0xe6, 0xed, 0xc1, 0xc5,
	0xad, 0x24, 0xb1, 0xec, 0xe3, 0x3c, 0x07, 0x2f, 0x43, 0x5b, 0xbe, 0x84, 0x98, 0x28, 0xda, 0x20,
	0x41, 0xbb, 0x8e, 0x5a, 0x56, 0x59, 0x5b, 0xd6, 0x9f, 0x97, 0x60, 0xcd, 0x9c, 0xf9, 0x5b, 0xbe,
	0xf3, 0x8d, 0xe5, 0xaa, 0xdc, 0xe4, 0x7d, 0x10, 0xae, 0x3b, 0xf3, 0x7a, 0x19, 0x64, 0xb1, 0xfb,
	0xd5, 0x75, 0x32, 0xb1, 0x65, 0x1f, 0x2a, 0xf6, 0xd4, 0x11, 0x9f, 0x60, 0x4d, 0xb6, 0x0b, 0x2b,
	0x3e, 0xf5, 0x6d, 0x99, 0x1b, 0xc6, 0x0e, 0xb9, 0x06, 0x5d, 0x6c, 0xe0, 0x6b, 0xad, 0x60, 0x96,
	0x88, 0x2b, 0xba, 0x83, 0xc0, 0xe7, 0x1c, 0x66, 0x3c, 0x87, 0x8d, 0x51, 0xe0, 0x27, 0x51, 0xe0,
	0x9d, 0xfd, 0x20, 0x43, 0xe6, 0x79, 0xcb, 0x5a, 0x9e, 0xb7, 0x38, 0x2d, 0x6d, 0xce, 0x51, 0x5d,
	0x4a, 0x07, 0x33, 0xaa, 0x2d, 0x6c, 0xa1, 0x71, 0x00, 0xfd, 0xbd, 0xe0, 0x28, 0xfb, 0x9e, 0xa8,
	0x40, 0xc4, 0x78, 0xab, 0xc8, 0x15, 0xb2, 0x7b, 0x72, 0x1d, 0x6a, 0xb1, 0xeb, 0xdb, 0x52, 0xd1,
	0x78, 0x87, 0x41, 0x67, 0x7e, 0xe2, 0x7a, 0xf2, 0xd6, 0xc2, 0x8e, 0xb1, 0xa7, 0x7d, 0x63, 0xe9,
	0x15, 0xa3, 0xe0, 0x2b, 0x9a, 0xe0, 0xff, 0xae, 0x04, 0x1b, 0x3b, 0xaf, 0xa8, 0x3d, 0x9b, 0x7f,
	0x94, 0x72, 0xa6, 0x22, 0xe9, 0x25, 0xc6, 0x72, 0xae, 0xc4, 0x48, 0x44, 0x89, 0x91, 0xdb, 0x14,
	0x5e, 0x4d, 0x1c, 0x40, 0x83, 0xcd, 0x4e, 0x13, 0xd4, 0xb2, 0xcb, 0x22, 0x7e, 0x16, 0xdd, 0x4e,
	0x62, 0x8c, 0x77, 0x6b, 0xf9, 0x78, 0x97, 0x85, 0x66, 0x34, 0xf4, 0x26, 0x4c, 0xa5, 0xea, 0x22,
	0x34, 0xa3, 0xa1, 0x37, 0x9a, 0x3a, 0xc6, 0xdf, 0x96, 0x60, 0x75, 0x64, 0x85, 0x96, 0xed, 0x26,
	0xa7, 0x9a, 0x0d, 0x48, 0x82, 0xc4, 0xf2, 0x84, 0xdb, 0xc1, 0x3b, 0x64, 0x1f, 0x56, 0x99, 0x55,
	0x9d, 0xd8, 0x1c, 0xdb, 0xa5, 0xb2, 0x26, 0x85, 0x8f, 0x7a, 0x73, 0x34, 0x30, 0x08, 0x1e, 0x29,
	0x4c, 0x7e, 0x0d, 0xe2, 0xaf, 0x8d, 0x52, 0xe0, 0x70, 0x0b, 0x2e, 0x14, 0xa0, 0x2d, 0x93, 0x95,
	0xb9, 0x75, 0x03, 0xea, 0xfc, 0xad, 0x0e, 0x8b, 0x8c, 0x7e, 0x63, 0x67, 0x67, 0x9f, 0x47, 0x4b,
	0xcf, 0xcd, 0x17, 0x3b, 0xbc, 0x56, 0xf3, 0x68, 0x6b, 0x6f, 0xbc, 0xd3, 0x2f, 0xdf, 0xf9, 0x87,
	0x35, 0x68, 0x8c, 0x82, 0x88, 0x9a, 0xfb, 0x23, 0x72, 0x15, 0xaa, 0xf8, 0x03, 0x3b, 0x2c, 0x7e,
	0xe1, 0x0f, 0xef, 0x86, 0x1d, 0xee, 0x1b, 0xf2, 0x5f, 0xde, 0x19, 0x2b, 0xe4, 0x2e, 0x90, 0x6f,
	0xac, 0xc4, 0x3e, 0xce, 0xfe, 0xe2, 0x4d, 0x9b, 0xb0, 0xc6, 0x5d, 0x40, 0x6d, 0xd4, 0x58, 0xb9,
	0x5d, 0x22, 0x77, 0xa1, 0xa3, 0xfd, 0x8c, 0x28, 0x26, 0x1b, 0xaa, 0x4c, 0x9e, 0xf9, 0x5d, 0x0e,
	0xff, 0x9e, 0xc4, 0x32, 0x56, 0xc8, 0x67, 0xd0, 0xcb, 0xfe, 0x6c, 0x88, 0xf0, 0x5b, 0xb8, 0xe8,
	0x47, 0x3d, 0x43, 0xfd, 0x57, 0x33, 0xc6, 0x0a, 0xf9, 0x12, 0xd6, 0xe6, 0x7e, 0xff, 0x43, 0xd0,
	0x89, 0x5e, 0xf4, 0xb3, 0xa0, 0x61, 0xba, 0x11, 0x63, 0x85, 0x5c, 0x87, 0x3a, 0x7f, 0x9f, 0x44,
	0xd6, 0xc4, 0x5b, 0x93, 0xf4, 0x29, 0xd1, 0x50, 0xfe, 0xaa, 0xcc, 0x58, 0x21, 0x9b, 0xd0, 0x52,
	0xcf, 0x91, 0xc8, 0x7a, 0x7a, 0xe3, 0x6b, 0xd8, 0x79, 0xba, 0xfc, 0x59, 0x12, 0xa7, 0x9b, 0x79,
	0xa2, 0xa4, 0xd3, 0xbd, 0x0a, 0x4d, 0xc6, 0x21, 0xfc, 0x49, 0x9b, 0xc6, 0xe1, 0xa6, 0xc0, 0x88,
	0x51, 0x1c, 0x3d, 0x3e, 0x5d, 0x25, 0xb9, 0x0b, 0x48, 0xae, 0xca, 0x1f, 0xc0, 0xc9, 0x9f, 0xa9,
	0xad, 0x90, 0x0f, 0xa0, 0x21, 0x9e, 0xce, 0x10, 0x32, 0xff, 0x8e, 0x66, 0xa8, 0x9e, 0xf8, 0x1b,
	0x2b, 0xe4, 0x36, 0x40, 0xfa, 0x90, 0x84, 0x5c, 0x4c, 0xb7, 0xa7, 0x4f, 0xc8, 0xec, 0xef, 0x87,
	0x5c, 0xd6, 0xfb, 0x81, 0xc3, 0x7f, 0x3f, 0xb0, 0x5e, 0xf4, 0x24, 0x82, 0x4f, 0x41, 0x08, 0x5f,
	0x8f, 0x78, 0xb0, 0x41, 0x0a, 0x5e, 0x6f, 0x64, 0xd6, 0xf3, 0x01, 0x34, 0xc6, 0x3a, 0xea, 0x78,
	0x31, 0xea, 0x16, 0xac, 0xe6, 0x1e, 0x8c, 0x90, 0xa1, 0x46, 0x3d, 0x97, 0x61, 0x19, 0xce, 0xfd,
	0xbc, 0xcf, 0x58, 0x21, 0x9f, 0x33, 0x3f, 0xcc, 0xb3, 0x67, 0x9e, 0x95, 0xc8, 0xf3, 0x78, 0x4a,
	0xe6, 0xaf, 0xa9, 0xe1, 0x85, 0x82, 0xb3, 0x4e, 0x3e, 0x82, 0xf6, 0xe3, 0xf4, 0x69, 0x29, 0xe9,
	0xe9, 0xcf, 0x0a, 0x77, 0xb7, 0x87, 0x99, 0x67, 0x86, 0xc8, 0xe9, 0x8e, 0x86, 0x1e, 0x93, 0xd5,
	0x2c, 0x7e, 0x3c, 0xec, 0xea, 0x80, 0x18, 0x57, 0xd7, 0xcd, 0xfc, 0x38, 0x93, 0x0c, 0x16, 0xfd,
	0x5e, 0x33, 0xff, 0xb1, 0xdb, 0x25, 0x72, 0x1f, 0xd6, 0xa4, 0x50, 0x52, 0x02, 0x45, 0xdc, 0x9f,
	0xfb, 0xec, 0x03, 0x20, 0x8f, 0xe7, 0x9e, 0xcc, 0xce, 0x2f, 0xf7, 0x42, 0x66, 0x9e, 0x34, 0x06,
	0xe4, 0xa7, 0x40, 0xe6, 0x1f, 0xdc, 0x92, 0xef, 0x0b, 0x59, 0x16, 0x3f, 0xc4, 0x5d, 0x44, 0xeb,
	0xf7, 0x60, 0xbd, 0xe8, 0xf1, 0x29, 0xb9, 0x7c, 0xc6, 0x2b, 0xd8, 0xe1, 0x42, 0x04, 0x21, 0x3b,
	0xe4, 0xd0, 0x87, 0x50, 0x65, 0xce, 0x1d, 0xdf, 0x99, 0x16, 0x78, 0x0f, 0x15, 0x20, 0x87, 0xcd,
	0x3c, 0x30, 0x8e, 0xad, 0x05, 0xc1, 0x43, 0x05, 0xd0, 0xb1, 0xbf, 0x04, 0x48, 0x43, 0x52, 0x72,
	0xb1, 0xb0, 0x50, 0x3f, 0xcc, 0x81, 0x73, 0xf3, 0xd3, 0x00, 0x81, 0xcf, 0x9f, 0x4b, 0xb5, 0x0c,
	0x73, 0x60, 0x7d, 0xfe, 0x16, 0xb4, 0x35, 0x2f, 0x9f, 0xdb, 0xe3, 0xf9, 0x8c, 0xc9, 0x30, 0x0f,
	0xd7, 0x49, 0x3c, 0x84, 0x5e, 0x36, 0x1a, 0x2a, 0x3a, 0x18, 0x8b, 0x83, 0x26, 0xa4, 0xb1, 0x03,
	0xab, 0xb9, 0xe8, 0x8b, 0xab, 0x60, 0x36, 0xc9, 0x35, 0x1c, 0x6a, 0xb0, 0x22, 0x32, 0x3f, 0x85,
	0x5e, 0x36, 0xa2, 0x20, 0x05, 0x91, 0x57, 0x66, 0x49, 0x85, 0x01, 0x08, 0xd2, 0xfa, 0x1a, 0xc8,
	0x7c, 0x18, 0xc1, 0xf5, 0x73, 0xe1, 0x43, 0xdb, 0xe1, 0x82, 0x61, 0x9d, 0xee, 0x13, 0x58, 0xcd,
	0xf9, 0x85, 0xdc, 0x1a, 0x15, 0xbb, 0xa0, 0xc3, 0xa2, 0x31, 0x9d, 0xdc, 0x53, 0x58, 0xcd, 0xf9,
	0x57, 0x9c, 0x5c, 0xb1, 0xd3, 0xc5, 0x37, 0x5d, 0xe8, 0xd8, 0x1b, 0x2b, 0x37, 0x4b, 0xb7, 0x4b,
	0x64, 0xc4, 0x24, 0x91, 0x09, 0x7d, 0xa4, 0x24, 0xf4, 0xc7, 0xc2, 0x52, 0x12, 0x45, 0x31, 0x12,
	0x1a, 0xa4, 0x96, 0xf2, 0x21, 0x85, 0xdd, 0xcf, 0xb9, 0xad, 0xc3, 0x2c, 0x54, 0xdf, 0xd1, 0x36,
	0x40, 0x1a, 0x2a, 0x88, 0x9b, 0x26, 0x1f, 0x3a, 0x9c, 0xb9, 0x8f, 0x83, 0x3a, 0xfe, 0xfb, 0x80,
	0x4f, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x2c, 0xaf, 0x6f, 0x4c, 0x40, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreRPCClient is the client API for CoreRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreRPCClient interface {
	Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CoreInfo, error)
	WatchServiceStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (CoreRPC_WatchServiceStatusClient, error)
	ListNetworks(ctx context.Context, in *ListNetworkOptions, opts ...grpc.CallOption) (*Networks, error)
	ConnectNetwork(ctx context.Context, in *ConnectNetworkOptions, opts ...grpc.CallOption) (*Network, error)
	DisconnectNetwork(ctx context.Context, in *DisconnectNetworkOptions, opts ...grpc.CallOption) (*Empty, error)
	AddPod(ctx context.Context, in *AddPodOptions, opts ...grpc.CallOption) (*Pod, error)
	RemovePod(ctx context.Context, in *RemovePodOptions, opts ...grpc.CallOption) (*Empty, error)
	GetPod(ctx context.Context, in *GetPodOptions, opts ...grpc.CallOption) (*Pod, error)
	ListPods(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pods, error)
	GetPodResource(ctx context.Context, in *GetPodOptions, opts ...grpc.CallOption) (*PodResource, error)
	AddNode(ctx context.Context, in *AddNodeOptions, opts ...grpc.CallOption) (*Node, error)
	RemoveNode(ctx context.Context, in *RemoveNodeOptions, opts ...grpc.CallOption) (*Empty, error)
	ListPodNodes(ctx context.Context, in *ListNodesOptions, opts ...grpc.CallOption) (*Nodes, error)
	GetNode(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Node, error)
	SetNode(ctx context.Context, in *SetNodeOptions, opts ...grpc.CallOption) (*Node, error)
	GetNodeResource(ctx context.Context, in *GetNodeResourceOptions, opts ...grpc.CallOption) (*NodeResource, error)
	CalculateCapacity(ctx context.Context, in *DeployOptions, opts ...grpc.CallOption) (*CapacityMessage, error)
	GetWorkload(ctx context.Context, in *WorkloadID, opts ...grpc.CallOption) (*Workload, error)
	GetWorkloads(ctx context.Context, in *WorkloadIDs, opts ...grpc.CallOption) (*Workloads, error)
	ListWorkloads(ctx context.Context, in *ListWorkloadsOptions, opts ...grpc.CallOption) (CoreRPC_ListWorkloadsClient, error)
	ListNodeWorkloads(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Workloads, error)
	GetWorkloadsStatus(ctx context.Context, in *WorkloadIDs, opts ...grpc.CallOption) (*WorkloadsStatus, error)
	SetWorkloadsStatus(ctx context.Context, in *SetWorkloadsStatusOptions, opts ...grpc.CallOption) (*WorkloadsStatus, error)
	WorkloadStatusStream(ctx context.Context, in *WorkloadStatusStreamOptions, opts ...grpc.CallOption) (CoreRPC_WorkloadStatusStreamClient, error)
	Copy(ctx context.Context, in *CopyOptions, opts ...grpc.CallOption) (CoreRPC_CopyClient, error)
	Send(ctx context.Context, in *SendOptions, opts ...grpc.CallOption) (CoreRPC_SendClient, error)
	BuildImage(ctx context.Context, in *BuildImageOptions, opts ...grpc.CallOption) (CoreRPC_BuildImageClient, error)
	CacheImage(ctx context.Context, in *CacheImageOptions, opts ...grpc.CallOption) (CoreRPC_CacheImageClient, error)
	RemoveImage(ctx context.Context, in *RemoveImageOptions, opts ...grpc.CallOption) (CoreRPC_RemoveImageClient, error)
	CreateWorkload(ctx context.Context, in *DeployOptions, opts ...grpc.CallOption) (CoreRPC_CreateWorkloadClient, error)
	ReplaceWorkload(ctx context.Context, in *ReplaceOptions, opts ...grpc.CallOption) (CoreRPC_ReplaceWorkloadClient, error)
	RemoveWorkload(ctx context.Context, in *RemoveWorkloadOptions, opts ...grpc.CallOption) (CoreRPC_RemoveWorkloadClient, error)
	DissociateWorkload(ctx context.Context, in *DissociateWorkloadOptions, opts ...grpc.CallOption) (CoreRPC_DissociateWorkloadClient, error)
	ControlWorkload(ctx context.Context, in *ControlWorkloadOptions, opts ...grpc.CallOption) (CoreRPC_ControlWorkloadClient, error)
	ExecuteWorkload(ctx context.Context, opts ...grpc.CallOption) (CoreRPC_ExecuteWorkloadClient, error)
	ReallocResource(ctx context.Context, in *ReallocOptions, opts ...grpc.CallOption) (*ReallocResourceMessage, error)
	LogStream(ctx context.Context, in *LogStreamOptions, opts ...grpc.CallOption) (CoreRPC_LogStreamClient, error)
	RunAndWait(ctx context.Context, opts ...grpc.CallOption) (CoreRPC_RunAndWaitClient, error)
}

type coreRPCClient struct {
	cc *grpc.ClientConn
}

func NewCoreRPCClient(cc *grpc.ClientConn) CoreRPCClient {
	return &coreRPCClient{cc}
}

func (c *coreRPCClient) Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CoreInfo, error) {
	out := new(CoreInfo)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) WatchServiceStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (CoreRPC_WatchServiceStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[0], "/pb.CoreRPC/WatchServiceStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCWatchServiceStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_WatchServiceStatusClient interface {
	Recv() (*ServiceStatus, error)
	grpc.ClientStream
}

type coreRPCWatchServiceStatusClient struct {
	grpc.ClientStream
}

func (x *coreRPCWatchServiceStatusClient) Recv() (*ServiceStatus, error) {
	m := new(ServiceStatus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ListNetworks(ctx context.Context, in *ListNetworkOptions, opts ...grpc.CallOption) (*Networks, error) {
	out := new(Networks)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ConnectNetwork(ctx context.Context, in *ConnectNetworkOptions, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ConnectNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) DisconnectNetwork(ctx context.Context, in *DisconnectNetworkOptions, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/DisconnectNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) AddPod(ctx context.Context, in *AddPodOptions, opts ...grpc.CallOption) (*Pod, error) {
	out := new(Pod)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/AddPod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) RemovePod(ctx context.Context, in *RemovePodOptions, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/RemovePod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetPod(ctx context.Context, in *GetPodOptions, opts ...grpc.CallOption) (*Pod, error) {
	out := new(Pod)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetPod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ListPods(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pods, error) {
	out := new(Pods)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListPods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetPodResource(ctx context.Context, in *GetPodOptions, opts ...grpc.CallOption) (*PodResource, error) {
	out := new(PodResource)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetPodResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) AddNode(ctx context.Context, in *AddNodeOptions, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/AddNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) RemoveNode(ctx context.Context, in *RemoveNodeOptions, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/RemoveNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ListPodNodes(ctx context.Context, in *ListNodesOptions, opts ...grpc.CallOption) (*Nodes, error) {
	out := new(Nodes)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListPodNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetNode(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) SetNode(ctx context.Context, in *SetNodeOptions, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/SetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetNodeResource(ctx context.Context, in *GetNodeResourceOptions, opts ...grpc.CallOption) (*NodeResource, error) {
	out := new(NodeResource)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetNodeResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) CalculateCapacity(ctx context.Context, in *DeployOptions, opts ...grpc.CallOption) (*CapacityMessage, error) {
	out := new(CapacityMessage)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/CalculateCapacity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetWorkload(ctx context.Context, in *WorkloadID, opts ...grpc.CallOption) (*Workload, error) {
	out := new(Workload)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetWorkload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetWorkloads(ctx context.Context, in *WorkloadIDs, opts ...grpc.CallOption) (*Workloads, error) {
	out := new(Workloads)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetWorkloads", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ListWorkloads(ctx context.Context, in *ListWorkloadsOptions, opts ...grpc.CallOption) (CoreRPC_ListWorkloadsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[1], "/pb.CoreRPC/ListWorkloads", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCListWorkloadsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_ListWorkloadsClient interface {
	Recv() (*Workload, error)
	grpc.ClientStream
}

type coreRPCListWorkloadsClient struct {
	grpc.ClientStream
}

func (x *coreRPCListWorkloadsClient) Recv() (*Workload, error) {
	m := new(Workload)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ListNodeWorkloads(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Workloads, error) {
	out := new(Workloads)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListNodeWorkloads", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetWorkloadsStatus(ctx context.Context, in *WorkloadIDs, opts ...grpc.CallOption) (*WorkloadsStatus, error) {
	out := new(WorkloadsStatus)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetWorkloadsStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) SetWorkloadsStatus(ctx context.Context, in *SetWorkloadsStatusOptions, opts ...grpc.CallOption) (*WorkloadsStatus, error) {
	out := new(WorkloadsStatus)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/SetWorkloadsStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) WorkloadStatusStream(ctx context.Context, in *WorkloadStatusStreamOptions, opts ...grpc.CallOption) (CoreRPC_WorkloadStatusStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[2], "/pb.CoreRPC/WorkloadStatusStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCWorkloadStatusStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_WorkloadStatusStreamClient interface {
	Recv() (*WorkloadStatusStreamMessage, error)
	grpc.ClientStream
}

type coreRPCWorkloadStatusStreamClient struct {
	grpc.ClientStream
}

func (x *coreRPCWorkloadStatusStreamClient) Recv() (*WorkloadStatusStreamMessage, error) {
	m := new(WorkloadStatusStreamMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) Copy(ctx context.Context, in *CopyOptions, opts ...grpc.CallOption) (CoreRPC_CopyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[3], "/pb.CoreRPC/Copy", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCCopyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_CopyClient interface {
	Recv() (*CopyMessage, error)
	grpc.ClientStream
}

type coreRPCCopyClient struct {
	grpc.ClientStream
}

func (x *coreRPCCopyClient) Recv() (*CopyMessage, error) {
	m := new(CopyMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) Send(ctx context.Context, in *SendOptions, opts ...grpc.CallOption) (CoreRPC_SendClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[4], "/pb.CoreRPC/Send", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCSendClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_SendClient interface {
	Recv() (*SendMessage, error)
	grpc.ClientStream
}

type coreRPCSendClient struct {
	grpc.ClientStream
}

func (x *coreRPCSendClient) Recv() (*SendMessage, error) {
	m := new(SendMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) BuildImage(ctx context.Context, in *BuildImageOptions, opts ...grpc.CallOption) (CoreRPC_BuildImageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[5], "/pb.CoreRPC/BuildImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCBuildImageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_BuildImageClient interface {
	Recv() (*BuildImageMessage, error)
	grpc.ClientStream
}

type coreRPCBuildImageClient struct {
	grpc.ClientStream
}

func (x *coreRPCBuildImageClient) Recv() (*BuildImageMessage, error) {
	m := new(BuildImageMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) CacheImage(ctx context.Context, in *CacheImageOptions, opts ...grpc.CallOption) (CoreRPC_CacheImageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[6], "/pb.CoreRPC/CacheImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCCacheImageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_CacheImageClient interface {
	Recv() (*CacheImageMessage, error)
	grpc.ClientStream
}

type coreRPCCacheImageClient struct {
	grpc.ClientStream
}

func (x *coreRPCCacheImageClient) Recv() (*CacheImageMessage, error) {
	m := new(CacheImageMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) RemoveImage(ctx context.Context, in *RemoveImageOptions, opts ...grpc.CallOption) (CoreRPC_RemoveImageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[7], "/pb.CoreRPC/RemoveImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCRemoveImageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_RemoveImageClient interface {
	Recv() (*RemoveImageMessage, error)
	grpc.ClientStream
}

type coreRPCRemoveImageClient struct {
	grpc.ClientStream
}

func (x *coreRPCRemoveImageClient) Recv() (*RemoveImageMessage, error) {
	m := new(RemoveImageMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) CreateWorkload(ctx context.Context, in *DeployOptions, opts ...grpc.CallOption) (CoreRPC_CreateWorkloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[8], "/pb.CoreRPC/CreateWorkload", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCCreateWorkloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_CreateWorkloadClient interface {
	Recv() (*CreateWorkloadMessage, error)
	grpc.ClientStream
}

type coreRPCCreateWorkloadClient struct {
	grpc.ClientStream
}

func (x *coreRPCCreateWorkloadClient) Recv() (*CreateWorkloadMessage, error) {
	m := new(CreateWorkloadMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ReplaceWorkload(ctx context.Context, in *ReplaceOptions, opts ...grpc.CallOption) (CoreRPC_ReplaceWorkloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[9], "/pb.CoreRPC/ReplaceWorkload", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCReplaceWorkloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_ReplaceWorkloadClient interface {
	Recv() (*ReplaceWorkloadMessage, error)
	grpc.ClientStream
}

type coreRPCReplaceWorkloadClient struct {
	grpc.ClientStream
}

func (x *coreRPCReplaceWorkloadClient) Recv() (*ReplaceWorkloadMessage, error) {
	m := new(ReplaceWorkloadMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) RemoveWorkload(ctx context.Context, in *RemoveWorkloadOptions, opts ...grpc.CallOption) (CoreRPC_RemoveWorkloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[10], "/pb.CoreRPC/RemoveWorkload", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCRemoveWorkloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_RemoveWorkloadClient interface {
	Recv() (*RemoveWorkloadMessage, error)
	grpc.ClientStream
}

type coreRPCRemoveWorkloadClient struct {
	grpc.ClientStream
}

func (x *coreRPCRemoveWorkloadClient) Recv() (*RemoveWorkloadMessage, error) {
	m := new(RemoveWorkloadMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) DissociateWorkload(ctx context.Context, in *DissociateWorkloadOptions, opts ...grpc.CallOption) (CoreRPC_DissociateWorkloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[11], "/pb.CoreRPC/DissociateWorkload", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCDissociateWorkloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_DissociateWorkloadClient interface {
	Recv() (*DissociateWorkloadMessage, error)
	grpc.ClientStream
}

type coreRPCDissociateWorkloadClient struct {
	grpc.ClientStream
}

func (x *coreRPCDissociateWorkloadClient) Recv() (*DissociateWorkloadMessage, error) {
	m := new(DissociateWorkloadMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ControlWorkload(ctx context.Context, in *ControlWorkloadOptions, opts ...grpc.CallOption) (CoreRPC_ControlWorkloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[12], "/pb.CoreRPC/ControlWorkload", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCControlWorkloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_ControlWorkloadClient interface {
	Recv() (*ControlWorkloadMessage, error)
	grpc.ClientStream
}

type coreRPCControlWorkloadClient struct {
	grpc.ClientStream
}

func (x *coreRPCControlWorkloadClient) Recv() (*ControlWorkloadMessage, error) {
	m := new(ControlWorkloadMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ExecuteWorkload(ctx context.Context, opts ...grpc.CallOption) (CoreRPC_ExecuteWorkloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[13], "/pb.CoreRPC/ExecuteWorkload", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCExecuteWorkloadClient{stream}
	return x, nil
}

type CoreRPC_ExecuteWorkloadClient interface {
	Send(*ExecuteWorkloadOptions) error
	Recv() (*AttachWorkloadMessage, error)
	grpc.ClientStream
}

type coreRPCExecuteWorkloadClient struct {
	grpc.ClientStream
}

func (x *coreRPCExecuteWorkloadClient) Send(m *ExecuteWorkloadOptions) error {
	return x.ClientStream.SendMsg(m)
}

func (x *coreRPCExecuteWorkloadClient) Recv() (*AttachWorkloadMessage, error) {
	m := new(AttachWorkloadMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ReallocResource(ctx context.Context, in *ReallocOptions, opts ...grpc.CallOption) (*ReallocResourceMessage, error) {
	out := new(ReallocResourceMessage)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ReallocResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) LogStream(ctx context.Context, in *LogStreamOptions, opts ...grpc.CallOption) (CoreRPC_LogStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[14], "/pb.CoreRPC/LogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCLogStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_LogStreamClient interface {
	Recv() (*LogStreamMessage, error)
	grpc.ClientStream
}

type coreRPCLogStreamClient struct {
	grpc.ClientStream
}

func (x *coreRPCLogStreamClient) Recv() (*LogStreamMessage, error) {
	m := new(LogStreamMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) RunAndWait(ctx context.Context, opts ...grpc.CallOption) (CoreRPC_RunAndWaitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[15], "/pb.CoreRPC/RunAndWait", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCRunAndWaitClient{stream}
	return x, nil
}

type CoreRPC_RunAndWaitClient interface {
	Send(*RunAndWaitOptions) error
	Recv() (*AttachWorkloadMessage, error)
	grpc.ClientStream
}

type coreRPCRunAndWaitClient struct {
	grpc.ClientStream
}

func (x *coreRPCRunAndWaitClient) Send(m *RunAndWaitOptions) error {
	return x.ClientStream.SendMsg(m)
}

func (x *coreRPCRunAndWaitClient) Recv() (*AttachWorkloadMessage, error) {
	m := new(AttachWorkloadMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CoreRPCServer is the server API for CoreRPC service.
type CoreRPCServer interface {
	Info(context.Context, *Empty) (*CoreInfo, error)
	WatchServiceStatus(*Empty, CoreRPC_WatchServiceStatusServer) error
	ListNetworks(context.Context, *ListNetworkOptions) (*Networks, error)
	ConnectNetwork(context.Context, *ConnectNetworkOptions) (*Network, error)
	DisconnectNetwork(context.Context, *DisconnectNetworkOptions) (*Empty, error)
	AddPod(context.Context, *AddPodOptions) (*Pod, error)
	RemovePod(context.Context, *RemovePodOptions) (*Empty, error)
	GetPod(context.Context, *GetPodOptions) (*Pod, error)
	ListPods(context.Context, *Empty) (*Pods, error)
	GetPodResource(context.Context, *GetPodOptions) (*PodResource, error)
	AddNode(context.Context, *AddNodeOptions) (*Node, error)
	RemoveNode(context.Context, *RemoveNodeOptions) (*Empty, error)
	ListPodNodes(context.Context, *ListNodesOptions) (*Nodes, error)
	GetNode(context.Context, *GetNodeOptions) (*Node, error)
	SetNode(context.Context, *SetNodeOptions) (*Node, error)
	GetNodeResource(context.Context, *GetNodeResourceOptions) (*NodeResource, error)
	CalculateCapacity(context.Context, *DeployOptions) (*CapacityMessage, error)
	GetWorkload(context.Context, *WorkloadID) (*Workload, error)
	GetWorkloads(context.Context, *WorkloadIDs) (*Workloads, error)
	ListWorkloads(*ListWorkloadsOptions, CoreRPC_ListWorkloadsServer) error
	ListNodeWorkloads(context.Context, *GetNodeOptions) (*Workloads, error)
	GetWorkloadsStatus(context.Context, *WorkloadIDs) (*WorkloadsStatus, error)
	SetWorkloadsStatus(context.Context, *SetWorkloadsStatusOptions) (*WorkloadsStatus, error)
	WorkloadStatusStream(*WorkloadStatusStreamOptions, CoreRPC_WorkloadStatusStreamServer) error
	Copy(*CopyOptions, CoreRPC_CopyServer) error
	Send(*SendOptions, CoreRPC_SendServer) error
	BuildImage(*BuildImageOptions, CoreRPC_BuildImageServer) error
	CacheImage(*CacheImageOptions, CoreRPC_CacheImageServer) error
	RemoveImage(*RemoveImageOptions, CoreRPC_RemoveImageServer) error
	CreateWorkload(*DeployOptions, CoreRPC_CreateWorkloadServer) error
	ReplaceWorkload(*ReplaceOptions, CoreRPC_ReplaceWorkloadServer) error
	RemoveWorkload(*RemoveWorkloadOptions, CoreRPC_RemoveWorkloadServer) error
	DissociateWorkload(*DissociateWorkloadOptions, CoreRPC_DissociateWorkloadServer) error
	ControlWorkload(*ControlWorkloadOptions, CoreRPC_ControlWorkloadServer) error
	ExecuteWorkload(CoreRPC_ExecuteWorkloadServer) error
	ReallocResource(context.Context, *ReallocOptions) (*ReallocResourceMessage, error)
	LogStream(*LogStreamOptions, CoreRPC_LogStreamServer) error
	RunAndWait(CoreRPC_RunAndWaitServer) error
}

// UnimplementedCoreRPCServer can be embedded to have forward compatible implementations.
type UnimplementedCoreRPCServer struct {
}

func (*UnimplementedCoreRPCServer) Info(ctx context.Context, req *Empty) (*CoreInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedCoreRPCServer) WatchServiceStatus(req *Empty, srv CoreRPC_WatchServiceStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchServiceStatus not implemented")
}
func (*UnimplementedCoreRPCServer) ListNetworks(ctx context.Context, req *ListNetworkOptions) (*Networks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNetworks not implemented")
}
func (*UnimplementedCoreRPCServer) ConnectNetwork(ctx context.Context, req *ConnectNetworkOptions) (*Network, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectNetwork not implemented")
}
func (*UnimplementedCoreRPCServer) DisconnectNetwork(ctx context.Context, req *DisconnectNetworkOptions) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisconnectNetwork not implemented")
}
func (*UnimplementedCoreRPCServer) AddPod(ctx context.Context, req *AddPodOptions) (*Pod, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPod not implemented")
}
func (*UnimplementedCoreRPCServer) RemovePod(ctx context.Context, req *RemovePodOptions) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePod not implemented")
}
func (*UnimplementedCoreRPCServer) GetPod(ctx context.Context, req *GetPodOptions) (*Pod, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPod not implemented")
}
func (*UnimplementedCoreRPCServer) ListPods(ctx context.Context, req *Empty) (*Pods, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPods not implemented")
}
func (*UnimplementedCoreRPCServer) GetPodResource(ctx context.Context, req *GetPodOptions) (*PodResource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPodResource not implemented")
}
func (*UnimplementedCoreRPCServer) AddNode(ctx context.Context, req *AddNodeOptions) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNode not implemented")
}
func (*UnimplementedCoreRPCServer) RemoveNode(ctx context.Context, req *RemoveNodeOptions) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveNode not implemented")
}
func (*UnimplementedCoreRPCServer) ListPodNodes(ctx context.Context, req *ListNodesOptions) (*Nodes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPodNodes not implemented")
}
func (*UnimplementedCoreRPCServer) GetNode(ctx context.Context, req *GetNodeOptions) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNode not implemented")
}
func (*UnimplementedCoreRPCServer) SetNode(ctx context.Context, req *SetNodeOptions) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNode not implemented")
}
func (*UnimplementedCoreRPCServer) GetNodeResource(ctx context.Context, req *GetNodeResourceOptions) (*NodeResource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeResource not implemented")
}
func (*UnimplementedCoreRPCServer) CalculateCapacity(ctx context.Context, req *DeployOptions) (*CapacityMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateCapacity not implemented")
}
func (*UnimplementedCoreRPCServer) GetWorkload(ctx context.Context, req *WorkloadID) (*Workload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkload not implemented")
}
func (*UnimplementedCoreRPCServer) GetWorkloads(ctx context.Context, req *WorkloadIDs) (*Workloads, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkloads not implemented")
}
func (*UnimplementedCoreRPCServer) ListWorkloads(req *ListWorkloadsOptions, srv CoreRPC_ListWorkloadsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListWorkloads not implemented")
}
func (*UnimplementedCoreRPCServer) ListNodeWorkloads(ctx context.Context, req *GetNodeOptions) (*Workloads, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodeWorkloads not implemented")
}
func (*UnimplementedCoreRPCServer) GetWorkloadsStatus(ctx context.Context, req *WorkloadIDs) (*WorkloadsStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkloadsStatus not implemented")
}
func (*UnimplementedCoreRPCServer) SetWorkloadsStatus(ctx context.Context, req *SetWorkloadsStatusOptions) (*WorkloadsStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWorkloadsStatus not implemented")
}
func (*UnimplementedCoreRPCServer) WorkloadStatusStream(req *WorkloadStatusStreamOptions, srv CoreRPC_WorkloadStatusStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method WorkloadStatusStream not implemented")
}
func (*UnimplementedCoreRPCServer) Copy(req *CopyOptions, srv CoreRPC_CopyServer) error {
	return status.Errorf(codes.Unimplemented, "method Copy not implemented")
}
func (*UnimplementedCoreRPCServer) Send(req *SendOptions, srv CoreRPC_SendServer) error {
	return status.Errorf(codes.Unimplemented, "method Send not implemented")
}
func (*UnimplementedCoreRPCServer) BuildImage(req *BuildImageOptions, srv CoreRPC_BuildImageServer) error {
	return status.Errorf(codes.Unimplemented, "method BuildImage not implemented")
}
func (*UnimplementedCoreRPCServer) CacheImage(req *CacheImageOptions, srv CoreRPC_CacheImageServer) error {
	return status.Errorf(codes.Unimplemented, "method CacheImage not implemented")
}
func (*UnimplementedCoreRPCServer) RemoveImage(req *RemoveImageOptions, srv CoreRPC_RemoveImageServer) error {
	return status.Errorf(codes.Unimplemented, "method RemoveImage not implemented")
}
func (*UnimplementedCoreRPCServer) CreateWorkload(req *DeployOptions, srv CoreRPC_CreateWorkloadServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateWorkload not implemented")
}
func (*UnimplementedCoreRPCServer) ReplaceWorkload(req *ReplaceOptions, srv CoreRPC_ReplaceWorkloadServer) error {
	return status.Errorf(codes.Unimplemented, "method ReplaceWorkload not implemented")
}
func (*UnimplementedCoreRPCServer) RemoveWorkload(req *RemoveWorkloadOptions, srv CoreRPC_RemoveWorkloadServer) error {
	return status.Errorf(codes.Unimplemented, "method RemoveWorkload not implemented")
}
func (*UnimplementedCoreRPCServer) DissociateWorkload(req *DissociateWorkloadOptions, srv CoreRPC_DissociateWorkloadServer) error {
	return status.Errorf(codes.Unimplemented, "method DissociateWorkload not implemented")
}
func (*UnimplementedCoreRPCServer) ControlWorkload(req *ControlWorkloadOptions, srv CoreRPC_ControlWorkloadServer) error {
	return status.Errorf(codes.Unimplemented, "method ControlWorkload not implemented")
}
func (*UnimplementedCoreRPCServer) ExecuteWorkload(srv CoreRPC_ExecuteWorkloadServer) error {
	return status.Errorf(codes.Unimplemented, "method ExecuteWorkload not implemented")
}
func (*UnimplementedCoreRPCServer) ReallocResource(ctx context.Context, req *ReallocOptions) (*ReallocResourceMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReallocResource not implemented")
}
func (*UnimplementedCoreRPCServer) LogStream(req *LogStreamOptions, srv CoreRPC_LogStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method LogStream not implemented")
}
func (*UnimplementedCoreRPCServer) RunAndWait(srv CoreRPC_RunAndWaitServer) error {
	return status.Errorf(codes.Unimplemented, "method RunAndWait not implemented")
}

func RegisterCoreRPCServer(s *grpc.Server, srv CoreRPCServer) {
	s.RegisterService(&_CoreRPC_serviceDesc, srv)
}

func _CoreRPC_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).Info(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_WatchServiceStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).WatchServiceStatus(m, &coreRPCWatchServiceStatusServer{stream})
}

type CoreRPC_WatchServiceStatusServer interface {
	Send(*ServiceStatus) error
	grpc.ServerStream
}

type coreRPCWatchServiceStatusServer struct {
	grpc.ServerStream
}

func (x *coreRPCWatchServiceStatusServer) Send(m *ServiceStatus) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_ListNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNetworkOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListNetworks(ctx, req.(*ListNetworkOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ConnectNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectNetworkOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ConnectNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ConnectNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ConnectNetwork(ctx, req.(*ConnectNetworkOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_DisconnectNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectNetworkOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).DisconnectNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/DisconnectNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).DisconnectNetwork(ctx, req.(*DisconnectNetworkOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_AddPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPodOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).AddPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/AddPod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).AddPod(ctx, req.(*AddPodOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_RemovePod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePodOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).RemovePod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/RemovePod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).RemovePod(ctx, req.(*RemovePodOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPodOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetPod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetPod(ctx, req.(*GetPodOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ListPods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListPods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListPods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListPods(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetPodResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPodOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetPodResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetPodResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetPodResource(ctx, req.(*GetPodOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_AddNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).AddNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/AddNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).AddNode(ctx, req.(*AddNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_RemoveNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).RemoveNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/RemoveNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).RemoveNode(ctx, req.(*RemoveNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ListPodNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListPodNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListPodNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListPodNodes(ctx, req.(*ListNodesOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetNode(ctx, req.(*GetNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_SetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).SetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/SetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).SetNode(ctx, req.(*SetNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetNodeResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeResourceOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetNodeResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetNodeResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetNodeResource(ctx, req.(*GetNodeResourceOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_CalculateCapacity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).CalculateCapacity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/CalculateCapacity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).CalculateCapacity(ctx, req.(*DeployOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetWorkload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkloadID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetWorkload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetWorkload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetWorkload(ctx, req.(*WorkloadID))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetWorkloads_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkloadIDs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetWorkloads(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetWorkloads",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetWorkloads(ctx, req.(*WorkloadIDs))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ListWorkloads_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListWorkloadsOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).ListWorkloads(m, &coreRPCListWorkloadsServer{stream})
}

type CoreRPC_ListWorkloadsServer interface {
	Send(*Workload) error
	grpc.ServerStream
}

type coreRPCListWorkloadsServer struct {
	grpc.ServerStream
}

func (x *coreRPCListWorkloadsServer) Send(m *Workload) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_ListNodeWorkloads_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListNodeWorkloads(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListNodeWorkloads",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListNodeWorkloads(ctx, req.(*GetNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetWorkloadsStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkloadIDs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetWorkloadsStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetWorkloadsStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetWorkloadsStatus(ctx, req.(*WorkloadIDs))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_SetWorkloadsStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetWorkloadsStatusOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).SetWorkloadsStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/SetWorkloadsStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).SetWorkloadsStatus(ctx, req.(*SetWorkloadsStatusOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_WorkloadStatusStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WorkloadStatusStreamOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).WorkloadStatusStream(m, &coreRPCWorkloadStatusStreamServer{stream})
}

type CoreRPC_WorkloadStatusStreamServer interface {
	Send(*WorkloadStatusStreamMessage) error
	grpc.ServerStream
}

type coreRPCWorkloadStatusStreamServer struct {
	grpc.ServerStream
}

func (x *coreRPCWorkloadStatusStreamServer) Send(m *WorkloadStatusStreamMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_Copy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CopyOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).Copy(m, &coreRPCCopyServer{stream})
}

type CoreRPC_CopyServer interface {
	Send(*CopyMessage) error
	grpc.ServerStream
}

type coreRPCCopyServer struct {
	grpc.ServerStream
}

func (x *coreRPCCopyServer) Send(m *CopyMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_Send_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SendOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).Send(m, &coreRPCSendServer{stream})
}

type CoreRPC_SendServer interface {
	Send(*SendMessage) error
	grpc.ServerStream
}

type coreRPCSendServer struct {
	grpc.ServerStream
}

func (x *coreRPCSendServer) Send(m *SendMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_BuildImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BuildImageOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).BuildImage(m, &coreRPCBuildImageServer{stream})
}

type CoreRPC_BuildImageServer interface {
	Send(*BuildImageMessage) error
	grpc.ServerStream
}

type coreRPCBuildImageServer struct {
	grpc.ServerStream
}

func (x *coreRPCBuildImageServer) Send(m *BuildImageMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_CacheImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CacheImageOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).CacheImage(m, &coreRPCCacheImageServer{stream})
}

type CoreRPC_CacheImageServer interface {
	Send(*CacheImageMessage) error
	grpc.ServerStream
}

type coreRPCCacheImageServer struct {
	grpc.ServerStream
}

func (x *coreRPCCacheImageServer) Send(m *CacheImageMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_RemoveImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RemoveImageOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).RemoveImage(m, &coreRPCRemoveImageServer{stream})
}

type CoreRPC_RemoveImageServer interface {
	Send(*RemoveImageMessage) error
	grpc.ServerStream
}

type coreRPCRemoveImageServer struct {
	grpc.ServerStream
}

func (x *coreRPCRemoveImageServer) Send(m *RemoveImageMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_CreateWorkload_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeployOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).CreateWorkload(m, &coreRPCCreateWorkloadServer{stream})
}

type CoreRPC_CreateWorkloadServer interface {
	Send(*CreateWorkloadMessage) error
	grpc.ServerStream
}

type coreRPCCreateWorkloadServer struct {
	grpc.ServerStream
}

func (x *coreRPCCreateWorkloadServer) Send(m *CreateWorkloadMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_ReplaceWorkload_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReplaceOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).ReplaceWorkload(m, &coreRPCReplaceWorkloadServer{stream})
}

type CoreRPC_ReplaceWorkloadServer interface {
	Send(*ReplaceWorkloadMessage) error
	grpc.ServerStream
}

type coreRPCReplaceWorkloadServer struct {
	grpc.ServerStream
}

func (x *coreRPCReplaceWorkloadServer) Send(m *ReplaceWorkloadMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_RemoveWorkload_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RemoveWorkloadOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).RemoveWorkload(m, &coreRPCRemoveWorkloadServer{stream})
}

type CoreRPC_RemoveWorkloadServer interface {
	Send(*RemoveWorkloadMessage) error
	grpc.ServerStream
}

type coreRPCRemoveWorkloadServer struct {
	grpc.ServerStream
}

func (x *coreRPCRemoveWorkloadServer) Send(m *RemoveWorkloadMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_DissociateWorkload_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DissociateWorkloadOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).DissociateWorkload(m, &coreRPCDissociateWorkloadServer{stream})
}

type CoreRPC_DissociateWorkloadServer interface {
	Send(*DissociateWorkloadMessage) error
	grpc.ServerStream
}

type coreRPCDissociateWorkloadServer struct {
	grpc.ServerStream
}

func (x *coreRPCDissociateWorkloadServer) Send(m *DissociateWorkloadMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_ControlWorkload_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ControlWorkloadOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).ControlWorkload(m, &coreRPCControlWorkloadServer{stream})
}

type CoreRPC_ControlWorkloadServer interface {
	Send(*ControlWorkloadMessage) error
	grpc.ServerStream
}

type coreRPCControlWorkloadServer struct {
	grpc.ServerStream
}

func (x *coreRPCControlWorkloadServer) Send(m *ControlWorkloadMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_ExecuteWorkload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CoreRPCServer).ExecuteWorkload(&coreRPCExecuteWorkloadServer{stream})
}

type CoreRPC_ExecuteWorkloadServer interface {
	Send(*AttachWorkloadMessage) error
	Recv() (*ExecuteWorkloadOptions, error)
	grpc.ServerStream
}

type coreRPCExecuteWorkloadServer struct {
	grpc.ServerStream
}

func (x *coreRPCExecuteWorkloadServer) Send(m *AttachWorkloadMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *coreRPCExecuteWorkloadServer) Recv() (*ExecuteWorkloadOptions, error) {
	m := new(ExecuteWorkloadOptions)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CoreRPC_ReallocResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReallocOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ReallocResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ReallocResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ReallocResource(ctx, req.(*ReallocOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_LogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogStreamOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).LogStream(m, &coreRPCLogStreamServer{stream})
}

type CoreRPC_LogStreamServer interface {
	Send(*LogStreamMessage) error
	grpc.ServerStream
}

type coreRPCLogStreamServer struct {
	grpc.ServerStream
}

func (x *coreRPCLogStreamServer) Send(m *LogStreamMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_RunAndWait_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CoreRPCServer).RunAndWait(&coreRPCRunAndWaitServer{stream})
}

type CoreRPC_RunAndWaitServer interface {
	Send(*AttachWorkloadMessage) error
	Recv() (*RunAndWaitOptions, error)
	grpc.ServerStream
}

type coreRPCRunAndWaitServer struct {
	grpc.ServerStream
}

func (x *coreRPCRunAndWaitServer) Send(m *AttachWorkloadMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *coreRPCRunAndWaitServer) Recv() (*RunAndWaitOptions, error) {
	m := new(RunAndWaitOptions)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CoreRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CoreRPC",
	HandlerType: (*CoreRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _CoreRPC_Info_Handler,
		},
		{
			MethodName: "ListNetworks",
			Handler:    _CoreRPC_ListNetworks_Handler,
		},
		{
			MethodName: "ConnectNetwork",
			Handler:    _CoreRPC_ConnectNetwork_Handler,
		},
		{
			MethodName: "DisconnectNetwork",
			Handler:    _CoreRPC_DisconnectNetwork_Handler,
		},
		{
			MethodName: "AddPod",
			Handler:    _CoreRPC_AddPod_Handler,
		},
		{
			MethodName: "RemovePod",
			Handler:    _CoreRPC_RemovePod_Handler,
		},
		{
			MethodName: "GetPod",
			Handler:    _CoreRPC_GetPod_Handler,
		},
		{
			MethodName: "ListPods",
			Handler:    _CoreRPC_ListPods_Handler,
		},
		{
			MethodName: "GetPodResource",
			Handler:    _CoreRPC_GetPodResource_Handler,
		},
		{
			MethodName: "AddNode",
			Handler:    _CoreRPC_AddNode_Handler,
		},
		{
			MethodName: "RemoveNode",
			Handler:    _CoreRPC_RemoveNode_Handler,
		},
		{
			MethodName: "ListPodNodes",
			Handler:    _CoreRPC_ListPodNodes_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _CoreRPC_GetNode_Handler,
		},
		{
			MethodName: "SetNode",
			Handler:    _CoreRPC_SetNode_Handler,
		},
		{
			MethodName: "GetNodeResource",
			Handler:    _CoreRPC_GetNodeResource_Handler,
		},
		{
			MethodName: "CalculateCapacity",
			Handler:    _CoreRPC_CalculateCapacity_Handler,
		},
		{
			MethodName: "GetWorkload",
			Handler:    _CoreRPC_GetWorkload_Handler,
		},
		{
			MethodName: "GetWorkloads",
			Handler:    _CoreRPC_GetWorkloads_Handler,
		},
		{
			MethodName: "ListNodeWorkloads",
			Handler:    _CoreRPC_ListNodeWorkloads_Handler,
		},
		{
			MethodName: "GetWorkloadsStatus",
			Handler:    _CoreRPC_GetWorkloadsStatus_Handler,
		},
		{
			MethodName: "SetWorkloadsStatus",
			Handler:    _CoreRPC_SetWorkloadsStatus_Handler,
		},
		{
			MethodName: "ReallocResource",
			Handler:    _CoreRPC_ReallocResource_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchServiceStatus",
			Handler:       _CoreRPC_WatchServiceStatus_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListWorkloads",
			Handler:       _CoreRPC_ListWorkloads_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WorkloadStatusStream",
			Handler:       _CoreRPC_WorkloadStatusStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Copy",
			Handler:       _CoreRPC_Copy_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Send",
			Handler:       _CoreRPC_Send_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "BuildImage",
			Handler:       _CoreRPC_BuildImage_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CacheImage",
			Handler:       _CoreRPC_CacheImage_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RemoveImage",
			Handler:       _CoreRPC_RemoveImage_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateWorkload",
			Handler:       _CoreRPC_CreateWorkload_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ReplaceWorkload",
			Handler:       _CoreRPC_ReplaceWorkload_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RemoveWorkload",
			Handler:       _CoreRPC_RemoveWorkload_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DissociateWorkload",
			Handler:       _CoreRPC_DissociateWorkload_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ControlWorkload",
			Handler:       _CoreRPC_ControlWorkload_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ExecuteWorkload",
			Handler:       _CoreRPC_ExecuteWorkload_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "LogStream",
			Handler:       _CoreRPC_LogStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RunAndWait",
			Handler:       _CoreRPC_RunAndWait_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "core.proto",
}
