// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ListContainersOptions struct {
	Appname              string            `protobuf:"bytes,1,opt,name=appname,proto3" json:"appname,omitempty"`
	Entrypoint           string            `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Nodename             string            `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListContainersOptions) Reset()         { *m = ListContainersOptions{} }
func (m *ListContainersOptions) String() string { return proto.CompactTextString(m) }
func (*ListContainersOptions) ProtoMessage()    {}
func (*ListContainersOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{1}
}
func (m *ListContainersOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContainersOptions.Unmarshal(m, b)
}
func (m *ListContainersOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContainersOptions.Marshal(b, m, deterministic)
}
func (dst *ListContainersOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContainersOptions.Merge(dst, src)
}
func (m *ListContainersOptions) XXX_Size() int {
	return xxx_messageInfo_ListContainersOptions.Size(m)
}
func (m *ListContainersOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContainersOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListContainersOptions proto.InternalMessageInfo

func (m *ListContainersOptions) GetAppname() string {
	if m != nil {
		return m.Appname
	}
	return ""
}

func (m *ListContainersOptions) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

func (m *ListContainersOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *ListContainersOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type DeployStatusOptions struct {
	Appname              string   `protobuf:"bytes,1,opt,name=appname,proto3" json:"appname,omitempty"`
	Entrypoint           string   `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Nodename             string   `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployStatusOptions) Reset()         { *m = DeployStatusOptions{} }
func (m *DeployStatusOptions) String() string { return proto.CompactTextString(m) }
func (*DeployStatusOptions) ProtoMessage()    {}
func (*DeployStatusOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{2}
}
func (m *DeployStatusOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployStatusOptions.Unmarshal(m, b)
}
func (m *DeployStatusOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployStatusOptions.Marshal(b, m, deterministic)
}
func (dst *DeployStatusOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployStatusOptions.Merge(dst, src)
}
func (m *DeployStatusOptions) XXX_Size() int {
	return xxx_messageInfo_DeployStatusOptions.Size(m)
}
func (m *DeployStatusOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployStatusOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeployStatusOptions proto.InternalMessageInfo

func (m *DeployStatusOptions) GetAppname() string {
	if m != nil {
		return m.Appname
	}
	return ""
}

func (m *DeployStatusOptions) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

func (m *DeployStatusOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

type DeployStatusMessage struct {
	Action               string   `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Appname              string   `protobuf:"bytes,2,opt,name=appname,proto3" json:"appname,omitempty"`
	Entrypoint           string   `protobuf:"bytes,3,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Nodename             string   `protobuf:"bytes,4,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployStatusMessage) Reset()         { *m = DeployStatusMessage{} }
func (m *DeployStatusMessage) String() string { return proto.CompactTextString(m) }
func (*DeployStatusMessage) ProtoMessage()    {}
func (*DeployStatusMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{3}
}
func (m *DeployStatusMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployStatusMessage.Unmarshal(m, b)
}
func (m *DeployStatusMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployStatusMessage.Marshal(b, m, deterministic)
}
func (dst *DeployStatusMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployStatusMessage.Merge(dst, src)
}
func (m *DeployStatusMessage) XXX_Size() int {
	return xxx_messageInfo_DeployStatusMessage.Size(m)
}
func (m *DeployStatusMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployStatusMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DeployStatusMessage proto.InternalMessageInfo

func (m *DeployStatusMessage) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeployStatusMessage) GetAppname() string {
	if m != nil {
		return m.Appname
	}
	return ""
}

func (m *DeployStatusMessage) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

func (m *DeployStatusMessage) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *DeployStatusMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeployStatusMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 对的, protobuf 就是这样...
type Pod struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Favor                string   `protobuf:"bytes,3,opt,name=favor,proto3" json:"favor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pod) Reset()         { *m = Pod{} }
func (m *Pod) String() string { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()    {}
func (*Pod) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{4}
}
func (m *Pod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pod.Unmarshal(m, b)
}
func (m *Pod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pod.Marshal(b, m, deterministic)
}
func (dst *Pod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pod.Merge(dst, src)
}
func (m *Pod) XXX_Size() int {
	return xxx_messageInfo_Pod.Size(m)
}
func (m *Pod) XXX_DiscardUnknown() {
	xxx_messageInfo_Pod.DiscardUnknown(m)
}

var xxx_messageInfo_Pod proto.InternalMessageInfo

func (m *Pod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pod) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Pod) GetFavor() string {
	if m != nil {
		return m.Favor
	}
	return ""
}

type Pods struct {
	Pods                 []*Pod   `protobuf:"bytes,1,rep,name=pods,proto3" json:"pods,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pods) Reset()         { *m = Pods{} }
func (m *Pods) String() string { return proto.CompactTextString(m) }
func (*Pods) ProtoMessage()    {}
func (*Pods) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{5}
}
func (m *Pods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pods.Unmarshal(m, b)
}
func (m *Pods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pods.Marshal(b, m, deterministic)
}
func (dst *Pods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pods.Merge(dst, src)
}
func (m *Pods) XXX_Size() int {
	return xxx_messageInfo_Pods.Size(m)
}
func (m *Pods) XXX_DiscardUnknown() {
	xxx_messageInfo_Pods.DiscardUnknown(m)
}

var xxx_messageInfo_Pods proto.InternalMessageInfo

func (m *Pods) GetPods() []*Pod {
	if m != nil {
		return m.Pods
	}
	return nil
}

type PodResource struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cpu                  map[string]float64 `protobuf:"bytes,2,rep,name=cpu,proto3" json:"cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Memory               map[string]float64 `protobuf:"bytes,3,rep,name=memory,proto3" json:"memory,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Diff                 map[string]bool    `protobuf:"bytes,4,rep,name=diff,proto3" json:"diff,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Detail               map[string]string  `protobuf:"bytes,5,rep,name=detail,proto3" json:"detail,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PodResource) Reset()         { *m = PodResource{} }
func (m *PodResource) String() string { return proto.CompactTextString(m) }
func (*PodResource) ProtoMessage()    {}
func (*PodResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{6}
}
func (m *PodResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodResource.Unmarshal(m, b)
}
func (m *PodResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodResource.Marshal(b, m, deterministic)
}
func (dst *PodResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodResource.Merge(dst, src)
}
func (m *PodResource) XXX_Size() int {
	return xxx_messageInfo_PodResource.Size(m)
}
func (m *PodResource) XXX_DiscardUnknown() {
	xxx_messageInfo_PodResource.DiscardUnknown(m)
}

var xxx_messageInfo_PodResource proto.InternalMessageInfo

func (m *PodResource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PodResource) GetCpu() map[string]float64 {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *PodResource) GetMemory() map[string]float64 {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *PodResource) GetDiff() map[string]bool {
	if m != nil {
		return m.Diff
	}
	return nil
}

func (m *PodResource) GetDetail() map[string]string {
	if m != nil {
		return m.Detail
	}
	return nil
}

type ListNetworkOptions struct {
	Podname              string   `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Driver               string   `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNetworkOptions) Reset()         { *m = ListNetworkOptions{} }
func (m *ListNetworkOptions) String() string { return proto.CompactTextString(m) }
func (*ListNetworkOptions) ProtoMessage()    {}
func (*ListNetworkOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{7}
}
func (m *ListNetworkOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworkOptions.Unmarshal(m, b)
}
func (m *ListNetworkOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworkOptions.Marshal(b, m, deterministic)
}
func (dst *ListNetworkOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworkOptions.Merge(dst, src)
}
func (m *ListNetworkOptions) XXX_Size() int {
	return xxx_messageInfo_ListNetworkOptions.Size(m)
}
func (m *ListNetworkOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworkOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworkOptions proto.InternalMessageInfo

func (m *ListNetworkOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *ListNetworkOptions) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

type Network struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Subnets              []string `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{8}
}
func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (dst *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(dst, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Network) GetSubnets() []string {
	if m != nil {
		return m.Subnets
	}
	return nil
}

type Networks struct {
	Networks             []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Networks) Reset()         { *m = Networks{} }
func (m *Networks) String() string { return proto.CompactTextString(m) }
func (*Networks) ProtoMessage()    {}
func (*Networks) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{9}
}
func (m *Networks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Networks.Unmarshal(m, b)
}
func (m *Networks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Networks.Marshal(b, m, deterministic)
}
func (dst *Networks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Networks.Merge(dst, src)
}
func (m *Networks) XXX_Size() int {
	return xxx_messageInfo_Networks.Size(m)
}
func (m *Networks) XXX_DiscardUnknown() {
	xxx_messageInfo_Networks.DiscardUnknown(m)
}

var xxx_messageInfo_Networks proto.InternalMessageInfo

func (m *Networks) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

type Node struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Endpoint             string            `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Podname              string            `protobuf:"bytes,3,opt,name=podname,proto3" json:"podname,omitempty"`
	Cpu                  map[string]int32  `protobuf:"bytes,4,rep,name=cpu,proto3" json:"cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CpuUsed              float64           `protobuf:"fixed64,5,opt,name=cpu_used,json=cpuUsed,proto3" json:"cpu_used,omitempty"`
	Memory               int64             `protobuf:"varint,6,opt,name=memory,proto3" json:"memory,omitempty"`
	MemoryUsed           int64             `protobuf:"varint,7,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`
	Available            bool              `protobuf:"varint,8,opt,name=available,proto3" json:"available,omitempty"`
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InitMemory           int64             `protobuf:"varint,10,opt,name=init_memory,json=initMemory,proto3" json:"init_memory,omitempty"`
	InitCpu              map[string]int32  `protobuf:"bytes,11,rep,name=init_cpu,json=initCpu,proto3" json:"init_cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Info                 string            `protobuf:"bytes,12,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{10}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Node) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *Node) GetCpu() map[string]int32 {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *Node) GetCpuUsed() float64 {
	if m != nil {
		return m.CpuUsed
	}
	return 0
}

func (m *Node) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Node) GetMemoryUsed() int64 {
	if m != nil {
		return m.MemoryUsed
	}
	return 0
}

func (m *Node) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Node) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Node) GetInitMemory() int64 {
	if m != nil {
		return m.InitMemory
	}
	return 0
}

func (m *Node) GetInitCpu() map[string]int32 {
	if m != nil {
		return m.InitCpu
	}
	return nil
}

func (m *Node) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type Nodes struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nodes) Reset()         { *m = Nodes{} }
func (m *Nodes) String() string { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()    {}
func (*Nodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{11}
}
func (m *Nodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nodes.Unmarshal(m, b)
}
func (m *Nodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nodes.Marshal(b, m, deterministic)
}
func (dst *Nodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nodes.Merge(dst, src)
}
func (m *Nodes) XXX_Size() int {
	return xxx_messageInfo_Nodes.Size(m)
}
func (m *Nodes) XXX_DiscardUnknown() {
	xxx_messageInfo_Nodes.DiscardUnknown(m)
}

var xxx_messageInfo_Nodes proto.InternalMessageInfo

func (m *Nodes) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type NodeAvailable struct {
	Nodename             string   `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Podname              string   `protobuf:"bytes,2,opt,name=podname,proto3" json:"podname,omitempty"`
	Available            bool     `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeAvailable) Reset()         { *m = NodeAvailable{} }
func (m *NodeAvailable) String() string { return proto.CompactTextString(m) }
func (*NodeAvailable) ProtoMessage()    {}
func (*NodeAvailable) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{12}
}
func (m *NodeAvailable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAvailable.Unmarshal(m, b)
}
func (m *NodeAvailable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAvailable.Marshal(b, m, deterministic)
}
func (dst *NodeAvailable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAvailable.Merge(dst, src)
}
func (m *NodeAvailable) XXX_Size() int {
	return xxx_messageInfo_NodeAvailable.Size(m)
}
func (m *NodeAvailable) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAvailable.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAvailable proto.InternalMessageInfo

func (m *NodeAvailable) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *NodeAvailable) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *NodeAvailable) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

type Container struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Podname              string            `protobuf:"bytes,2,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodename             string            `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Name                 string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Cpu                  map[string]int32  `protobuf:"bytes,5,rep,name=cpu,proto3" json:"cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Quota                float64           `protobuf:"fixed64,6,opt,name=quota,proto3" json:"quota,omitempty"`
	Memory               int64             `protobuf:"varint,7,opt,name=memory,proto3" json:"memory,omitempty"`
	Privileged           bool              `protobuf:"varint,8,opt,name=privileged,proto3" json:"privileged,omitempty"`
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Publish              map[string]string `protobuf:"bytes,10,rep,name=publish,proto3" json:"publish,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Image                string            `protobuf:"bytes,11,opt,name=image,proto3" json:"image,omitempty"`
	Inspect              []byte            `protobuf:"bytes,12,opt,name=inspect,proto3" json:"inspect,omitempty"`
	StatusData           []byte            `protobuf:"bytes,13,opt,name=status_data,json=statusData,proto3" json:"status_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{13}
}
func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (dst *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(dst, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Container) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *Container) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *Container) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Container) GetCpu() map[string]int32 {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *Container) GetQuota() float64 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *Container) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Container) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *Container) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Container) GetPublish() map[string]string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Container) GetInspect() []byte {
	if m != nil {
		return m.Inspect
	}
	return nil
}

func (m *Container) GetStatusData() []byte {
	if m != nil {
		return m.StatusData
	}
	return nil
}

type ContainerDeployedOptions struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Appname              string   `protobuf:"bytes,2,opt,name=appname,proto3" json:"appname,omitempty"`
	Entrypoint           string   `protobuf:"bytes,3,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Nodename             string   `protobuf:"bytes,4,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerDeployedOptions) Reset()         { *m = ContainerDeployedOptions{} }
func (m *ContainerDeployedOptions) String() string { return proto.CompactTextString(m) }
func (*ContainerDeployedOptions) ProtoMessage()    {}
func (*ContainerDeployedOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{14}
}
func (m *ContainerDeployedOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerDeployedOptions.Unmarshal(m, b)
}
func (m *ContainerDeployedOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerDeployedOptions.Marshal(b, m, deterministic)
}
func (dst *ContainerDeployedOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerDeployedOptions.Merge(dst, src)
}
func (m *ContainerDeployedOptions) XXX_Size() int {
	return xxx_messageInfo_ContainerDeployedOptions.Size(m)
}
func (m *ContainerDeployedOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerDeployedOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerDeployedOptions proto.InternalMessageInfo

func (m *ContainerDeployedOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContainerDeployedOptions) GetAppname() string {
	if m != nil {
		return m.Appname
	}
	return ""
}

func (m *ContainerDeployedOptions) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

func (m *ContainerDeployedOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *ContainerDeployedOptions) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Containers struct {
	Containers           []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Containers) Reset()         { *m = Containers{} }
func (m *Containers) String() string { return proto.CompactTextString(m) }
func (*Containers) ProtoMessage()    {}
func (*Containers) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{15}
}
func (m *Containers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Containers.Unmarshal(m, b)
}
func (m *Containers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Containers.Marshal(b, m, deterministic)
}
func (dst *Containers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Containers.Merge(dst, src)
}
func (m *Containers) XXX_Size() int {
	return xxx_messageInfo_Containers.Size(m)
}
func (m *Containers) XXX_DiscardUnknown() {
	xxx_messageInfo_Containers.DiscardUnknown(m)
}

var xxx_messageInfo_Containers proto.InternalMessageInfo

func (m *Containers) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type ContainerID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerID) Reset()         { *m = ContainerID{} }
func (m *ContainerID) String() string { return proto.CompactTextString(m) }
func (*ContainerID) ProtoMessage()    {}
func (*ContainerID) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{16}
}
func (m *ContainerID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerID.Unmarshal(m, b)
}
func (m *ContainerID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerID.Marshal(b, m, deterministic)
}
func (dst *ContainerID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerID.Merge(dst, src)
}
func (m *ContainerID) XXX_Size() int {
	return xxx_messageInfo_ContainerID.Size(m)
}
func (m *ContainerID) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerID.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerID proto.InternalMessageInfo

func (m *ContainerID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ContainerIDs struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerIDs) Reset()         { *m = ContainerIDs{} }
func (m *ContainerIDs) String() string { return proto.CompactTextString(m) }
func (*ContainerIDs) ProtoMessage()    {}
func (*ContainerIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{17}
}
func (m *ContainerIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerIDs.Unmarshal(m, b)
}
func (m *ContainerIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerIDs.Marshal(b, m, deterministic)
}
func (dst *ContainerIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerIDs.Merge(dst, src)
}
func (m *ContainerIDs) XXX_Size() int {
	return xxx_messageInfo_ContainerIDs.Size(m)
}
func (m *ContainerIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerIDs.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerIDs proto.InternalMessageInfo

func (m *ContainerIDs) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type RemoveContainerOptions struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Force                bool     `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveContainerOptions) Reset()         { *m = RemoveContainerOptions{} }
func (m *RemoveContainerOptions) String() string { return proto.CompactTextString(m) }
func (*RemoveContainerOptions) ProtoMessage()    {}
func (*RemoveContainerOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{18}
}
func (m *RemoveContainerOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveContainerOptions.Unmarshal(m, b)
}
func (m *RemoveContainerOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveContainerOptions.Marshal(b, m, deterministic)
}
func (dst *RemoveContainerOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveContainerOptions.Merge(dst, src)
}
func (m *RemoveContainerOptions) XXX_Size() int {
	return xxx_messageInfo_RemoveContainerOptions.Size(m)
}
func (m *RemoveContainerOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveContainerOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveContainerOptions proto.InternalMessageInfo

func (m *RemoveContainerOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *RemoveContainerOptions) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type ReallocOptions struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Cpu                  float64  `protobuf:"fixed64,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Mem                  int64    `protobuf:"varint,3,opt,name=mem,proto3" json:"mem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReallocOptions) Reset()         { *m = ReallocOptions{} }
func (m *ReallocOptions) String() string { return proto.CompactTextString(m) }
func (*ReallocOptions) ProtoMessage()    {}
func (*ReallocOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{19}
}
func (m *ReallocOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReallocOptions.Unmarshal(m, b)
}
func (m *ReallocOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReallocOptions.Marshal(b, m, deterministic)
}
func (dst *ReallocOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReallocOptions.Merge(dst, src)
}
func (m *ReallocOptions) XXX_Size() int {
	return xxx_messageInfo_ReallocOptions.Size(m)
}
func (m *ReallocOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ReallocOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ReallocOptions proto.InternalMessageInfo

func (m *ReallocOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ReallocOptions) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *ReallocOptions) GetMem() int64 {
	if m != nil {
		return m.Mem
	}
	return 0
}

type AddPodOptions struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Favor                string   `protobuf:"bytes,2,opt,name=favor,proto3" json:"favor,omitempty"`
	Desc                 string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPodOptions) Reset()         { *m = AddPodOptions{} }
func (m *AddPodOptions) String() string { return proto.CompactTextString(m) }
func (*AddPodOptions) ProtoMessage()    {}
func (*AddPodOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{20}
}
func (m *AddPodOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPodOptions.Unmarshal(m, b)
}
func (m *AddPodOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPodOptions.Marshal(b, m, deterministic)
}
func (dst *AddPodOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPodOptions.Merge(dst, src)
}
func (m *AddPodOptions) XXX_Size() int {
	return xxx_messageInfo_AddPodOptions.Size(m)
}
func (m *AddPodOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPodOptions.DiscardUnknown(m)
}

var xxx_messageInfo_AddPodOptions proto.InternalMessageInfo

func (m *AddPodOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddPodOptions) GetFavor() string {
	if m != nil {
		return m.Favor
	}
	return ""
}

func (m *AddPodOptions) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type RemovePodOptions struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePodOptions) Reset()         { *m = RemovePodOptions{} }
func (m *RemovePodOptions) String() string { return proto.CompactTextString(m) }
func (*RemovePodOptions) ProtoMessage()    {}
func (*RemovePodOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{21}
}
func (m *RemovePodOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePodOptions.Unmarshal(m, b)
}
func (m *RemovePodOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePodOptions.Marshal(b, m, deterministic)
}
func (dst *RemovePodOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePodOptions.Merge(dst, src)
}
func (m *RemovePodOptions) XXX_Size() int {
	return xxx_messageInfo_RemovePodOptions.Size(m)
}
func (m *RemovePodOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePodOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePodOptions proto.InternalMessageInfo

func (m *RemovePodOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPodOptions struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPodOptions) Reset()         { *m = GetPodOptions{} }
func (m *GetPodOptions) String() string { return proto.CompactTextString(m) }
func (*GetPodOptions) ProtoMessage()    {}
func (*GetPodOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{22}
}
func (m *GetPodOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPodOptions.Unmarshal(m, b)
}
func (m *GetPodOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPodOptions.Marshal(b, m, deterministic)
}
func (dst *GetPodOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPodOptions.Merge(dst, src)
}
func (m *GetPodOptions) XXX_Size() int {
	return xxx_messageInfo_GetPodOptions.Size(m)
}
func (m *GetPodOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPodOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetPodOptions proto.InternalMessageInfo

func (m *GetPodOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddNodeOptions struct {
	Nodename             string            `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Endpoint             string            `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Podname              string            `protobuf:"bytes,3,opt,name=podname,proto3" json:"podname,omitempty"`
	Ca                   string            `protobuf:"bytes,4,opt,name=ca,proto3" json:"ca,omitempty"`
	Cert                 string            `protobuf:"bytes,5,opt,name=cert,proto3" json:"cert,omitempty"`
	Key                  string            `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Cpu                  int32             `protobuf:"varint,7,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Share                int32             `protobuf:"varint,8,opt,name=share,proto3" json:"share,omitempty"`
	Memory               int64             `protobuf:"varint,9,opt,name=memory,proto3" json:"memory,omitempty"`
	Labels               map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddNodeOptions) Reset()         { *m = AddNodeOptions{} }
func (m *AddNodeOptions) String() string { return proto.CompactTextString(m) }
func (*AddNodeOptions) ProtoMessage()    {}
func (*AddNodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{23}
}
func (m *AddNodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeOptions.Unmarshal(m, b)
}
func (m *AddNodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeOptions.Marshal(b, m, deterministic)
}
func (dst *AddNodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeOptions.Merge(dst, src)
}
func (m *AddNodeOptions) XXX_Size() int {
	return xxx_messageInfo_AddNodeOptions.Size(m)
}
func (m *AddNodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeOptions proto.InternalMessageInfo

func (m *AddNodeOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *AddNodeOptions) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *AddNodeOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *AddNodeOptions) GetCa() string {
	if m != nil {
		return m.Ca
	}
	return ""
}

func (m *AddNodeOptions) GetCert() string {
	if m != nil {
		return m.Cert
	}
	return ""
}

func (m *AddNodeOptions) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddNodeOptions) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *AddNodeOptions) GetShare() int32 {
	if m != nil {
		return m.Share
	}
	return 0
}

func (m *AddNodeOptions) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *AddNodeOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type RemoveNodeOptions struct {
	Nodename             string   `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Podname              string   `protobuf:"bytes,2,opt,name=podname,proto3" json:"podname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeOptions) Reset()         { *m = RemoveNodeOptions{} }
func (m *RemoveNodeOptions) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeOptions) ProtoMessage()    {}
func (*RemoveNodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{24}
}
func (m *RemoveNodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeOptions.Unmarshal(m, b)
}
func (m *RemoveNodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeOptions.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeOptions.Merge(dst, src)
}
func (m *RemoveNodeOptions) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeOptions.Size(m)
}
func (m *RemoveNodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeOptions proto.InternalMessageInfo

func (m *RemoveNodeOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *RemoveNodeOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

type GetNodeOptions struct {
	Podname              string   `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodename             string   `protobuf:"bytes,2,opt,name=nodename,proto3" json:"nodename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeOptions) Reset()         { *m = GetNodeOptions{} }
func (m *GetNodeOptions) String() string { return proto.CompactTextString(m) }
func (*GetNodeOptions) ProtoMessage()    {}
func (*GetNodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{25}
}
func (m *GetNodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeOptions.Unmarshal(m, b)
}
func (m *GetNodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeOptions.Marshal(b, m, deterministic)
}
func (dst *GetNodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeOptions.Merge(dst, src)
}
func (m *GetNodeOptions) XXX_Size() int {
	return xxx_messageInfo_GetNodeOptions.Size(m)
}
func (m *GetNodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeOptions proto.InternalMessageInfo

func (m *GetNodeOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *GetNodeOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

type ListNodesOptions struct {
	Podname              string   `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	All                  bool     `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesOptions) Reset()         { *m = ListNodesOptions{} }
func (m *ListNodesOptions) String() string { return proto.CompactTextString(m) }
func (*ListNodesOptions) ProtoMessage()    {}
func (*ListNodesOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{26}
}
func (m *ListNodesOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesOptions.Unmarshal(m, b)
}
func (m *ListNodesOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesOptions.Marshal(b, m, deterministic)
}
func (dst *ListNodesOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesOptions.Merge(dst, src)
}
func (m *ListNodesOptions) XXX_Size() int {
	return xxx_messageInfo_ListNodesOptions.Size(m)
}
func (m *ListNodesOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesOptions proto.InternalMessageInfo

func (m *ListNodesOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *ListNodesOptions) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type Build struct {
	Base                 string            `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Repo                 string            `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Version              string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Dir                  string            `protobuf:"bytes,4,opt,name=dir,proto3" json:"dir,omitempty"`
	Submodule            bool              `protobuf:"varint,5,opt,name=submodule,proto3" json:"submodule,omitempty"`
	Commands             []string          `protobuf:"bytes,6,rep,name=commands,proto3" json:"commands,omitempty"`
	Envs                 map[string]string `protobuf:"bytes,7,rep,name=envs,proto3" json:"envs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Args                 map[string]string `protobuf:"bytes,8,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Artifacts            map[string]string `protobuf:"bytes,10,rep,name=artifacts,proto3" json:"artifacts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cache                map[string]string `protobuf:"bytes,11,rep,name=cache,proto3" json:"cache,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{27}
}
func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (dst *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(dst, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *Build) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Build) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Build) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *Build) GetSubmodule() bool {
	if m != nil {
		return m.Submodule
	}
	return false
}

func (m *Build) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *Build) GetEnvs() map[string]string {
	if m != nil {
		return m.Envs
	}
	return nil
}

func (m *Build) GetArgs() map[string]string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Build) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Build) GetArtifacts() map[string]string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *Build) GetCache() map[string]string {
	if m != nil {
		return m.Cache
	}
	return nil
}

type Builds struct {
	Stages               []string          `protobuf:"bytes,1,rep,name=stages,proto3" json:"stages,omitempty"`
	Builds               map[string]*Build `protobuf:"bytes,2,rep,name=builds,proto3" json:"builds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Builds) Reset()         { *m = Builds{} }
func (m *Builds) String() string { return proto.CompactTextString(m) }
func (*Builds) ProtoMessage()    {}
func (*Builds) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{28}
}
func (m *Builds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Builds.Unmarshal(m, b)
}
func (m *Builds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Builds.Marshal(b, m, deterministic)
}
func (dst *Builds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Builds.Merge(dst, src)
}
func (m *Builds) XXX_Size() int {
	return xxx_messageInfo_Builds.Size(m)
}
func (m *Builds) XXX_DiscardUnknown() {
	xxx_messageInfo_Builds.DiscardUnknown(m)
}

var xxx_messageInfo_Builds proto.InternalMessageInfo

func (m *Builds) GetStages() []string {
	if m != nil {
		return m.Stages
	}
	return nil
}

func (m *Builds) GetBuilds() map[string]*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type BuildImageOptions struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Uid                  int32    `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Builds               *Builds  `protobuf:"bytes,5,opt,name=builds,proto3" json:"builds,omitempty"`
	Tar                  []byte   `protobuf:"bytes,6,opt,name=tar,proto3" json:"tar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildImageOptions) Reset()         { *m = BuildImageOptions{} }
func (m *BuildImageOptions) String() string { return proto.CompactTextString(m) }
func (*BuildImageOptions) ProtoMessage()    {}
func (*BuildImageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{29}
}
func (m *BuildImageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildImageOptions.Unmarshal(m, b)
}
func (m *BuildImageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildImageOptions.Marshal(b, m, deterministic)
}
func (dst *BuildImageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildImageOptions.Merge(dst, src)
}
func (m *BuildImageOptions) XXX_Size() int {
	return xxx_messageInfo_BuildImageOptions.Size(m)
}
func (m *BuildImageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildImageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_BuildImageOptions proto.InternalMessageInfo

func (m *BuildImageOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BuildImageOptions) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *BuildImageOptions) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *BuildImageOptions) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *BuildImageOptions) GetBuilds() *Builds {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *BuildImageOptions) GetTar() []byte {
	if m != nil {
		return m.Tar
	}
	return nil
}

type HookOptions struct {
	AfterStart           []string `protobuf:"bytes,1,rep,name=after_start,json=afterStart,proto3" json:"after_start,omitempty"`
	BeforeStop           []string `protobuf:"bytes,2,rep,name=before_stop,json=beforeStop,proto3" json:"before_stop,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HookOptions) Reset()         { *m = HookOptions{} }
func (m *HookOptions) String() string { return proto.CompactTextString(m) }
func (*HookOptions) ProtoMessage()    {}
func (*HookOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{30}
}
func (m *HookOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HookOptions.Unmarshal(m, b)
}
func (m *HookOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HookOptions.Marshal(b, m, deterministic)
}
func (dst *HookOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HookOptions.Merge(dst, src)
}
func (m *HookOptions) XXX_Size() int {
	return xxx_messageInfo_HookOptions.Size(m)
}
func (m *HookOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HookOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HookOptions proto.InternalMessageInfo

func (m *HookOptions) GetAfterStart() []string {
	if m != nil {
		return m.AfterStart
	}
	return nil
}

func (m *HookOptions) GetBeforeStop() []string {
	if m != nil {
		return m.BeforeStop
	}
	return nil
}

func (m *HookOptions) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type HealthCheckOptions struct {
	TcpPorts             []string `protobuf:"bytes,1,rep,name=tcp_ports,json=tcpPorts,proto3" json:"tcp_ports,omitempty"`
	HttpPort             string   `protobuf:"bytes,2,opt,name=http_port,json=httpPort,proto3" json:"http_port,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Code                 int32    `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckOptions) Reset()         { *m = HealthCheckOptions{} }
func (m *HealthCheckOptions) String() string { return proto.CompactTextString(m) }
func (*HealthCheckOptions) ProtoMessage()    {}
func (*HealthCheckOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{31}
}
func (m *HealthCheckOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckOptions.Unmarshal(m, b)
}
func (m *HealthCheckOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckOptions.Marshal(b, m, deterministic)
}
func (dst *HealthCheckOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckOptions.Merge(dst, src)
}
func (m *HealthCheckOptions) XXX_Size() int {
	return xxx_messageInfo_HealthCheckOptions.Size(m)
}
func (m *HealthCheckOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckOptions proto.InternalMessageInfo

func (m *HealthCheckOptions) GetTcpPorts() []string {
	if m != nil {
		return m.TcpPorts
	}
	return nil
}

func (m *HealthCheckOptions) GetHttpPort() string {
	if m != nil {
		return m.HttpPort
	}
	return ""
}

func (m *HealthCheckOptions) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HealthCheckOptions) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type LogOptions struct {
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Config               map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogOptions) Reset()         { *m = LogOptions{} }
func (m *LogOptions) String() string { return proto.CompactTextString(m) }
func (*LogOptions) ProtoMessage()    {}
func (*LogOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{32}
}
func (m *LogOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogOptions.Unmarshal(m, b)
}
func (m *LogOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogOptions.Marshal(b, m, deterministic)
}
func (dst *LogOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogOptions.Merge(dst, src)
}
func (m *LogOptions) XXX_Size() int {
	return xxx_messageInfo_LogOptions.Size(m)
}
func (m *LogOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_LogOptions.DiscardUnknown(m)
}

var xxx_messageInfo_LogOptions proto.InternalMessageInfo

func (m *LogOptions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LogOptions) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type EntrypointOptions struct {
	Name                 string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Command              string              `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Privileged           bool                `protobuf:"varint,3,opt,name=privileged,proto3" json:"privileged,omitempty"`
	Dir                  string              `protobuf:"bytes,4,opt,name=dir,proto3" json:"dir,omitempty"`
	Log                  *LogOptions         `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty"`
	Publish              []string            `protobuf:"bytes,6,rep,name=publish,proto3" json:"publish,omitempty"`
	Healthcheck          *HealthCheckOptions `protobuf:"bytes,7,opt,name=healthcheck,proto3" json:"healthcheck,omitempty"`
	Hook                 *HookOptions        `protobuf:"bytes,8,opt,name=hook,proto3" json:"hook,omitempty"`
	RestartPolicy        string              `protobuf:"bytes,9,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	Sysctls              map[string]string   `protobuf:"bytes,10,rep,name=sysctls,proto3" json:"sysctls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EntrypointOptions) Reset()         { *m = EntrypointOptions{} }
func (m *EntrypointOptions) String() string { return proto.CompactTextString(m) }
func (*EntrypointOptions) ProtoMessage()    {}
func (*EntrypointOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{33}
}
func (m *EntrypointOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointOptions.Unmarshal(m, b)
}
func (m *EntrypointOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointOptions.Marshal(b, m, deterministic)
}
func (dst *EntrypointOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointOptions.Merge(dst, src)
}
func (m *EntrypointOptions) XXX_Size() int {
	return xxx_messageInfo_EntrypointOptions.Size(m)
}
func (m *EntrypointOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointOptions.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointOptions proto.InternalMessageInfo

func (m *EntrypointOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EntrypointOptions) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *EntrypointOptions) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *EntrypointOptions) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *EntrypointOptions) GetLog() *LogOptions {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *EntrypointOptions) GetPublish() []string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *EntrypointOptions) GetHealthcheck() *HealthCheckOptions {
	if m != nil {
		return m.Healthcheck
	}
	return nil
}

func (m *EntrypointOptions) GetHook() *HookOptions {
	if m != nil {
		return m.Hook
	}
	return nil
}

func (m *EntrypointOptions) GetRestartPolicy() string {
	if m != nil {
		return m.RestartPolicy
	}
	return ""
}

func (m *EntrypointOptions) GetSysctls() map[string]string {
	if m != nil {
		return m.Sysctls
	}
	return nil
}

type DeployOptions struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Entrypoint           *EntrypointOptions `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Podname              string             `protobuf:"bytes,3,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodename             string             `protobuf:"bytes,4,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Image                string             `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	ExtraArgs            string             `protobuf:"bytes,6,opt,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	CpuQuota             float64            `protobuf:"fixed64,7,opt,name=cpu_quota,json=cpuQuota,proto3" json:"cpu_quota,omitempty"`
	Memory               int64              `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	Count                int32              `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`
	Env                  []string           `protobuf:"bytes,10,rep,name=env,proto3" json:"env,omitempty"`
	Dns                  []string           `protobuf:"bytes,11,rep,name=dns,proto3" json:"dns,omitempty"`
	ExtraHosts           []string           `protobuf:"bytes,12,rep,name=extra_hosts,json=extraHosts,proto3" json:"extra_hosts,omitempty"`
	Volumes              []string           `protobuf:"bytes,13,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Networks             map[string]string  `protobuf:"bytes,14,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Networkmode          string             `protobuf:"bytes,15,opt,name=networkmode,proto3" json:"networkmode,omitempty"`
	User                 string             `protobuf:"bytes,16,opt,name=user,proto3" json:"user,omitempty"`
	Debug                bool               `protobuf:"varint,17,opt,name=debug,proto3" json:"debug,omitempty"`
	OpenStdin            bool               `protobuf:"varint,18,opt,name=openStdin,proto3" json:"openStdin,omitempty"`
	Labels               map[string]string  `protobuf:"bytes,19,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Nodelabels           map[string]string  `protobuf:"bytes,20,rep,name=nodelabels,proto3" json:"nodelabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeployMethod         string             `protobuf:"bytes,21,opt,name=deploy_method,json=deployMethod,proto3" json:"deploy_method,omitempty"`
	Data                 map[string][]byte  `protobuf:"bytes,22,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Softlimit            bool               `protobuf:"varint,23,opt,name=softlimit,proto3" json:"softlimit,omitempty"`
	NodesLimit           int32              `protobuf:"varint,24,opt,name=nodes_limit,json=nodesLimit,proto3" json:"nodes_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeployOptions) Reset()         { *m = DeployOptions{} }
func (m *DeployOptions) String() string { return proto.CompactTextString(m) }
func (*DeployOptions) ProtoMessage()    {}
func (*DeployOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{34}
}
func (m *DeployOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployOptions.Unmarshal(m, b)
}
func (m *DeployOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployOptions.Marshal(b, m, deterministic)
}
func (dst *DeployOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployOptions.Merge(dst, src)
}
func (m *DeployOptions) XXX_Size() int {
	return xxx_messageInfo_DeployOptions.Size(m)
}
func (m *DeployOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeployOptions proto.InternalMessageInfo

func (m *DeployOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeployOptions) GetEntrypoint() *EntrypointOptions {
	if m != nil {
		return m.Entrypoint
	}
	return nil
}

func (m *DeployOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *DeployOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *DeployOptions) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *DeployOptions) GetExtraArgs() string {
	if m != nil {
		return m.ExtraArgs
	}
	return ""
}

func (m *DeployOptions) GetCpuQuota() float64 {
	if m != nil {
		return m.CpuQuota
	}
	return 0
}

func (m *DeployOptions) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *DeployOptions) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *DeployOptions) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *DeployOptions) GetDns() []string {
	if m != nil {
		return m.Dns
	}
	return nil
}

func (m *DeployOptions) GetExtraHosts() []string {
	if m != nil {
		return m.ExtraHosts
	}
	return nil
}

func (m *DeployOptions) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *DeployOptions) GetNetworks() map[string]string {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *DeployOptions) GetNetworkmode() string {
	if m != nil {
		return m.Networkmode
	}
	return ""
}

func (m *DeployOptions) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *DeployOptions) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

func (m *DeployOptions) GetOpenStdin() bool {
	if m != nil {
		return m.OpenStdin
	}
	return false
}

func (m *DeployOptions) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *DeployOptions) GetNodelabels() map[string]string {
	if m != nil {
		return m.Nodelabels
	}
	return nil
}

func (m *DeployOptions) GetDeployMethod() string {
	if m != nil {
		return m.DeployMethod
	}
	return ""
}

func (m *DeployOptions) GetData() map[string][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DeployOptions) GetSoftlimit() bool {
	if m != nil {
		return m.Softlimit
	}
	return false
}

func (m *DeployOptions) GetNodesLimit() int32 {
	if m != nil {
		return m.NodesLimit
	}
	return 0
}

type ReplaceOptions struct {
	DeployOpt            *DeployOptions    `protobuf:"bytes,1,opt,name=deployOpt,proto3" json:"deployOpt,omitempty"`
	Force                bool              `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	FilterLabels         map[string]string `protobuf:"bytes,3,rep,name=filter_labels,json=filterLabels,proto3" json:"filter_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Copy                 map[string]string `protobuf:"bytes,4,rep,name=copy,proto3" json:"copy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ids                  []string          `protobuf:"bytes,5,rep,name=ids,proto3" json:"ids,omitempty"`
	Networkinherit       bool              `protobuf:"varint,6,opt,name=networkinherit,proto3" json:"networkinherit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReplaceOptions) Reset()         { *m = ReplaceOptions{} }
func (m *ReplaceOptions) String() string { return proto.CompactTextString(m) }
func (*ReplaceOptions) ProtoMessage()    {}
func (*ReplaceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{35}
}
func (m *ReplaceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceOptions.Unmarshal(m, b)
}
func (m *ReplaceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceOptions.Marshal(b, m, deterministic)
}
func (dst *ReplaceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceOptions.Merge(dst, src)
}
func (m *ReplaceOptions) XXX_Size() int {
	return xxx_messageInfo_ReplaceOptions.Size(m)
}
func (m *ReplaceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceOptions proto.InternalMessageInfo

func (m *ReplaceOptions) GetDeployOpt() *DeployOptions {
	if m != nil {
		return m.DeployOpt
	}
	return nil
}

func (m *ReplaceOptions) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *ReplaceOptions) GetFilterLabels() map[string]string {
	if m != nil {
		return m.FilterLabels
	}
	return nil
}

func (m *ReplaceOptions) GetCopy() map[string]string {
	if m != nil {
		return m.Copy
	}
	return nil
}

func (m *ReplaceOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ReplaceOptions) GetNetworkinherit() bool {
	if m != nil {
		return m.Networkinherit
	}
	return false
}

type CacheImageOptions struct {
	Podname              string   `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodename             string   `protobuf:"bytes,2,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Images               []string `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Step                 int32    `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheImageOptions) Reset()         { *m = CacheImageOptions{} }
func (m *CacheImageOptions) String() string { return proto.CompactTextString(m) }
func (*CacheImageOptions) ProtoMessage()    {}
func (*CacheImageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{36}
}
func (m *CacheImageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheImageOptions.Unmarshal(m, b)
}
func (m *CacheImageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheImageOptions.Marshal(b, m, deterministic)
}
func (dst *CacheImageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheImageOptions.Merge(dst, src)
}
func (m *CacheImageOptions) XXX_Size() int {
	return xxx_messageInfo_CacheImageOptions.Size(m)
}
func (m *CacheImageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheImageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CacheImageOptions proto.InternalMessageInfo

func (m *CacheImageOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *CacheImageOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *CacheImageOptions) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *CacheImageOptions) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

type RemoveImageOptions struct {
	Podname              string   `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodename             string   `protobuf:"bytes,2,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Images               []string `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Step                 int32    `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	Prune                bool     `protobuf:"varint,5,opt,name=prune,proto3" json:"prune,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveImageOptions) Reset()         { *m = RemoveImageOptions{} }
func (m *RemoveImageOptions) String() string { return proto.CompactTextString(m) }
func (*RemoveImageOptions) ProtoMessage()    {}
func (*RemoveImageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{37}
}
func (m *RemoveImageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveImageOptions.Unmarshal(m, b)
}
func (m *RemoveImageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveImageOptions.Marshal(b, m, deterministic)
}
func (dst *RemoveImageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveImageOptions.Merge(dst, src)
}
func (m *RemoveImageOptions) XXX_Size() int {
	return xxx_messageInfo_RemoveImageOptions.Size(m)
}
func (m *RemoveImageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveImageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveImageOptions proto.InternalMessageInfo

func (m *RemoveImageOptions) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *RemoveImageOptions) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *RemoveImageOptions) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *RemoveImageOptions) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *RemoveImageOptions) GetPrune() bool {
	if m != nil {
		return m.Prune
	}
	return false
}

type CopyPaths struct {
	Paths                []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopyPaths) Reset()         { *m = CopyPaths{} }
func (m *CopyPaths) String() string { return proto.CompactTextString(m) }
func (*CopyPaths) ProtoMessage()    {}
func (*CopyPaths) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{38}
}
func (m *CopyPaths) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyPaths.Unmarshal(m, b)
}
func (m *CopyPaths) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyPaths.Marshal(b, m, deterministic)
}
func (dst *CopyPaths) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyPaths.Merge(dst, src)
}
func (m *CopyPaths) XXX_Size() int {
	return xxx_messageInfo_CopyPaths.Size(m)
}
func (m *CopyPaths) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyPaths.DiscardUnknown(m)
}

var xxx_messageInfo_CopyPaths proto.InternalMessageInfo

func (m *CopyPaths) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

type CopyOptions struct {
	Targets              map[string]*CopyPaths `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CopyOptions) Reset()         { *m = CopyOptions{} }
func (m *CopyOptions) String() string { return proto.CompactTextString(m) }
func (*CopyOptions) ProtoMessage()    {}
func (*CopyOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{39}
}
func (m *CopyOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyOptions.Unmarshal(m, b)
}
func (m *CopyOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyOptions.Marshal(b, m, deterministic)
}
func (dst *CopyOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyOptions.Merge(dst, src)
}
func (m *CopyOptions) XXX_Size() int {
	return xxx_messageInfo_CopyOptions.Size(m)
}
func (m *CopyOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CopyOptions proto.InternalMessageInfo

func (m *CopyOptions) GetTargets() map[string]*CopyPaths {
	if m != nil {
		return m.Targets
	}
	return nil
}

type SendOptions struct {
	Ids                  []string          `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Data                 map[string][]byte `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendOptions) Reset()         { *m = SendOptions{} }
func (m *SendOptions) String() string { return proto.CompactTextString(m) }
func (*SendOptions) ProtoMessage()    {}
func (*SendOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{40}
}
func (m *SendOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendOptions.Unmarshal(m, b)
}
func (m *SendOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendOptions.Marshal(b, m, deterministic)
}
func (dst *SendOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendOptions.Merge(dst, src)
}
func (m *SendOptions) XXX_Size() int {
	return xxx_messageInfo_SendOptions.Size(m)
}
func (m *SendOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SendOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SendOptions proto.InternalMessageInfo

func (m *SendOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *SendOptions) GetData() map[string][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ErrorDetail struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorDetail) Reset()         { *m = ErrorDetail{} }
func (m *ErrorDetail) String() string { return proto.CompactTextString(m) }
func (*ErrorDetail) ProtoMessage()    {}
func (*ErrorDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{41}
}
func (m *ErrorDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorDetail.Unmarshal(m, b)
}
func (m *ErrorDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorDetail.Marshal(b, m, deterministic)
}
func (dst *ErrorDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorDetail.Merge(dst, src)
}
func (m *ErrorDetail) XXX_Size() int {
	return xxx_messageInfo_ErrorDetail.Size(m)
}
func (m *ErrorDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorDetail proto.InternalMessageInfo

func (m *ErrorDetail) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ErrorDetail) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type BuildImageMessage struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Progress             string       `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"`
	Error                string       `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Stream               string       `protobuf:"bytes,5,opt,name=stream,proto3" json:"stream,omitempty"`
	ErrorDetail          *ErrorDetail `protobuf:"bytes,6,opt,name=error_detail,json=errorDetail,proto3" json:"error_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BuildImageMessage) Reset()         { *m = BuildImageMessage{} }
func (m *BuildImageMessage) String() string { return proto.CompactTextString(m) }
func (*BuildImageMessage) ProtoMessage()    {}
func (*BuildImageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{42}
}
func (m *BuildImageMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildImageMessage.Unmarshal(m, b)
}
func (m *BuildImageMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildImageMessage.Marshal(b, m, deterministic)
}
func (dst *BuildImageMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildImageMessage.Merge(dst, src)
}
func (m *BuildImageMessage) XXX_Size() int {
	return xxx_messageInfo_BuildImageMessage.Size(m)
}
func (m *BuildImageMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildImageMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BuildImageMessage proto.InternalMessageInfo

func (m *BuildImageMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BuildImageMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BuildImageMessage) GetProgress() string {
	if m != nil {
		return m.Progress
	}
	return ""
}

func (m *BuildImageMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BuildImageMessage) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

func (m *BuildImageMessage) GetErrorDetail() *ErrorDetail {
	if m != nil {
		return m.ErrorDetail
	}
	return nil
}

type CreateContainerMessage struct {
	Podname              string            `protobuf:"bytes,1,opt,name=podname,proto3" json:"podname,omitempty"`
	Nodename             string            `protobuf:"bytes,2,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Id                   string            `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Error                string            `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Success              bool              `protobuf:"varint,6,opt,name=success,proto3" json:"success,omitempty"`
	Cpu                  map[string]int32  `protobuf:"bytes,7,rep,name=cpu,proto3" json:"cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Quota                float64           `protobuf:"fixed64,8,opt,name=quota,proto3" json:"quota,omitempty"`
	Memory               int64             `protobuf:"varint,9,opt,name=memory,proto3" json:"memory,omitempty"`
	Publish              map[string]string `protobuf:"bytes,10,rep,name=publish,proto3" json:"publish,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Hook                 []byte            `protobuf:"bytes,11,opt,name=hook,proto3" json:"hook,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateContainerMessage) Reset()         { *m = CreateContainerMessage{} }
func (m *CreateContainerMessage) String() string { return proto.CompactTextString(m) }
func (*CreateContainerMessage) ProtoMessage()    {}
func (*CreateContainerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{43}
}
func (m *CreateContainerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateContainerMessage.Unmarshal(m, b)
}
func (m *CreateContainerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateContainerMessage.Marshal(b, m, deterministic)
}
func (dst *CreateContainerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateContainerMessage.Merge(dst, src)
}
func (m *CreateContainerMessage) XXX_Size() int {
	return xxx_messageInfo_CreateContainerMessage.Size(m)
}
func (m *CreateContainerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateContainerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CreateContainerMessage proto.InternalMessageInfo

func (m *CreateContainerMessage) GetPodname() string {
	if m != nil {
		return m.Podname
	}
	return ""
}

func (m *CreateContainerMessage) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *CreateContainerMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateContainerMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateContainerMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CreateContainerMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CreateContainerMessage) GetCpu() map[string]int32 {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *CreateContainerMessage) GetQuota() float64 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *CreateContainerMessage) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *CreateContainerMessage) GetPublish() map[string]string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *CreateContainerMessage) GetHook() []byte {
	if m != nil {
		return m.Hook
	}
	return nil
}

type ReplaceContainerMessage struct {
	Create               *CreateContainerMessage `protobuf:"bytes,1,opt,name=create,proto3" json:"create,omitempty"`
	Remove               *RemoveContainerMessage `protobuf:"bytes,2,opt,name=remove,proto3" json:"remove,omitempty"`
	Error                string                  `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ReplaceContainerMessage) Reset()         { *m = ReplaceContainerMessage{} }
func (m *ReplaceContainerMessage) String() string { return proto.CompactTextString(m) }
func (*ReplaceContainerMessage) ProtoMessage()    {}
func (*ReplaceContainerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{44}
}
func (m *ReplaceContainerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceContainerMessage.Unmarshal(m, b)
}
func (m *ReplaceContainerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceContainerMessage.Marshal(b, m, deterministic)
}
func (dst *ReplaceContainerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceContainerMessage.Merge(dst, src)
}
func (m *ReplaceContainerMessage) XXX_Size() int {
	return xxx_messageInfo_ReplaceContainerMessage.Size(m)
}
func (m *ReplaceContainerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceContainerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceContainerMessage proto.InternalMessageInfo

func (m *ReplaceContainerMessage) GetCreate() *CreateContainerMessage {
	if m != nil {
		return m.Create
	}
	return nil
}

func (m *ReplaceContainerMessage) GetRemove() *RemoveContainerMessage {
	if m != nil {
		return m.Remove
	}
	return nil
}

func (m *ReplaceContainerMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type RunAndWaitMessage struct {
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunAndWaitMessage) Reset()         { *m = RunAndWaitMessage{} }
func (m *RunAndWaitMessage) String() string { return proto.CompactTextString(m) }
func (*RunAndWaitMessage) ProtoMessage()    {}
func (*RunAndWaitMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{45}
}
func (m *RunAndWaitMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunAndWaitMessage.Unmarshal(m, b)
}
func (m *RunAndWaitMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunAndWaitMessage.Marshal(b, m, deterministic)
}
func (dst *RunAndWaitMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunAndWaitMessage.Merge(dst, src)
}
func (m *RunAndWaitMessage) XXX_Size() int {
	return xxx_messageInfo_RunAndWaitMessage.Size(m)
}
func (m *RunAndWaitMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RunAndWaitMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RunAndWaitMessage proto.InternalMessageInfo

func (m *RunAndWaitMessage) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *RunAndWaitMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CacheImageMessage struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Nodename             string   `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheImageMessage) Reset()         { *m = CacheImageMessage{} }
func (m *CacheImageMessage) String() string { return proto.CompactTextString(m) }
func (*CacheImageMessage) ProtoMessage()    {}
func (*CacheImageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{46}
}
func (m *CacheImageMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheImageMessage.Unmarshal(m, b)
}
func (m *CacheImageMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheImageMessage.Marshal(b, m, deterministic)
}
func (dst *CacheImageMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheImageMessage.Merge(dst, src)
}
func (m *CacheImageMessage) XXX_Size() int {
	return xxx_messageInfo_CacheImageMessage.Size(m)
}
func (m *CacheImageMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheImageMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CacheImageMessage proto.InternalMessageInfo

func (m *CacheImageMessage) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CacheImageMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CacheImageMessage) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *CacheImageMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RemoveImageMessage struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Messages             []string `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveImageMessage) Reset()         { *m = RemoveImageMessage{} }
func (m *RemoveImageMessage) String() string { return proto.CompactTextString(m) }
func (*RemoveImageMessage) ProtoMessage()    {}
func (*RemoveImageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{47}
}
func (m *RemoveImageMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveImageMessage.Unmarshal(m, b)
}
func (m *RemoveImageMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveImageMessage.Marshal(b, m, deterministic)
}
func (dst *RemoveImageMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveImageMessage.Merge(dst, src)
}
func (m *RemoveImageMessage) XXX_Size() int {
	return xxx_messageInfo_RemoveImageMessage.Size(m)
}
func (m *RemoveImageMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveImageMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveImageMessage proto.InternalMessageInfo

func (m *RemoveImageMessage) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *RemoveImageMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RemoveImageMessage) GetMessages() []string {
	if m != nil {
		return m.Messages
	}
	return nil
}

type RemoveContainerMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Hook                 string   `protobuf:"bytes,3,opt,name=hook,proto3" json:"hook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveContainerMessage) Reset()         { *m = RemoveContainerMessage{} }
func (m *RemoveContainerMessage) String() string { return proto.CompactTextString(m) }
func (*RemoveContainerMessage) ProtoMessage()    {}
func (*RemoveContainerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{48}
}
func (m *RemoveContainerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveContainerMessage.Unmarshal(m, b)
}
func (m *RemoveContainerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveContainerMessage.Marshal(b, m, deterministic)
}
func (dst *RemoveContainerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveContainerMessage.Merge(dst, src)
}
func (m *RemoveContainerMessage) XXX_Size() int {
	return xxx_messageInfo_RemoveContainerMessage.Size(m)
}
func (m *RemoveContainerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveContainerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveContainerMessage proto.InternalMessageInfo

func (m *RemoveContainerMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoveContainerMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RemoveContainerMessage) GetHook() string {
	if m != nil {
		return m.Hook
	}
	return ""
}

type ReallocResourceMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReallocResourceMessage) Reset()         { *m = ReallocResourceMessage{} }
func (m *ReallocResourceMessage) String() string { return proto.CompactTextString(m) }
func (*ReallocResourceMessage) ProtoMessage()    {}
func (*ReallocResourceMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{49}
}
func (m *ReallocResourceMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReallocResourceMessage.Unmarshal(m, b)
}
func (m *ReallocResourceMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReallocResourceMessage.Marshal(b, m, deterministic)
}
func (dst *ReallocResourceMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReallocResourceMessage.Merge(dst, src)
}
func (m *ReallocResourceMessage) XXX_Size() int {
	return xxx_messageInfo_ReallocResourceMessage.Size(m)
}
func (m *ReallocResourceMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReallocResourceMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReallocResourceMessage proto.InternalMessageInfo

func (m *ReallocResourceMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReallocResourceMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type CopyMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Error                string   `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopyMessage) Reset()         { *m = CopyMessage{} }
func (m *CopyMessage) String() string { return proto.CompactTextString(m) }
func (*CopyMessage) ProtoMessage()    {}
func (*CopyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{50}
}
func (m *CopyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyMessage.Unmarshal(m, b)
}
func (m *CopyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyMessage.Marshal(b, m, deterministic)
}
func (dst *CopyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyMessage.Merge(dst, src)
}
func (m *CopyMessage) XXX_Size() int {
	return xxx_messageInfo_CopyMessage.Size(m)
}
func (m *CopyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CopyMessage proto.InternalMessageInfo

func (m *CopyMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CopyMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CopyMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CopyMessage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CopyMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CopyMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SendMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessage) Reset()         { *m = SendMessage{} }
func (m *SendMessage) String() string { return proto.CompactTextString(m) }
func (*SendMessage) ProtoMessage()    {}
func (*SendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{51}
}
func (m *SendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessage.Unmarshal(m, b)
}
func (m *SendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessage.Marshal(b, m, deterministic)
}
func (dst *SendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessage.Merge(dst, src)
}
func (m *SendMessage) XXX_Size() int {
	return xxx_messageInfo_SendMessage.Size(m)
}
func (m *SendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessage proto.InternalMessageInfo

func (m *SendMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendMessage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SendMessage) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type RunAndWaitOptions struct {
	DeployOptions        *DeployOptions `protobuf:"bytes,1,opt,name=DeployOptions,proto3" json:"DeployOptions,omitempty"`
	Cmd                  []byte         `protobuf:"bytes,2,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RunAndWaitOptions) Reset()         { *m = RunAndWaitOptions{} }
func (m *RunAndWaitOptions) String() string { return proto.CompactTextString(m) }
func (*RunAndWaitOptions) ProtoMessage()    {}
func (*RunAndWaitOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{52}
}
func (m *RunAndWaitOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunAndWaitOptions.Unmarshal(m, b)
}
func (m *RunAndWaitOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunAndWaitOptions.Marshal(b, m, deterministic)
}
func (dst *RunAndWaitOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunAndWaitOptions.Merge(dst, src)
}
func (m *RunAndWaitOptions) XXX_Size() int {
	return xxx_messageInfo_RunAndWaitOptions.Size(m)
}
func (m *RunAndWaitOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RunAndWaitOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RunAndWaitOptions proto.InternalMessageInfo

func (m *RunAndWaitOptions) GetDeployOptions() *DeployOptions {
	if m != nil {
		return m.DeployOptions
	}
	return nil
}

func (m *RunAndWaitOptions) GetCmd() []byte {
	if m != nil {
		return m.Cmd
	}
	return nil
}

type ControlContainerOptions struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlContainerOptions) Reset()         { *m = ControlContainerOptions{} }
func (m *ControlContainerOptions) String() string { return proto.CompactTextString(m) }
func (*ControlContainerOptions) ProtoMessage()    {}
func (*ControlContainerOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{53}
}
func (m *ControlContainerOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlContainerOptions.Unmarshal(m, b)
}
func (m *ControlContainerOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlContainerOptions.Marshal(b, m, deterministic)
}
func (dst *ControlContainerOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlContainerOptions.Merge(dst, src)
}
func (m *ControlContainerOptions) XXX_Size() int {
	return xxx_messageInfo_ControlContainerOptions.Size(m)
}
func (m *ControlContainerOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlContainerOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlContainerOptions proto.InternalMessageInfo

func (m *ControlContainerOptions) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ControlContainerOptions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ControlContainerMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Hook                 []byte   `protobuf:"bytes,3,opt,name=hook,proto3" json:"hook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlContainerMessage) Reset()         { *m = ControlContainerMessage{} }
func (m *ControlContainerMessage) String() string { return proto.CompactTextString(m) }
func (*ControlContainerMessage) ProtoMessage()    {}
func (*ControlContainerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_a9f47d9e6d3a6e1a, []int{54}
}
func (m *ControlContainerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlContainerMessage.Unmarshal(m, b)
}
func (m *ControlContainerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlContainerMessage.Marshal(b, m, deterministic)
}
func (dst *ControlContainerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlContainerMessage.Merge(dst, src)
}
func (m *ControlContainerMessage) XXX_Size() int {
	return xxx_messageInfo_ControlContainerMessage.Size(m)
}
func (m *ControlContainerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlContainerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ControlContainerMessage proto.InternalMessageInfo

func (m *ControlContainerMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ControlContainerMessage) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ControlContainerMessage) GetHook() []byte {
	if m != nil {
		return m.Hook
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*ListContainersOptions)(nil), "pb.ListContainersOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.ListContainersOptions.LabelsEntry")
	proto.RegisterType((*DeployStatusOptions)(nil), "pb.DeployStatusOptions")
	proto.RegisterType((*DeployStatusMessage)(nil), "pb.DeployStatusMessage")
	proto.RegisterType((*Pod)(nil), "pb.Pod")
	proto.RegisterType((*Pods)(nil), "pb.Pods")
	proto.RegisterType((*PodResource)(nil), "pb.PodResource")
	proto.RegisterMapType((map[string]float64)(nil), "pb.PodResource.CpuEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.PodResource.DetailEntry")
	proto.RegisterMapType((map[string]bool)(nil), "pb.PodResource.DiffEntry")
	proto.RegisterMapType((map[string]float64)(nil), "pb.PodResource.MemoryEntry")
	proto.RegisterType((*ListNetworkOptions)(nil), "pb.ListNetworkOptions")
	proto.RegisterType((*Network)(nil), "pb.Network")
	proto.RegisterType((*Networks)(nil), "pb.Networks")
	proto.RegisterType((*Node)(nil), "pb.Node")
	proto.RegisterMapType((map[string]int32)(nil), "pb.Node.CpuEntry")
	proto.RegisterMapType((map[string]int32)(nil), "pb.Node.InitCpuEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Node.LabelsEntry")
	proto.RegisterType((*Nodes)(nil), "pb.Nodes")
	proto.RegisterType((*NodeAvailable)(nil), "pb.NodeAvailable")
	proto.RegisterType((*Container)(nil), "pb.Container")
	proto.RegisterMapType((map[string]int32)(nil), "pb.Container.CpuEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Container.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Container.PublishEntry")
	proto.RegisterType((*ContainerDeployedOptions)(nil), "pb.ContainerDeployedOptions")
	proto.RegisterType((*Containers)(nil), "pb.Containers")
	proto.RegisterType((*ContainerID)(nil), "pb.ContainerID")
	proto.RegisterType((*ContainerIDs)(nil), "pb.ContainerIDs")
	proto.RegisterType((*RemoveContainerOptions)(nil), "pb.RemoveContainerOptions")
	proto.RegisterType((*ReallocOptions)(nil), "pb.ReallocOptions")
	proto.RegisterType((*AddPodOptions)(nil), "pb.AddPodOptions")
	proto.RegisterType((*RemovePodOptions)(nil), "pb.RemovePodOptions")
	proto.RegisterType((*GetPodOptions)(nil), "pb.GetPodOptions")
	proto.RegisterType((*AddNodeOptions)(nil), "pb.AddNodeOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.AddNodeOptions.LabelsEntry")
	proto.RegisterType((*RemoveNodeOptions)(nil), "pb.RemoveNodeOptions")
	proto.RegisterType((*GetNodeOptions)(nil), "pb.GetNodeOptions")
	proto.RegisterType((*ListNodesOptions)(nil), "pb.ListNodesOptions")
	proto.RegisterType((*Build)(nil), "pb.Build")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.ArgsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.ArtifactsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.CacheEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.EnvsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Build.LabelsEntry")
	proto.RegisterType((*Builds)(nil), "pb.Builds")
	proto.RegisterMapType((map[string]*Build)(nil), "pb.Builds.BuildsEntry")
	proto.RegisterType((*BuildImageOptions)(nil), "pb.BuildImageOptions")
	proto.RegisterType((*HookOptions)(nil), "pb.HookOptions")
	proto.RegisterType((*HealthCheckOptions)(nil), "pb.HealthCheckOptions")
	proto.RegisterType((*LogOptions)(nil), "pb.LogOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.LogOptions.ConfigEntry")
	proto.RegisterType((*EntrypointOptions)(nil), "pb.EntrypointOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.EntrypointOptions.SysctlsEntry")
	proto.RegisterType((*DeployOptions)(nil), "pb.DeployOptions")
	proto.RegisterMapType((map[string][]byte)(nil), "pb.DeployOptions.DataEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.DeployOptions.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.DeployOptions.NetworksEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.DeployOptions.NodelabelsEntry")
	proto.RegisterType((*ReplaceOptions)(nil), "pb.ReplaceOptions")
	proto.RegisterMapType((map[string]string)(nil), "pb.ReplaceOptions.CopyEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.ReplaceOptions.FilterLabelsEntry")
	proto.RegisterType((*CacheImageOptions)(nil), "pb.CacheImageOptions")
	proto.RegisterType((*RemoveImageOptions)(nil), "pb.RemoveImageOptions")
	proto.RegisterType((*CopyPaths)(nil), "pb.CopyPaths")
	proto.RegisterType((*CopyOptions)(nil), "pb.CopyOptions")
	proto.RegisterMapType((map[string]*CopyPaths)(nil), "pb.CopyOptions.TargetsEntry")
	proto.RegisterType((*SendOptions)(nil), "pb.SendOptions")
	proto.RegisterMapType((map[string][]byte)(nil), "pb.SendOptions.DataEntry")
	proto.RegisterType((*ErrorDetail)(nil), "pb.ErrorDetail")
	proto.RegisterType((*BuildImageMessage)(nil), "pb.BuildImageMessage")
	proto.RegisterType((*CreateContainerMessage)(nil), "pb.CreateContainerMessage")
	proto.RegisterMapType((map[string]int32)(nil), "pb.CreateContainerMessage.CpuEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.CreateContainerMessage.PublishEntry")
	proto.RegisterType((*ReplaceContainerMessage)(nil), "pb.ReplaceContainerMessage")
	proto.RegisterType((*RunAndWaitMessage)(nil), "pb.RunAndWaitMessage")
	proto.RegisterType((*CacheImageMessage)(nil), "pb.CacheImageMessage")
	proto.RegisterType((*RemoveImageMessage)(nil), "pb.RemoveImageMessage")
	proto.RegisterType((*RemoveContainerMessage)(nil), "pb.RemoveContainerMessage")
	proto.RegisterType((*ReallocResourceMessage)(nil), "pb.ReallocResourceMessage")
	proto.RegisterType((*CopyMessage)(nil), "pb.CopyMessage")
	proto.RegisterType((*SendMessage)(nil), "pb.SendMessage")
	proto.RegisterType((*RunAndWaitOptions)(nil), "pb.RunAndWaitOptions")
	proto.RegisterType((*ControlContainerOptions)(nil), "pb.ControlContainerOptions")
	proto.RegisterType((*ControlContainerMessage)(nil), "pb.ControlContainerMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreRPCClient is the client API for CoreRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreRPCClient interface {
	ListPods(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pods, error)
	AddPod(ctx context.Context, in *AddPodOptions, opts ...grpc.CallOption) (*Pod, error)
	RemovePod(ctx context.Context, in *RemovePodOptions, opts ...grpc.CallOption) (*Empty, error)
	GetPod(ctx context.Context, in *GetPodOptions, opts ...grpc.CallOption) (*Pod, error)
	GetPodResource(ctx context.Context, in *GetPodOptions, opts ...grpc.CallOption) (*PodResource, error)
	AddNode(ctx context.Context, in *AddNodeOptions, opts ...grpc.CallOption) (*Node, error)
	RemoveNode(ctx context.Context, in *RemoveNodeOptions, opts ...grpc.CallOption) (*Pod, error)
	SetNodeAvailable(ctx context.Context, in *NodeAvailable, opts ...grpc.CallOption) (*Node, error)
	GetNode(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Node, error)
	GetContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*Container, error)
	GetContainers(ctx context.Context, in *ContainerIDs, opts ...grpc.CallOption) (*Containers, error)
	GetNodeByName(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Node, error)
	ListPodNodes(ctx context.Context, in *ListNodesOptions, opts ...grpc.CallOption) (*Nodes, error)
	ListNetworks(ctx context.Context, in *ListNetworkOptions, opts ...grpc.CallOption) (*Networks, error)
	ListContainers(ctx context.Context, in *ListContainersOptions, opts ...grpc.CallOption) (*Containers, error)
	ListNodeContainers(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Containers, error)
	ContainerDeployed(ctx context.Context, in *ContainerDeployedOptions, opts ...grpc.CallOption) (*Empty, error)
	Copy(ctx context.Context, in *CopyOptions, opts ...grpc.CallOption) (CoreRPC_CopyClient, error)
	Send(ctx context.Context, in *SendOptions, opts ...grpc.CallOption) (CoreRPC_SendClient, error)
	BuildImage(ctx context.Context, in *BuildImageOptions, opts ...grpc.CallOption) (CoreRPC_BuildImageClient, error)
	CacheImage(ctx context.Context, in *CacheImageOptions, opts ...grpc.CallOption) (CoreRPC_CacheImageClient, error)
	RemoveImage(ctx context.Context, in *RemoveImageOptions, opts ...grpc.CallOption) (CoreRPC_RemoveImageClient, error)
	DeployStatus(ctx context.Context, in *DeployStatusOptions, opts ...grpc.CallOption) (CoreRPC_DeployStatusClient, error)
	RunAndWait(ctx context.Context, opts ...grpc.CallOption) (CoreRPC_RunAndWaitClient, error)
	CreateContainer(ctx context.Context, in *DeployOptions, opts ...grpc.CallOption) (CoreRPC_CreateContainerClient, error)
	ReplaceContainer(ctx context.Context, in *ReplaceOptions, opts ...grpc.CallOption) (CoreRPC_ReplaceContainerClient, error)
	RemoveContainer(ctx context.Context, in *RemoveContainerOptions, opts ...grpc.CallOption) (CoreRPC_RemoveContainerClient, error)
	ControlContainer(ctx context.Context, in *ControlContainerOptions, opts ...grpc.CallOption) (CoreRPC_ControlContainerClient, error)
	ReallocResource(ctx context.Context, in *ReallocOptions, opts ...grpc.CallOption) (CoreRPC_ReallocResourceClient, error)
}

type coreRPCClient struct {
	cc *grpc.ClientConn
}

func NewCoreRPCClient(cc *grpc.ClientConn) CoreRPCClient {
	return &coreRPCClient{cc}
}

func (c *coreRPCClient) ListPods(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pods, error) {
	out := new(Pods)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListPods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) AddPod(ctx context.Context, in *AddPodOptions, opts ...grpc.CallOption) (*Pod, error) {
	out := new(Pod)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/AddPod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) RemovePod(ctx context.Context, in *RemovePodOptions, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/RemovePod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetPod(ctx context.Context, in *GetPodOptions, opts ...grpc.CallOption) (*Pod, error) {
	out := new(Pod)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetPod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetPodResource(ctx context.Context, in *GetPodOptions, opts ...grpc.CallOption) (*PodResource, error) {
	out := new(PodResource)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetPodResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) AddNode(ctx context.Context, in *AddNodeOptions, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/AddNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) RemoveNode(ctx context.Context, in *RemoveNodeOptions, opts ...grpc.CallOption) (*Pod, error) {
	out := new(Pod)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/RemoveNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) SetNodeAvailable(ctx context.Context, in *NodeAvailable, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/SetNodeAvailable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetNode(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*Container, error) {
	out := new(Container)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetContainers(ctx context.Context, in *ContainerIDs, opts ...grpc.CallOption) (*Containers, error) {
	out := new(Containers)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetContainers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) GetNodeByName(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/GetNodeByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ListPodNodes(ctx context.Context, in *ListNodesOptions, opts ...grpc.CallOption) (*Nodes, error) {
	out := new(Nodes)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListPodNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ListNetworks(ctx context.Context, in *ListNetworkOptions, opts ...grpc.CallOption) (*Networks, error) {
	out := new(Networks)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ListContainers(ctx context.Context, in *ListContainersOptions, opts ...grpc.CallOption) (*Containers, error) {
	out := new(Containers)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListContainers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ListNodeContainers(ctx context.Context, in *GetNodeOptions, opts ...grpc.CallOption) (*Containers, error) {
	out := new(Containers)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ListNodeContainers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) ContainerDeployed(ctx context.Context, in *ContainerDeployedOptions, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.CoreRPC/ContainerDeployed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreRPCClient) Copy(ctx context.Context, in *CopyOptions, opts ...grpc.CallOption) (CoreRPC_CopyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[0], "/pb.CoreRPC/Copy", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCCopyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_CopyClient interface {
	Recv() (*CopyMessage, error)
	grpc.ClientStream
}

type coreRPCCopyClient struct {
	grpc.ClientStream
}

func (x *coreRPCCopyClient) Recv() (*CopyMessage, error) {
	m := new(CopyMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) Send(ctx context.Context, in *SendOptions, opts ...grpc.CallOption) (CoreRPC_SendClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[1], "/pb.CoreRPC/Send", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCSendClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_SendClient interface {
	Recv() (*SendMessage, error)
	grpc.ClientStream
}

type coreRPCSendClient struct {
	grpc.ClientStream
}

func (x *coreRPCSendClient) Recv() (*SendMessage, error) {
	m := new(SendMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) BuildImage(ctx context.Context, in *BuildImageOptions, opts ...grpc.CallOption) (CoreRPC_BuildImageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[2], "/pb.CoreRPC/BuildImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCBuildImageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_BuildImageClient interface {
	Recv() (*BuildImageMessage, error)
	grpc.ClientStream
}

type coreRPCBuildImageClient struct {
	grpc.ClientStream
}

func (x *coreRPCBuildImageClient) Recv() (*BuildImageMessage, error) {
	m := new(BuildImageMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) CacheImage(ctx context.Context, in *CacheImageOptions, opts ...grpc.CallOption) (CoreRPC_CacheImageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[3], "/pb.CoreRPC/CacheImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCCacheImageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_CacheImageClient interface {
	Recv() (*CacheImageMessage, error)
	grpc.ClientStream
}

type coreRPCCacheImageClient struct {
	grpc.ClientStream
}

func (x *coreRPCCacheImageClient) Recv() (*CacheImageMessage, error) {
	m := new(CacheImageMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) RemoveImage(ctx context.Context, in *RemoveImageOptions, opts ...grpc.CallOption) (CoreRPC_RemoveImageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[4], "/pb.CoreRPC/RemoveImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCRemoveImageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_RemoveImageClient interface {
	Recv() (*RemoveImageMessage, error)
	grpc.ClientStream
}

type coreRPCRemoveImageClient struct {
	grpc.ClientStream
}

func (x *coreRPCRemoveImageClient) Recv() (*RemoveImageMessage, error) {
	m := new(RemoveImageMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) DeployStatus(ctx context.Context, in *DeployStatusOptions, opts ...grpc.CallOption) (CoreRPC_DeployStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[5], "/pb.CoreRPC/DeployStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCDeployStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_DeployStatusClient interface {
	Recv() (*DeployStatusMessage, error)
	grpc.ClientStream
}

type coreRPCDeployStatusClient struct {
	grpc.ClientStream
}

func (x *coreRPCDeployStatusClient) Recv() (*DeployStatusMessage, error) {
	m := new(DeployStatusMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) RunAndWait(ctx context.Context, opts ...grpc.CallOption) (CoreRPC_RunAndWaitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[6], "/pb.CoreRPC/RunAndWait", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCRunAndWaitClient{stream}
	return x, nil
}

type CoreRPC_RunAndWaitClient interface {
	Send(*RunAndWaitOptions) error
	Recv() (*RunAndWaitMessage, error)
	grpc.ClientStream
}

type coreRPCRunAndWaitClient struct {
	grpc.ClientStream
}

func (x *coreRPCRunAndWaitClient) Send(m *RunAndWaitOptions) error {
	return x.ClientStream.SendMsg(m)
}

func (x *coreRPCRunAndWaitClient) Recv() (*RunAndWaitMessage, error) {
	m := new(RunAndWaitMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) CreateContainer(ctx context.Context, in *DeployOptions, opts ...grpc.CallOption) (CoreRPC_CreateContainerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[7], "/pb.CoreRPC/CreateContainer", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCCreateContainerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_CreateContainerClient interface {
	Recv() (*CreateContainerMessage, error)
	grpc.ClientStream
}

type coreRPCCreateContainerClient struct {
	grpc.ClientStream
}

func (x *coreRPCCreateContainerClient) Recv() (*CreateContainerMessage, error) {
	m := new(CreateContainerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ReplaceContainer(ctx context.Context, in *ReplaceOptions, opts ...grpc.CallOption) (CoreRPC_ReplaceContainerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[8], "/pb.CoreRPC/ReplaceContainer", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCReplaceContainerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_ReplaceContainerClient interface {
	Recv() (*ReplaceContainerMessage, error)
	grpc.ClientStream
}

type coreRPCReplaceContainerClient struct {
	grpc.ClientStream
}

func (x *coreRPCReplaceContainerClient) Recv() (*ReplaceContainerMessage, error) {
	m := new(ReplaceContainerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) RemoveContainer(ctx context.Context, in *RemoveContainerOptions, opts ...grpc.CallOption) (CoreRPC_RemoveContainerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[9], "/pb.CoreRPC/RemoveContainer", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCRemoveContainerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_RemoveContainerClient interface {
	Recv() (*RemoveContainerMessage, error)
	grpc.ClientStream
}

type coreRPCRemoveContainerClient struct {
	grpc.ClientStream
}

func (x *coreRPCRemoveContainerClient) Recv() (*RemoveContainerMessage, error) {
	m := new(RemoveContainerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ControlContainer(ctx context.Context, in *ControlContainerOptions, opts ...grpc.CallOption) (CoreRPC_ControlContainerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[10], "/pb.CoreRPC/ControlContainer", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCControlContainerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_ControlContainerClient interface {
	Recv() (*ControlContainerMessage, error)
	grpc.ClientStream
}

type coreRPCControlContainerClient struct {
	grpc.ClientStream
}

func (x *coreRPCControlContainerClient) Recv() (*ControlContainerMessage, error) {
	m := new(ControlContainerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreRPCClient) ReallocResource(ctx context.Context, in *ReallocOptions, opts ...grpc.CallOption) (CoreRPC_ReallocResourceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreRPC_serviceDesc.Streams[11], "/pb.CoreRPC/ReallocResource", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreRPCReallocResourceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreRPC_ReallocResourceClient interface {
	Recv() (*ReallocResourceMessage, error)
	grpc.ClientStream
}

type coreRPCReallocResourceClient struct {
	grpc.ClientStream
}

func (x *coreRPCReallocResourceClient) Recv() (*ReallocResourceMessage, error) {
	m := new(ReallocResourceMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CoreRPCServer is the server API for CoreRPC service.
type CoreRPCServer interface {
	ListPods(context.Context, *Empty) (*Pods, error)
	AddPod(context.Context, *AddPodOptions) (*Pod, error)
	RemovePod(context.Context, *RemovePodOptions) (*Empty, error)
	GetPod(context.Context, *GetPodOptions) (*Pod, error)
	GetPodResource(context.Context, *GetPodOptions) (*PodResource, error)
	AddNode(context.Context, *AddNodeOptions) (*Node, error)
	RemoveNode(context.Context, *RemoveNodeOptions) (*Pod, error)
	SetNodeAvailable(context.Context, *NodeAvailable) (*Node, error)
	GetNode(context.Context, *GetNodeOptions) (*Node, error)
	GetContainer(context.Context, *ContainerID) (*Container, error)
	GetContainers(context.Context, *ContainerIDs) (*Containers, error)
	GetNodeByName(context.Context, *GetNodeOptions) (*Node, error)
	ListPodNodes(context.Context, *ListNodesOptions) (*Nodes, error)
	ListNetworks(context.Context, *ListNetworkOptions) (*Networks, error)
	ListContainers(context.Context, *ListContainersOptions) (*Containers, error)
	ListNodeContainers(context.Context, *GetNodeOptions) (*Containers, error)
	ContainerDeployed(context.Context, *ContainerDeployedOptions) (*Empty, error)
	Copy(*CopyOptions, CoreRPC_CopyServer) error
	Send(*SendOptions, CoreRPC_SendServer) error
	BuildImage(*BuildImageOptions, CoreRPC_BuildImageServer) error
	CacheImage(*CacheImageOptions, CoreRPC_CacheImageServer) error
	RemoveImage(*RemoveImageOptions, CoreRPC_RemoveImageServer) error
	DeployStatus(*DeployStatusOptions, CoreRPC_DeployStatusServer) error
	RunAndWait(CoreRPC_RunAndWaitServer) error
	CreateContainer(*DeployOptions, CoreRPC_CreateContainerServer) error
	ReplaceContainer(*ReplaceOptions, CoreRPC_ReplaceContainerServer) error
	RemoveContainer(*RemoveContainerOptions, CoreRPC_RemoveContainerServer) error
	ControlContainer(*ControlContainerOptions, CoreRPC_ControlContainerServer) error
	ReallocResource(*ReallocOptions, CoreRPC_ReallocResourceServer) error
}

func RegisterCoreRPCServer(s *grpc.Server, srv CoreRPCServer) {
	s.RegisterService(&_CoreRPC_serviceDesc, srv)
}

func _CoreRPC_ListPods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListPods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListPods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListPods(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_AddPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPodOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).AddPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/AddPod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).AddPod(ctx, req.(*AddPodOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_RemovePod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePodOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).RemovePod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/RemovePod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).RemovePod(ctx, req.(*RemovePodOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPodOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetPod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetPod(ctx, req.(*GetPodOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetPodResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPodOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetPodResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetPodResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetPodResource(ctx, req.(*GetPodOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_AddNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).AddNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/AddNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).AddNode(ctx, req.(*AddNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_RemoveNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).RemoveNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/RemoveNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).RemoveNode(ctx, req.(*RemoveNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_SetNodeAvailable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeAvailable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).SetNodeAvailable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/SetNodeAvailable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).SetNodeAvailable(ctx, req.(*NodeAvailable))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetNode(ctx, req.(*GetNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetContainer(ctx, req.(*ContainerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerIDs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetContainers(ctx, req.(*ContainerIDs))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_GetNodeByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).GetNodeByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/GetNodeByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).GetNodeByName(ctx, req.(*GetNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ListPodNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListPodNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListPodNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListPodNodes(ctx, req.(*ListNodesOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ListNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNetworkOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListNetworks(ctx, req.(*ListNetworkOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ListContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContainersOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListContainers(ctx, req.(*ListContainersOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ListNodeContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ListNodeContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ListNodeContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ListNodeContainers(ctx, req.(*GetNodeOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_ContainerDeployed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerDeployedOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRPCServer).ContainerDeployed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CoreRPC/ContainerDeployed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRPCServer).ContainerDeployed(ctx, req.(*ContainerDeployedOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreRPC_Copy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CopyOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).Copy(m, &coreRPCCopyServer{stream})
}

type CoreRPC_CopyServer interface {
	Send(*CopyMessage) error
	grpc.ServerStream
}

type coreRPCCopyServer struct {
	grpc.ServerStream
}

func (x *coreRPCCopyServer) Send(m *CopyMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_Send_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SendOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).Send(m, &coreRPCSendServer{stream})
}

type CoreRPC_SendServer interface {
	Send(*SendMessage) error
	grpc.ServerStream
}

type coreRPCSendServer struct {
	grpc.ServerStream
}

func (x *coreRPCSendServer) Send(m *SendMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_BuildImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BuildImageOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).BuildImage(m, &coreRPCBuildImageServer{stream})
}

type CoreRPC_BuildImageServer interface {
	Send(*BuildImageMessage) error
	grpc.ServerStream
}

type coreRPCBuildImageServer struct {
	grpc.ServerStream
}

func (x *coreRPCBuildImageServer) Send(m *BuildImageMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_CacheImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CacheImageOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).CacheImage(m, &coreRPCCacheImageServer{stream})
}

type CoreRPC_CacheImageServer interface {
	Send(*CacheImageMessage) error
	grpc.ServerStream
}

type coreRPCCacheImageServer struct {
	grpc.ServerStream
}

func (x *coreRPCCacheImageServer) Send(m *CacheImageMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_RemoveImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RemoveImageOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).RemoveImage(m, &coreRPCRemoveImageServer{stream})
}

type CoreRPC_RemoveImageServer interface {
	Send(*RemoveImageMessage) error
	grpc.ServerStream
}

type coreRPCRemoveImageServer struct {
	grpc.ServerStream
}

func (x *coreRPCRemoveImageServer) Send(m *RemoveImageMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_DeployStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeployStatusOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).DeployStatus(m, &coreRPCDeployStatusServer{stream})
}

type CoreRPC_DeployStatusServer interface {
	Send(*DeployStatusMessage) error
	grpc.ServerStream
}

type coreRPCDeployStatusServer struct {
	grpc.ServerStream
}

func (x *coreRPCDeployStatusServer) Send(m *DeployStatusMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_RunAndWait_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CoreRPCServer).RunAndWait(&coreRPCRunAndWaitServer{stream})
}

type CoreRPC_RunAndWaitServer interface {
	Send(*RunAndWaitMessage) error
	Recv() (*RunAndWaitOptions, error)
	grpc.ServerStream
}

type coreRPCRunAndWaitServer struct {
	grpc.ServerStream
}

func (x *coreRPCRunAndWaitServer) Send(m *RunAndWaitMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *coreRPCRunAndWaitServer) Recv() (*RunAndWaitOptions, error) {
	m := new(RunAndWaitOptions)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CoreRPC_CreateContainer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeployOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).CreateContainer(m, &coreRPCCreateContainerServer{stream})
}

type CoreRPC_CreateContainerServer interface {
	Send(*CreateContainerMessage) error
	grpc.ServerStream
}

type coreRPCCreateContainerServer struct {
	grpc.ServerStream
}

func (x *coreRPCCreateContainerServer) Send(m *CreateContainerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_ReplaceContainer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReplaceOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).ReplaceContainer(m, &coreRPCReplaceContainerServer{stream})
}

type CoreRPC_ReplaceContainerServer interface {
	Send(*ReplaceContainerMessage) error
	grpc.ServerStream
}

type coreRPCReplaceContainerServer struct {
	grpc.ServerStream
}

func (x *coreRPCReplaceContainerServer) Send(m *ReplaceContainerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_RemoveContainer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RemoveContainerOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).RemoveContainer(m, &coreRPCRemoveContainerServer{stream})
}

type CoreRPC_RemoveContainerServer interface {
	Send(*RemoveContainerMessage) error
	grpc.ServerStream
}

type coreRPCRemoveContainerServer struct {
	grpc.ServerStream
}

func (x *coreRPCRemoveContainerServer) Send(m *RemoveContainerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_ControlContainer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ControlContainerOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).ControlContainer(m, &coreRPCControlContainerServer{stream})
}

type CoreRPC_ControlContainerServer interface {
	Send(*ControlContainerMessage) error
	grpc.ServerStream
}

type coreRPCControlContainerServer struct {
	grpc.ServerStream
}

func (x *coreRPCControlContainerServer) Send(m *ControlContainerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreRPC_ReallocResource_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReallocOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreRPCServer).ReallocResource(m, &coreRPCReallocResourceServer{stream})
}

type CoreRPC_ReallocResourceServer interface {
	Send(*ReallocResourceMessage) error
	grpc.ServerStream
}

type coreRPCReallocResourceServer struct {
	grpc.ServerStream
}

func (x *coreRPCReallocResourceServer) Send(m *ReallocResourceMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _CoreRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CoreRPC",
	HandlerType: (*CoreRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPods",
			Handler:    _CoreRPC_ListPods_Handler,
		},
		{
			MethodName: "AddPod",
			Handler:    _CoreRPC_AddPod_Handler,
		},
		{
			MethodName: "RemovePod",
			Handler:    _CoreRPC_RemovePod_Handler,
		},
		{
			MethodName: "GetPod",
			Handler:    _CoreRPC_GetPod_Handler,
		},
		{
			MethodName: "GetPodResource",
			Handler:    _CoreRPC_GetPodResource_Handler,
		},
		{
			MethodName: "AddNode",
			Handler:    _CoreRPC_AddNode_Handler,
		},
		{
			MethodName: "RemoveNode",
			Handler:    _CoreRPC_RemoveNode_Handler,
		},
		{
			MethodName: "SetNodeAvailable",
			Handler:    _CoreRPC_SetNodeAvailable_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _CoreRPC_GetNode_Handler,
		},
		{
			MethodName: "GetContainer",
			Handler:    _CoreRPC_GetContainer_Handler,
		},
		{
			MethodName: "GetContainers",
			Handler:    _CoreRPC_GetContainers_Handler,
		},
		{
			MethodName: "GetNodeByName",
			Handler:    _CoreRPC_GetNodeByName_Handler,
		},
		{
			MethodName: "ListPodNodes",
			Handler:    _CoreRPC_ListPodNodes_Handler,
		},
		{
			MethodName: "ListNetworks",
			Handler:    _CoreRPC_ListNetworks_Handler,
		},
		{
			MethodName: "ListContainers",
			Handler:    _CoreRPC_ListContainers_Handler,
		},
		{
			MethodName: "ListNodeContainers",
			Handler:    _CoreRPC_ListNodeContainers_Handler,
		},
		{
			MethodName: "ContainerDeployed",
			Handler:    _CoreRPC_ContainerDeployed_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Copy",
			Handler:       _CoreRPC_Copy_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Send",
			Handler:       _CoreRPC_Send_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "BuildImage",
			Handler:       _CoreRPC_BuildImage_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CacheImage",
			Handler:       _CoreRPC_CacheImage_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RemoveImage",
			Handler:       _CoreRPC_RemoveImage_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DeployStatus",
			Handler:       _CoreRPC_DeployStatus_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RunAndWait",
			Handler:       _CoreRPC_RunAndWait_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "CreateContainer",
			Handler:       _CoreRPC_CreateContainer_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ReplaceContainer",
			Handler:       _CoreRPC_ReplaceContainer_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RemoveContainer",
			Handler:       _CoreRPC_RemoveContainer_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ControlContainer",
			Handler:       _CoreRPC_ControlContainer_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ReallocResource",
			Handler:       _CoreRPC_ReallocResource_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "core.proto",
}

func init() { proto.RegisterFile("core.proto", fileDescriptor_core_a9f47d9e6d3a6e1a) }

var fileDescriptor_core_a9f47d9e6d3a6e1a = []byte{
	// 3191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x3a, 0x4b, 0x73, 0xdc, 0xc6,
	0xd1, 0xda, 0x17, 0x77, 0xb7, 0x77, 0x49, 0x91, 0x63, 0x4a, 0x82, 0x56, 0xb2, 0x1e, 0xe0, 0x67,
	0x4b, 0x76, 0x59, 0xb4, 0x2c, 0x7d, 0x96, 0x1c, 0xcb, 0x2f, 0x9a, 0x94, 0x65, 0xa6, 0x24, 0x87,
	0x01, 0xf3, 0xb8, 0x85, 0x01, 0x81, 0xe1, 0x12, 0xa5, 0xdd, 0x05, 0x02, 0xcc, 0x32, 0xe1, 0x2f,
	0x48, 0x0e, 0xa9, 0x4a, 0x0e, 0x49, 0x7c, 0xcc, 0x31, 0x87, 0x1c, 0x72, 0xce, 0x1f, 0xc8, 0x25,
	0x95, 0x4b, 0xfe, 0x44, 0x7e, 0x43, 0x6e, 0xa9, 0xee, 0x79, 0x60, 0x80, 0xc5, 0x52, 0x5e, 0x39,
	0x76, 0x4e, 0x98, 0xe9, 0xe9, 0xee, 0xe9, 0x99, 0xee, 0xe9, 0xee, 0xe9, 0x01, 0x40, 0x10, 0xa7,
	0x7c, 0x33, 0x49, 0x63, 0x11, 0xb3, 0x7a, 0x72, 0xe8, 0xb6, 0xa1, 0xf5, 0x78, 0x9c, 0x88, 0x53,
	0xf7, 0x5f, 0x35, 0xb8, 0xf0, 0x34, 0xca, 0xc4, 0x76, 0x3c, 0x11, 0x7e, 0x34, 0xe1, 0x69, 0xf6,
	0xbd, 0x44, 0x44, 0xf1, 0x24, 0x63, 0x0e, 0xb4, 0xfd, 0x24, 0x99, 0xf8, 0x63, 0xee, 0xd4, 0x6e,
	0xd4, 0x6e, 0x77, 0x3d, 0xdd, 0x65, 0xd7, 0x00, 0xf8, 0x44, 0xa4, 0xa7, 0x49, 0x1c, 0x4d, 0x84,
	0x53, 0xa7, 0x41, 0x0b, 0xc2, 0x06, 0xd0, 0x99, 0xc4, 0x21, 0x27, 0xd2, 0x06, 0x8d, 0x9a, 0x3e,
	0xfb, 0x10, 0x96, 0x46, 0xfe, 0x21, 0x1f, 0x65, 0x4e, 0xf3, 0x46, 0xe3, 0x76, 0xef, 0xde, 0x6b,
	0x9b, 0xc9, 0xe1, 0x66, 0xa5, 0x00, 0x9b, 0x4f, 0x09, 0xef, 0x31, 0xf2, 0xf5, 0x14, 0xd1, 0xe0,
	0x3b, 0xd0, 0xb3, 0xc0, 0x6c, 0x15, 0x1a, 0xcf, 0xf9, 0xa9, 0x92, 0x0f, 0x9b, 0x6c, 0x1d, 0x5a,
	0x27, 0xfe, 0x68, 0xca, 0x95, 0x58, 0xb2, 0xf3, 0x7e, 0xfd, 0xbd, 0x9a, 0xfb, 0x1c, 0x5e, 0xd9,
	0xe1, 0xc9, 0x28, 0x3e, 0xdd, 0x17, 0xbe, 0x98, 0x7e, 0xb3, 0xcb, 0x74, 0xff, 0x54, 0x2b, 0xce,
	0xf6, 0x8c, 0x67, 0x99, 0x3f, 0xe4, 0xec, 0x22, 0x2c, 0xf9, 0x01, 0x4e, 0xac, 0x26, 0x53, 0x3d,
	0x5b, 0x8a, 0xfa, 0x59, 0x52, 0x34, 0xce, 0x94, 0xa2, 0x59, 0xda, 0xec, 0x15, 0xa8, 0x47, 0xa1,
	0xd3, 0x22, 0x68, 0x3d, 0x0a, 0x19, 0x83, 0x66, 0xe8, 0x0b, 0xdf, 0x59, 0xba, 0x51, 0xbb, 0xdd,
	0xf7, 0xa8, 0xed, 0x6e, 0x43, 0x63, 0x2f, 0xa6, 0x21, 0x6b, 0x0f, 0xa8, 0x4d, 0xe8, 0x3c, 0x0b,
	0x94, 0x44, 0xd4, 0xc6, 0xfd, 0x3d, 0xf2, 0x4f, 0xe2, 0x54, 0x49, 0x22, 0x3b, 0xee, 0x06, 0x34,
	0xf7, 0xe2, 0x30, 0x63, 0x57, 0xa0, 0x99, 0xc4, 0x61, 0xe6, 0xd4, 0x48, 0xb7, 0x6d, 0xd4, 0xed,
	0x5e, 0x1c, 0x7a, 0x04, 0x74, 0xff, 0xd1, 0x80, 0x1e, 0xf6, 0x78, 0x16, 0x4f, 0xd3, 0x80, 0x57,
	0x4e, 0xf9, 0x26, 0x34, 0x82, 0x64, 0xea, 0xd4, 0x89, 0xde, 0xd1, 0xf4, 0x8a, 0x62, 0x73, 0x3b,
	0x99, 0x4a, 0x73, 0x40, 0x24, 0x76, 0x1f, 0x96, 0xc6, 0x7c, 0x1c, 0xa7, 0xa7, 0x4e, 0x83, 0xd0,
	0xaf, 0x94, 0xd1, 0x9f, 0xd1, 0xa8, 0x32, 0x20, 0x89, 0xca, 0xee, 0x40, 0x33, 0x8c, 0x8e, 0x8e,
	0x94, 0xf5, 0x5d, 0x2e, 0x93, 0xec, 0x44, 0x47, 0x47, 0x92, 0x80, 0xd0, 0x70, 0x8e, 0x90, 0x0b,
	0x3f, 0x1a, 0x39, 0xad, 0xea, 0x39, 0x76, 0x68, 0x54, 0xcd, 0x21, 0x51, 0x07, 0x0f, 0xa0, 0xa3,
	0x25, 0x7d, 0x91, 0x85, 0xd6, 0x2c, 0x0b, 0x45, 0xe3, 0xb6, 0x44, 0x5e, 0x88, 0xf4, 0x21, 0x74,
	0x8d, 0xe8, 0x2f, 0x22, 0xec, 0x94, 0xe6, 0xb4, 0x96, 0xb0, 0xd0, 0x81, 0xfa, 0x0c, 0x18, 0x1e,
	0xdc, 0x2f, 0xb8, 0xf8, 0x79, 0x9c, 0x3e, 0xb7, 0xce, 0x53, 0x12, 0x87, 0xf6, 0x79, 0x52, 0x5d,
	0xb4, 0xfd, 0x30, 0x8d, 0x4e, 0x78, 0xaa, 0x58, 0xa9, 0x9e, 0xfb, 0x10, 0xda, 0x8a, 0x47, 0xa5,
	0x49, 0x38, 0xd0, 0xce, 0xa6, 0x87, 0x13, 0x2e, 0x32, 0x32, 0x8b, 0xae, 0xa7, 0xbb, 0xee, 0x7d,
	0xe8, 0x28, 0xc2, 0x8c, 0xdd, 0x82, 0xce, 0x44, 0xb5, 0x95, 0xf5, 0xf5, 0x50, 0x55, 0x6a, 0xdc,
	0x33, 0x83, 0xee, 0x9f, 0x9b, 0xd0, 0xfc, 0x22, 0x0e, 0xab, 0xcd, 0x6f, 0x00, 0x1d, 0x3e, 0x09,
	0xed, 0x03, 0x6f, 0xfa, 0xf6, 0xc2, 0x1a, 0xc5, 0x85, 0x6d, 0x48, 0xa3, 0x95, 0x26, 0xb5, 0x46,
	0xd3, 0xc6, 0x61, 0xd9, 0x5a, 0x2f, 0x43, 0x27, 0x48, 0xa6, 0x07, 0xd3, 0x8c, 0xcb, 0x13, 0x59,
	0xf3, 0xda, 0x41, 0x32, 0xfd, 0x61, 0xc6, 0x43, 0xdc, 0x18, 0x65, 0xc8, 0x78, 0x30, 0x1b, 0xc6,
	0x56, 0xaf, 0x43, 0x4f, 0xb6, 0x24, 0x55, 0x9b, 0x06, 0x41, 0x82, 0x88, 0xf0, 0x2a, 0x74, 0xfd,
	0x13, 0x3f, 0x1a, 0xf9, 0x87, 0x23, 0xee, 0x74, 0x48, 0xb5, 0x39, 0x80, 0xbd, 0x65, 0x5c, 0x6d,
	0x97, 0x24, 0x5b, 0x37, 0x92, 0x55, 0x78, 0x56, 0x9c, 0x2c, 0x9a, 0x44, 0xe2, 0x40, 0x49, 0x02,
	0x72, 0x32, 0x04, 0x49, 0x9b, 0x64, 0x77, 0xa1, 0x43, 0x08, 0xb8, 0xd4, 0x1e, 0x31, 0xbc, 0x60,
	0x18, 0xee, 0x4e, 0x22, 0x61, 0x96, 0xdb, 0x8e, 0x64, 0x0f, 0x77, 0x38, 0x9a, 0x1c, 0xc5, 0x4e,
	0x5f, 0xee, 0x30, 0xb6, 0x17, 0x39, 0x1b, 0xad, 0x92, 0x9d, 0xbe, 0xa4, 0xe3, 0x1f, 0xbc, 0x0f,
	0x7d, 0x5b, 0xbe, 0x45, 0xa6, 0x75, 0x6f, 0x41, 0x0b, 0x17, 0x98, 0xb1, 0x6b, 0xd0, 0x42, 0xb7,
	0xaa, 0x8d, 0xab, 0xa3, 0x97, 0xee, 0x49, 0xb0, 0x1b, 0xc0, 0x32, 0x76, 0xb7, 0xcc, 0xee, 0xdb,
	0x7e, 0xb9, 0x56, 0xf2, 0xcb, 0x96, 0x29, 0xd5, 0x8b, 0xa6, 0x54, 0xd0, 0x68, 0xa3, 0xa4, 0x51,
	0xf7, 0x6f, 0x4d, 0xe8, 0x9a, 0x38, 0xa9, 0xbc, 0x7b, 0xcd, 0x78, 0xf7, 0xf9, 0x5c, 0xcf, 0x0a,
	0xc8, 0xfa, 0x18, 0x34, 0xad, 0x63, 0x70, 0x5b, 0x1a, 0xb4, 0x74, 0x79, 0x17, 0x71, 0xa9, 0x66,
	0xd6, 0x92, 0x55, 0xaf, 0x43, 0xeb, 0x67, 0xd3, 0x58, 0x85, 0x94, 0x9a, 0x27, 0x3b, 0x96, 0x41,
	0xb7, 0x0b, 0x06, 0x7d, 0x0d, 0x20, 0x49, 0xa3, 0x93, 0x68, 0xc4, 0x87, 0x3c, 0x54, 0x06, 0x6b,
	0x41, 0xd8, 0x3b, 0x25, 0x8b, 0xbd, 0x5c, 0x9c, 0xba, 0xca, 0x6c, 0xff, 0x1f, 0xda, 0xc9, 0xf4,
	0x70, 0x14, 0x65, 0xc7, 0x0e, 0x10, 0xcd, 0xa0, 0x48, 0xb3, 0x27, 0x07, 0x95, 0x65, 0x2a, 0x54,
	0x14, 0x3b, 0x1a, 0xfb, 0x43, 0xee, 0xf4, 0xa4, 0xb1, 0x50, 0x07, 0x37, 0x30, 0x9a, 0x64, 0x09,
	0x0f, 0x04, 0x99, 0x6c, 0xdf, 0xd3, 0x5d, 0x3c, 0x1c, 0x19, 0xc5, 0xf1, 0x03, 0x8a, 0x9f, 0xcb,
	0x34, 0x0a, 0x12, 0xb4, 0xe3, 0x0b, 0xff, 0x7f, 0x64, 0xd6, 0xf6, 0xe2, 0x16, 0x72, 0xdd, 0xbf,
	0xab, 0x81, 0x63, 0xf6, 0x48, 0xe6, 0x29, 0x3c, 0xd4, 0x1e, 0xbc, 0xc2, 0xae, 0xbe, 0x81, 0xdc,
	0x44, 0xe7, 0x22, 0x2d, 0x2b, 0x17, 0x79, 0x04, 0x90, 0xa7, 0x81, 0xec, 0x0e, 0x66, 0xad, 0xba,
	0xa7, 0xce, 0xdd, 0x72, 0x41, 0xbb, 0x9e, 0x85, 0xe0, 0xbe, 0x0a, 0x3d, 0x33, 0xb0, 0xbb, 0x53,
	0x5e, 0x85, 0x7b, 0x03, 0xfa, 0xd6, 0x70, 0x86, 0xdb, 0x15, 0xa9, 0x4c, 0xa5, 0xeb, 0x61, 0xd3,
	0xfd, 0x04, 0x2e, 0x7a, 0x7c, 0x1c, 0x9f, 0x70, 0x83, 0xa7, 0x77, 0x64, 0x06, 0x97, 0xd2, 0xa0,
	0x38, 0x0d, 0x4c, 0x40, 0xa5, 0x8e, 0xfb, 0x19, 0xac, 0x78, 0xdc, 0x1f, 0x8d, 0xe2, 0x60, 0x3e,
	0xe5, 0xaa, 0xce, 0x70, 0xf0, 0xbc, 0xd0, 0x19, 0x5a, 0x85, 0xc6, 0x98, 0x8f, 0x69, 0xfb, 0x1a,
	0x1e, 0x36, 0xdd, 0x67, 0xb0, 0xbc, 0x15, 0x86, 0x7b, 0xb1, 0x51, 0x49, 0x55, 0xac, 0x32, 0x99,
	0x58, 0xdd, 0xca, 0xc4, 0x4c, 0xce, 0xd6, 0xc8, 0x73, 0x36, 0xf7, 0x75, 0x58, 0x95, 0x0b, 0x3b,
	0x9b, 0xa3, 0xbb, 0x01, 0xcb, 0x4f, 0xb8, 0x78, 0x01, 0xd2, 0xdf, 0xeb, 0xb0, 0xb2, 0x15, 0x86,
	0xe8, 0xec, 0x34, 0xda, 0x59, 0xae, 0xee, 0xe5, 0x22, 0xea, 0x0a, 0xd4, 0x03, 0x5f, 0x99, 0x4c,
	0x3d, 0xf0, 0x51, 0x90, 0x80, 0xa7, 0x42, 0xa5, 0xb2, 0xd4, 0xd6, 0xf6, 0xbe, 0x94, 0xdb, 0xbb,
	0xda, 0xda, 0x36, 0x1d, 0x32, 0xed, 0x9e, 0xb2, 0x63, 0x3f, 0x95, 0xc1, 0xb1, 0xe5, 0xc9, 0x8e,
	0xe5, 0x9e, 0xba, 0x05, 0xf7, 0xf4, 0xc0, 0xb8, 0x1f, 0xe9, 0x4a, 0xae, 0xa1, 0xb1, 0x15, 0xd7,
	0xfa, 0xdf, 0xbe, 0x94, 0xec, 0xc2, 0x9a, 0x54, 0xcd, 0x57, 0xdd, 0xcf, 0xb9, 0x4e, 0x1e, 0x8d,
	0xef, 0x09, 0x17, 0x36, 0x9f, 0xf9, 0xa9, 0x98, 0x3d, 0x43, 0xbd, 0x74, 0x75, 0xf9, 0x08, 0x56,
	0x29, 0xad, 0xc3, 0xb0, 0xf6, 0x62, 0x4e, 0xab, 0xd0, 0xf0, 0x47, 0x23, 0x75, 0x0c, 0xb0, 0xe9,
	0xfe, 0xb1, 0x05, 0xad, 0x4f, 0xa7, 0xd1, 0x88, 0xee, 0x14, 0x87, 0x7e, 0x66, 0xcc, 0x07, 0xdb,
	0x08, 0x4b, 0x79, 0x12, 0xeb, 0x3b, 0x05, 0xb6, 0x91, 0xfb, 0x09, 0x4f, 0x33, 0xbc, 0x15, 0x29,
	0x3b, 0x50, 0x5d, 0xe4, 0x1e, 0x46, 0xa9, 0x32, 0x04, 0x6c, 0x62, 0x80, 0xcc, 0xa6, 0x87, 0xe3,
	0x38, 0x9c, 0x8e, 0x38, 0x99, 0x43, 0xc7, 0xcb, 0x01, 0xb8, 0xae, 0x20, 0x1e, 0x8f, 0xfd, 0x49,
	0x98, 0x39, 0x4b, 0x74, 0xe6, 0x4c, 0x9f, 0xdd, 0x82, 0x26, 0x9f, 0x9c, 0x64, 0x4e, 0x9b, 0x74,
	0xfb, 0x0a, 0xea, 0x96, 0xc4, 0xdc, 0x7c, 0x3c, 0x39, 0x51, 0x0a, 0x25, 0x04, 0x44, 0xf4, 0xd3,
	0x61, 0xe6, 0x74, 0xca, 0x88, 0x5b, 0xe9, 0x50, 0x23, 0x22, 0x02, 0xbb, 0x53, 0x0a, 0x57, 0x17,
	0x72, 0xd4, 0xaa, 0x50, 0xf5, 0x00, 0xba, 0x7e, 0x2a, 0xa2, 0x23, 0x3f, 0x10, 0xda, 0xc2, 0x1c,
	0x9b, 0xb9, 0x1a, 0x92, 0x44, 0x39, 0x2a, 0x7b, 0x13, 0x5a, 0x81, 0x1f, 0x1c, 0x73, 0x95, 0x75,
	0xad, 0xe7, 0x34, 0xdb, 0x08, 0x96, 0xf8, 0x12, 0x05, 0xef, 0x01, 0x66, 0x39, 0x0b, 0x45, 0x93,
	0x87, 0xd0, 0x35, 0xcb, 0x5b, 0x88, 0xf0, 0x6b, 0x44, 0xb0, 0x0f, 0x60, 0xa5, 0xb8, 0xea, 0x85,
	0xa8, 0xdf, 0x03, 0xc8, 0xd7, 0xbf, 0xd0, 0xa1, 0xfb, 0x43, 0x0d, 0x96, 0x68, 0x03, 0x33, 0x74,
	0x05, 0x99, 0xf0, 0x87, 0x5c, 0xbb, 0x68, 0xd5, 0x63, 0x9b, 0xb0, 0x74, 0x48, 0x18, 0xea, 0x2a,
	0x7a, 0xd1, 0x6c, 0x7a, 0xa6, 0x3e, 0x4a, 0xb7, 0x12, 0x6b, 0xb0, 0x03, 0x3d, 0x0b, 0x5c, 0x21,
	0xcd, 0x75, 0x5b, 0x9a, 0xde, 0xbd, 0xae, 0xe1, 0x67, 0x0b, 0xf6, 0x65, 0x0d, 0xd6, 0x08, 0xb8,
	0x8b, 0xf9, 0xc8, 0x59, 0xce, 0x9f, 0x41, 0x73, 0x9a, 0x99, 0x9b, 0x14, 0xb5, 0x71, 0xd2, 0x69,
	0x14, 0xd2, 0x11, 0x6a, 0x79, 0xd8, 0x44, 0x2c, 0xe1, 0x0f, 0x65, 0xa9, 0xa5, 0xeb, 0x51, 0x9b,
	0xb9, 0x66, 0x65, 0x2d, 0x92, 0x04, 0xf2, 0x95, 0xe9, 0xd5, 0x20, 0x27, 0xe1, 0xa7, 0xaa, 0x4c,
	0x80, 0x4d, 0x97, 0x43, 0xef, 0xf3, 0x38, 0x36, 0x97, 0xbc, 0xeb, 0xd0, 0xf3, 0x8f, 0x04, 0x4f,
	0x0f, 0x32, 0xe1, 0xa7, 0x42, 0xed, 0x1d, 0x10, 0x68, 0x1f, 0x21, 0x88, 0x70, 0xc8, 0x8f, 0xe2,
	0x94, 0x1f, 0x64, 0x22, 0x4e, 0xd4, 0xc5, 0x0d, 0x24, 0x68, 0x5f, 0xc4, 0x49, 0x1e, 0x40, 0x1b,
	0x76, 0x00, 0x15, 0xc0, 0x3e, 0xe7, 0xfe, 0x48, 0x1c, 0x6f, 0x1f, 0xf3, 0xc0, 0xcc, 0x76, 0x05,
	0xba, 0x22, 0x48, 0x0e, 0x92, 0x38, 0x15, 0x5a, 0x4f, 0x1d, 0x11, 0x24, 0x7b, 0xd8, 0xc7, 0xc1,
	0x63, 0x21, 0xe4, 0xa8, 0xf6, 0x65, 0x08, 0xc0, 0x51, 0xda, 0x92, 0x74, 0xa4, 0xbc, 0x0a, 0x36,
	0x29, 0x92, 0xc4, 0xa1, 0x4c, 0x47, 0x5a, 0x1e, 0xb5, 0xdd, 0xdf, 0xd4, 0x00, 0x9e, 0xc6, 0x43,
	0x6b, 0xbf, 0xc5, 0x69, 0x62, 0xf6, 0x1b, 0xdb, 0xec, 0x1e, 0x2c, 0x05, 0xf1, 0xe4, 0x28, 0x1a,
	0x2a, 0x7b, 0xa0, 0x2c, 0x33, 0xa7, 0xc1, 0x94, 0xe4, 0x28, 0x1a, 0x2a, 0x9b, 0x90, 0x98, 0x78,
	0x32, 0x2c, 0xf0, 0x42, 0x16, 0xfa, 0x97, 0x06, 0xac, 0x3d, 0x36, 0x79, 0xd4, 0x59, 0x86, 0xe0,
	0x40, 0x5b, 0x79, 0x38, 0x1d, 0x0f, 0x54, 0xb7, 0x94, 0x6c, 0x37, 0x66, 0x92, 0xed, 0x59, 0xdf,
	0x7a, 0x03, 0x1a, 0xa3, 0x78, 0xa8, 0xec, 0x62, 0xa5, 0xb8, 0x42, 0x0f, 0x87, 0x28, 0x0e, 0xa8,
	0x6c, 0x5b, 0xba, 0x57, 0x93, 0x51, 0xbf, 0x07, 0xbd, 0x63, 0xd2, 0x5c, 0x80, 0x9a, 0xa3, 0x18,
	0xac, 0x4e, 0xcd, 0xac, 0x42, 0x3d, 0x1b, 0x95, 0x6d, 0x40, 0xf3, 0x38, 0x8e, 0x9f, 0x53, 0x88,
	0xee, 0xdd, 0x3b, 0x4f, 0x24, 0xb9, 0xa9, 0x79, 0x34, 0xc8, 0x5e, 0x83, 0x95, 0x94, 0x93, 0xb1,
	0x1d, 0x24, 0xf1, 0x28, 0x0a, 0x64, 0xe8, 0xee, 0x7a, 0xcb, 0x0a, 0xba, 0x47, 0x40, 0xf6, 0x01,
	0xb4, 0xb3, 0xd3, 0x2c, 0x10, 0x26, 0x84, 0xbb, 0xc8, 0x6e, 0x66, 0x27, 0x37, 0xf7, 0x25, 0x92,
	0xba, 0x15, 0x28, 0x12, 0xcc, 0xa8, 0xed, 0x81, 0x85, 0x34, 0xf6, 0xfb, 0x0e, 0x2c, 0xcb, 0x44,
	0xfa, 0x2c, 0x6d, 0xbd, 0x3b, 0x53, 0x52, 0x54, 0x51, 0x63, 0x46, 0xc4, 0x42, 0x1e, 0x3d, 0x3f,
	0x51, 0x3a, 0x2b, 0xc3, 0x36, 0x97, 0x9c, 0x96, 0x7d, 0xc9, 0x79, 0x15, 0x80, 0xff, 0x42, 0xa4,
	0xfe, 0x01, 0xc5, 0x38, 0x99, 0x3d, 0x75, 0x09, 0x82, 0xfe, 0x1f, 0x8f, 0x53, 0x90, 0x4c, 0x0f,
	0xe4, 0xa5, 0xae, 0x4d, 0x49, 0x6a, 0x27, 0x48, 0xa6, 0xdf, 0x2f, 0xdd, 0xeb, 0x3a, 0x85, 0xc4,
	0x69, 0x1d, 0x5a, 0x41, 0x3c, 0x9d, 0x08, 0x52, 0x4a, 0xcb, 0x93, 0x1d, 0xdc, 0x3e, 0x3e, 0x39,
	0x21, 0x45, 0x74, 0x3d, 0x6c, 0x92, 0xc9, 0x4d, 0x32, 0x8a, 0x63, 0x68, 0x72, 0xd2, 0x91, 0x48,
	0x69, 0x8e, 0xe3, 0x4c, 0x64, 0x4e, 0x5f, 0xfa, 0x09, 0x02, 0x7d, 0x8e, 0x10, 0xca, 0x0d, 0xe2,
	0xd1, 0x74, 0xcc, 0x33, 0x67, 0x59, 0x5a, 0x9c, 0xea, 0xb2, 0x47, 0x56, 0xc5, 0x67, 0x85, 0x94,
	0x7d, 0x1d, 0x77, 0xb2, 0xa0, 0x04, 0x5d, 0xff, 0x51, 0x9a, 0x36, 0x04, 0xec, 0x06, 0xf4, 0x54,
	0x7b, 0x8c, 0xde, 0xe0, 0x3c, 0x6d, 0x83, 0x0d, 0x32, 0x1e, 0x76, 0xd5, 0xf2, 0xb0, 0xeb, 0xd0,
	0x0a, 0xf9, 0xe1, 0x74, 0xe8, 0xac, 0x49, 0xa7, 0x45, 0x1d, 0x4c, 0x49, 0xe2, 0x84, 0x4f, 0xf6,
	0x45, 0x18, 0x4d, 0x1c, 0x26, 0x53, 0x12, 0x03, 0x60, 0xef, 0x9a, 0x24, 0xe1, 0x15, 0x12, 0xf2,
	0xd5, 0x59, 0x21, 0xab, 0x92, 0x85, 0x2d, 0x00, 0x54, 0xa4, 0x22, 0x5d, 0x27, 0xd2, 0x9b, 0x15,
	0xeb, 0x33, 0x38, 0x92, 0xdc, 0x22, 0x62, 0x1b, 0xb0, 0x1c, 0x12, 0xf2, 0xc1, 0x98, 0x8b, 0xe3,
	0x38, 0x74, 0x2e, 0xd0, 0x52, 0xfa, 0x12, 0xf8, 0x8c, 0x60, 0xec, 0x6d, 0x75, 0x0d, 0xbb, 0x98,
	0x97, 0x37, 0x8b, 0x33, 0xe0, 0xf5, 0x56, 0x57, 0x44, 0x7d, 0xe1, 0x53, 0x02, 0x16, 0x1f, 0x89,
	0x51, 0x34, 0x8e, 0x84, 0x73, 0x49, 0x25, 0x60, 0x1a, 0x80, 0xfa, 0xa4, 0x7a, 0xc8, 0x81, 0x1c,
	0x77, 0xc8, 0x1e, 0x48, 0xa8, 0xec, 0x29, 0x42, 0x06, 0x8f, 0x60, 0xb9, 0xa0, 0x93, 0x6f, 0x2b,
	0xd7, 0xf8, 0x10, 0xce, 0x97, 0xf6, 0x6a, 0xd1, 0xf4, 0xc8, 0x6c, 0xc4, 0x8b, 0x08, 0xfb, 0xb6,
	0x5f, 0xf8, 0x55, 0x03, 0xef, 0x84, 0xc9, 0xc8, 0x0f, 0x4c, 0x3c, 0x7f, 0x1b, 0xba, 0xa1, 0xde,
	0x62, 0x62, 0xa2, 0x8a, 0x86, 0x85, 0x7d, 0xf7, 0x72, 0x9c, 0xea, 0xcb, 0x26, 0xdb, 0x85, 0xe5,
	0xa3, 0x68, 0x84, 0x41, 0x58, 0x19, 0x89, 0xac, 0x82, 0xff, 0x1f, 0xb2, 0x2a, 0xce, 0xb8, 0xf9,
	0x19, 0xe1, 0xd9, 0x66, 0xd6, 0x3f, 0xb2, 0x40, 0xec, 0x2e, 0x06, 0xc5, 0xe4, 0x54, 0x55, 0x30,
	0xaf, 0x56, 0x70, 0xd8, 0x8e, 0x13, 0x55, 0x48, 0x27, 0x4c, 0x7d, 0xaf, 0x6d, 0xe5, 0xf7, 0xda,
	0xd7, 0x61, 0x45, 0x1d, 0x9f, 0x68, 0x72, 0xcc, 0xd3, 0x48, 0x90, 0x6f, 0xe9, 0x78, 0x25, 0xe8,
	0xe0, 0x63, 0x58, 0x9b, 0x11, 0x67, 0x51, 0x55, 0x18, 0x69, 0x16, 0x72, 0xd1, 0x53, 0x58, 0xa3,
	0x84, 0xb1, 0x90, 0x5c, 0xbd, 0xd4, 0x1d, 0x09, 0x1d, 0x21, 0x79, 0x53, 0xb9, 0xe9, 0x5d, 0x4f,
	0xf5, 0xd0, 0x69, 0x64, 0x82, 0x27, 0x3a, 0xbb, 0xc0, 0xb6, 0xfb, 0xeb, 0x1a, 0x30, 0x79, 0xc7,
	0xfb, 0x76, 0x27, 0xc6, 0x9d, 0x48, 0xd2, 0xe9, 0x44, 0x5f, 0x93, 0x64, 0xc7, 0xbd, 0x29, 0xb7,
	0x6f, 0xcf, 0x17, 0xc7, 0x54, 0xc6, 0x48, 0xb0, 0xa1, 0xb2, 0x2a, 0xd9, 0x71, 0x7f, 0x5b, 0xc3,
	0xcc, 0x25, 0x31, 0x91, 0xec, 0x01, 0xb4, 0x85, 0x9f, 0x0e, 0xb9, 0xd0, 0x55, 0x98, 0xab, 0xb2,
	0x0a, 0x63, 0x30, 0x36, 0x7f, 0x20, 0x87, 0x55, 0x3c, 0x55, 0xc8, 0x83, 0x5d, 0xe8, 0xdb, 0x03,
	0x15, 0xca, 0xda, 0x28, 0x66, 0xc5, 0xcb, 0x9a, 0x2f, 0x49, 0x67, 0xeb, 0xee, 0x97, 0x35, 0xe8,
	0xed, 0xf3, 0x49, 0x38, 0xbf, 0xae, 0x72, 0x47, 0x39, 0xb2, 0x7a, 0x5e, 0x39, 0xb4, 0x08, 0xca,
	0x6e, 0xec, 0xe5, 0x0f, 0xf4, 0x23, 0xe8, 0x3d, 0x4e, 0xd3, 0x38, 0x95, 0xaf, 0x26, 0x26, 0x9f,
	0xac, 0x51, 0x40, 0xa4, 0x36, 0xaa, 0x76, 0x2c, 0xdf, 0xfb, 0x74, 0x4e, 0xa6, 0xba, 0xee, 0x5f,
	0x0b, 0x09, 0xbe, 0x7e, 0x14, 0x2c, 0x17, 0xdc, 0xe4, 0xa5, 0x44, 0x4c, 0x33, 0xfd, 0x50, 0x22,
	0x7b, 0x68, 0x18, 0x49, 0x1a, 0x0f, 0x53, 0x9e, 0x65, 0xba, 0x8c, 0xab, 0xfb, 0x28, 0x30, 0x47,
	0xb1, 0x54, 0x16, 0x20, 0x3b, 0x92, 0x53, 0xca, 0xfd, 0xb1, 0xca, 0x01, 0x54, 0x8f, 0xdd, 0x83,
	0x3e, 0x21, 0x1c, 0xa8, 0xc7, 0xad, 0xa5, 0x3c, 0xf7, 0xb2, 0x16, 0xe7, 0xf5, 0x78, 0xde, 0x71,
	0xff, 0xd9, 0x80, 0x8b, 0xdb, 0x29, 0xf7, 0x45, 0x5e, 0x1f, 0xd3, 0x0b, 0x78, 0x39, 0x5b, 0x96,
	0xcb, 0x6e, 0xd8, 0xaf, 0x93, 0x33, 0x95, 0x68, 0xb3, 0xac, 0x96, 0xbd, 0x2c, 0x7a, 0x12, 0x0a,
	0x02, 0xdc, 0x07, 0xe9, 0x64, 0x74, 0x97, 0xbd, 0xab, 0x4b, 0x40, 0x68, 0x04, 0x1b, 0x64, 0x4e,
	0x95, 0x22, 0xcf, 0x2b, 0x63, 0x77, 0xaa, 0xcb, 0xd8, 0xc5, 0x3a, 0xd1, 0x56, 0xb9, 0xe6, 0x7c,
	0xeb, 0x8c, 0x89, 0xaa, 0x0b, 0xd0, 0x4c, 0x25, 0xbd, 0x3d, 0x59, 0xfd, 0xc4, 0xf6, 0x4b, 0xd7,
	0x90, 0xbf, 0x4e, 0x21, 0xf8, 0xcb, 0x1a, 0x5c, 0x52, 0xae, 0x7e, 0x46, 0xab, 0x78, 0xe7, 0xa1,
	0x35, 0xa9, 0x20, 0x35, 0x98, 0xbf, 0x4a, 0x4f, 0x61, 0x22, 0x4d, 0x4a, 0xbe, 0x4e, 0x9d, 0xe8,
	0x81, 0x8c, 0x25, 0x85, 0xaa, 0xaa, 0xa1, 0x91, 0x98, 0xb9, 0x8e, 0x1b, 0x96, 0x8e, 0xdd, 0xef,
	0xc2, 0x9a, 0x37, 0x9d, 0x6c, 0x4d, 0xc2, 0x1f, 0xfb, 0x91, 0xd0, 0x22, 0xdd, 0x84, 0xbe, 0xa9,
	0xf8, 0x1e, 0x98, 0x33, 0xd3, 0x33, 0xb0, 0xdd, 0xfc, 0x8d, 0xbb, 0x6e, 0xd5, 0x95, 0x4f, 0x6d,
	0xcf, 0xaf, 0x79, 0x99, 0xf4, 0xb8, 0x56, 0x7a, 0x03, 0xd0, 0xa6, 0x55, 0x2f, 0x9a, 0xd6, 0x59,
	0x8f, 0x28, 0xd6, 0x89, 0x6f, 0x16, 0x4f, 0xfc, 0x4f, 0x0b, 0xce, 0xff, 0x6b, 0xcc, 0xad, 0x18,
	0x6a, 0xc7, 0x6f, 0xfa, 0xee, 0x8f, 0x66, 0xca, 0xd6, 0xf3, 0xfc, 0xca, 0x7c, 0xfe, 0xda, 0x1c,
	0x55, 0xd5, 0x18, 0xdb, 0xee, 0xa7, 0xc8, 0x97, 0x8a, 0xd9, 0xfa, 0xb1, 0x7b, 0x61, 0xbe, 0xe4,
	0xb6, 0xd1, 0x9f, 0x2f, 0xea, 0xe9, 0xb4, 0x2b, 0x68, 0x14, 0x4b, 0x1e, 0x18, 0x9e, 0xb4, 0x7b,
	0xc0, 0xf6, 0x1c, 0xf7, 0x50, 0xfd, 0x9b, 0x03, 0xc5, 0x8f, 0x79, 0x82, 0x68, 0xe6, 0x75, 0x8b,
	0x39, 0xde, 0x5f, 0x52, 0x6d, 0x95, 0xd8, 0x74, 0x7f, 0x62, 0xdb, 0xa4, 0x0e, 0x45, 0x0f, 0x4b,
	0x17, 0xbf, 0xf9, 0x29, 0x5d, 0xe9, 0x82, 0xb8, 0x0a, 0x8d, 0xed, 0x71, 0xa8, 0x0c, 0x15, 0x9b,
	0xee, 0xc7, 0x70, 0x09, 0x95, 0x98, 0xc6, 0xa3, 0xaf, 0xf0, 0x04, 0xa1, 0xcb, 0x14, 0xf5, 0xbc,
	0x4c, 0xe1, 0xee, 0xcf, 0x32, 0x98, 0xb7, 0x62, 0xb3, 0x75, 0xf5, 0xd2, 0xd6, 0x19, 0x43, 0x50,
	0x7e, 0xe9, 0xde, 0xbf, 0xfb, 0xd0, 0xde, 0x8e, 0x53, 0xee, 0xed, 0x6d, 0xb3, 0x9b, 0xd0, 0x79,
	0x1a, 0x65, 0x82, 0x7e, 0xf6, 0xa0, 0x1a, 0x16, 0xfd, 0x45, 0x34, 0xe8, 0xa8, 0xdf, 0x22, 0x32,
	0xf7, 0x1c, 0x7b, 0x1d, 0x96, 0xe4, 0xe3, 0x05, 0x5b, 0x53, 0xf5, 0xf3, 0xfc, 0x45, 0x61, 0xa0,
	0x7f, 0x09, 0x71, 0xcf, 0xb1, 0x4d, 0xe8, 0x9a, 0x57, 0x09, 0xb6, 0x9e, 0xfb, 0x09, 0x0b, 0x3b,
	0x9f, 0x41, 0xf2, 0x95, 0xaf, 0x13, 0x92, 0x6f, 0xe1, 0xa5, 0xc2, 0xe6, 0xfb, 0x80, 0xea, 0xe0,
	0xf6, 0x8f, 0x26, 0x15, 0xf8, 0xe7, 0x4b, 0xff, 0x71, 0xb8, 0xe7, 0xd8, 0x1b, 0xd0, 0x56, 0xb5,
	0x7e, 0xc6, 0x66, 0x0b, 0xff, 0x03, 0xf3, 0xe2, 0x4b, 0xa2, 0x43, 0x5e, 0xb5, 0x67, 0x17, 0x72,
	0xd9, 0x6d, 0x02, 0x4b, 0xa4, 0x77, 0x60, 0x75, 0x5f, 0x96, 0xe6, 0xf3, 0xf7, 0x61, 0xf3, 0x9f,
	0x80, 0x01, 0x15, 0xa6, 0x78, 0x03, 0xda, 0xaa, 0x9a, 0x2f, 0xa5, 0x29, 0x96, 0xf6, 0x0b, 0xa8,
	0x77, 0xa1, 0xff, 0x84, 0xe7, 0xff, 0x4f, 0xb1, 0xf3, 0x85, 0x37, 0xb2, 0xdd, 0x9d, 0x41, 0xf1,
	0xd1, 0xcc, 0x3d, 0xc7, 0xee, 0xd3, 0x43, 0x8f, 0xf5, 0xd4, 0xb6, 0x5a, 0x22, 0xc9, 0x06, 0x2b,
	0x05, 0x08, 0xea, 0xf5, 0x6d, 0x22, 0xc2, 0x39, 0x3f, 0x3d, 0xfd, 0x82, 0x0e, 0xe4, 0x0b, 0xe4,
	0x7a, 0x07, 0xfa, 0xca, 0x56, 0xe4, 0x13, 0xfa, 0xba, 0xfe, 0xd5, 0xcb, 0x7e, 0x5a, 0x90, 0x3a,
	0x26, 0x08, 0xe9, 0xae, 0x6f, 0xfd, 0x52, 0x92, 0xb1, 0x8b, 0x86, 0xa4, 0xf0, 0x93, 0xc9, 0xa0,
	0x6f, 0xfd, 0xdb, 0x81, 0x74, 0x1f, 0xc2, 0x4a, 0xf1, 0x1f, 0x32, 0x76, 0x79, 0xee, 0x7f, 0x65,
	0x15, 0x4b, 0x7b, 0x5f, 0xfd, 0xc9, 0x12, 0x87, 0xdc, 0x62, 0x51, 0xb5, 0xbe, 0x59, 0xda, 0x8f,
	0x60, 0x6d, 0xe6, 0x25, 0x95, 0x5d, 0x2d, 0xa0, 0x95, 0x1e, 0x58, 0x8b, 0x66, 0xfd, 0x16, 0x34,
	0xd1, 0x43, 0x6a, 0xad, 0x99, 0x9c, 0x7a, 0x60, 0x00, 0xea, 0x04, 0xbb, 0xe7, 0xee, 0xd6, 0x10,
	0x1b, 0xdd, 0x98, 0xc4, 0xb6, 0xf2, 0xdb, 0x81, 0x01, 0xd8, 0xd8, 0x1f, 0x01, 0xe4, 0xd9, 0x26,
	0xcb, 0x9f, 0x27, 0xec, 0x8b, 0xc8, 0xa0, 0x04, 0x2e, 0xd1, 0xe7, 0x71, 0x53, 0xd2, 0xcf, 0xdc,
	0xa0, 0x06, 0x25, 0xb0, 0x4d, 0xbf, 0x05, 0x3d, 0x2b, 0xf8, 0x49, 0x6d, 0xce, 0x5e, 0x85, 0x06,
	0x65, 0xb8, 0xcd, 0x62, 0x07, 0xfa, 0xf6, 0x7f, 0x74, 0xec, 0x52, 0xee, 0x56, 0x0b, 0xff, 0xf1,
	0x0d, 0x66, 0x06, 0x6c, 0x2e, 0x9f, 0x00, 0xe4, 0x8e, 0x5b, 0x1d, 0xd8, 0xb2, 0x23, 0x1f, 0x94,
	0xc0, 0x86, 0xfe, 0x76, 0x8d, 0xe4, 0x38, 0x5f, 0x4a, 0x7d, 0xd8, 0xac, 0x87, 0x1f, 0x9c, 0x91,
	0x22, 0x91, 0x1c, 0x4f, 0x60, 0xb5, 0x9c, 0x6d, 0x49, 0x33, 0x2b, 0x5e, 0xb7, 0x07, 0x57, 0x2c,
	0x58, 0x25, 0xa3, 0x67, 0x70, 0xbe, 0x14, 0xf4, 0x59, 0x55, 0xaa, 0x55, 0x90, 0xab, 0x3a, 0x4b,
	0x20, 0x76, 0x7b, 0xb0, 0x5a, 0x8e, 0x1b, 0xec, 0x8a, 0xb6, 0xe1, 0x8a, 0x70, 0x34, 0xa8, 0x1c,
	0xb4, 0x39, 0x3e, 0x46, 0x01, 0x0b, 0xd9, 0x83, 0x5e, 0xa8, 0xfd, 0x3e, 0xae, 0x05, 0xab, 0x4a,
	0x33, 0x90, 0xcd, 0xe1, 0x12, 0xfd, 0xb2, 0x7a, 0xff, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb5,
	0x09, 0x2e, 0x04, 0xc0, 0x2a, 0x00, 0x00,
}
