syntax = "proto3";

package pb;

service CoreRPC {
    rpc ListPods(Empty) returns (Pods) {};
    rpc AddPod(AddPodOptions) returns (Pod) {};
    rpc RemovePod(RemovePodOptions) returns (Empty) {};
    rpc GetPod(GetPodOptions) returns (Pod) {};

    rpc AddNode(AddNodeOptions) returns (Node) {};
    rpc RemoveNode(RemoveNodeOptions) returns (Pod) {};
    rpc GetNode(GetNodeOptions) returns (Node) {};
    rpc ListPodNodes(ListNodesOptions) returns (Nodes) {};
    rpc GetContainer(ContainerID) returns (Container) {};
    rpc GetContainers(ContainerIDs) returns (Containers) {};
    rpc ListNetworks(GetPodOptions) returns (Networks) {};
    rpc SetNodeAvailable(NodeAvailable) returns (Node) {};

    rpc BuildImage(BuildImageOptions) returns (stream BuildImageMessage) {};
    rpc CreateContainer(DeployOptions) returns (stream CreateContainerMessage);
    rpc RunAndWait(stream RunAndWaitOptions) returns (stream RunAndWaitMessage);
    rpc RemoveContainer(ContainerIDs) returns (stream RemoveContainerMessage);
    rpc ReallocResource(ReallocOptions) returns (stream ReallocResourceMessage);
    rpc RemoveImage(RemoveImageOptions) returns (stream RemoveImageMessage);
    rpc Backup(BackupOptions) returns (BackupMessage) {};
}

message Empty {}

// 对的, protobuf 就是这样...
message Pod {
    string name = 1;
    string desc = 2;
}

message Pods {
    repeated Pod pods = 1;
}

message Network {
    string name = 1;
    repeated string subnets = 2;
}

message Networks {
    repeated Network networks = 1;
}

message Node {
    string name = 1;
    string endpoint = 2;
    string podname = 3;
    bool public = 4;
    map<string, int64> cpu = 5;
    string info = 6;
    bool available = 7;
    string zone = 8;
}

message Nodes {
    repeated Node nodes = 1;
}

message NodeAvailable {
    string nodename = 1;
    string podname = 2;
    bool available = 3;
}

message Container {
    string id = 1;
    string podname = 2;
    string nodename = 3;
    string name = 4;
    string info = 5;
}

message Containers {
    repeated Container containers = 1;
}

// protobuf 不允许基本类型做 message
// 只好把这样的类型也封装起来
message ContainerID {
    string id = 1;
}

message ContainerIDs {
    repeated ContainerID ids = 1;
}

message ReallocOptions {
    ContainerIDs ids = 1;
    double cpu = 2;
    int64 mem = 3;
}

message AddPodOptions {
    string name = 1;
    string favor = 2;
    string desc = 3;
}

message RemovePodOptions {
    string name = 1;
}

message GetPodOptions {
    string name = 1;
}

message AddNodeOptions {
    string nodename = 1;
    string endpoint = 2;
    string podname = 3;
    string cafile = 4;
    string certfile = 5;
    string keyfile = 6;
    bool public = 7;
}

message RemoveNodeOptions {
    string nodename = 1;
    string podname = 2;
}

message GetNodeOptions {
    string podname = 1;
    string nodename = 2;
}

message ListNodesOptions {
    string podname = 1;
    bool all = 2;
}

message Build {
    string base = 1;
    string repo = 2;
    string version = 3;
    string working_dir = 4;
    repeated string commands = 5;
    map<string, string> artifacts = 6;
    map<string, string> cache = 7;
}

message Builds {
    repeated string stages = 1;
    map<string, Build> builds = 2;
}

message BuildImageOptions {
    string name = 1;
    string user = 2;
    int32 uid = 3;
    string tag = 4;
    Builds builds = 5;
}

message HookOptions {
    string after_start = 1;
    string before_stop = 2;
}

message HealthCheckOptions {
    int32 port = 1;
    string url = 2;
    int32 code = 3;
}

message EntrypointOptions {
    string name = 1;
    string command = 2;
    string privileged = 3;
    string working_dir = 4;
    string log_config = 5;
    repeated string ports = 6;
    HealthCheckOptions healcheck = 7;
    HookOptions hook = 8;
    string restart_policy = 9;
    repeated string extra_hosts = 10;
}

message DeployOptions {
    string name = 1;
    EntrypointOptions entrypoint = 2;
    string podname = 3;
    string nodename = 4;
    string image = 5;
    string extra_args = 6;
    double cpu_quota = 7;
    int64 memory = 8;
    int32 count = 9;
    repeated string env = 10;
    repeated string dns = 11;
    repeated string volumes = 12;
    map<string, string> networks = 13;
    string networkmode = 14;
    string user = 15;
    bool debug = 16;
    bool openStdin = 17;
    map<string, string> meta = 18;
}

message RemoveImageOptions {
    string podname = 1;
    string nodename = 2;
    repeated string images = 3;
}

message BackupOptions {
  string id = 1;
  string src_path = 2;
}

message ErrorDetail {
    int64 code = 1;
    string message = 2;
}

message BuildImageMessage {
    string status = 1;
    string progress = 2;
    string error = 3;
    string stream = 4;
    ErrorDetail error_detail = 5;
}

message CreateContainerMessage {
    string podname = 1;
    string nodename = 2;
    string id = 3;
    string name = 4;
    string error = 5;
    bool success = 6;
    map<string, int64> cpu = 7;
    int64 memory = 8;
    map<string, string> ips = 9;
}

message RunAndWaitMessage {
    string container_id = 1;
    bytes data = 2;
}

message RemoveImageMessage {
    string image = 1;
    bool success = 2;
    repeated string messages = 3;
}

message RemoveContainerMessage {
    string id = 1;
    bool success = 2;
    string message = 3;
}

message ReallocResourceMessage {
    string id = 1;
    bool success = 2;
}

message BackupMessage {
  string status = 1;
  int64 size = 2;
  string error = 3;
  string path = 4;
}

message RunAndWaitOptions{
    DeployOptions DeployOptions = 1;
    bytes Cmd = 2;
    int32 Timeout = 3;
} 
